<?php

/**
 * @file
 * ITG Videogallery module.
 *
 * Provides customizations and functions for Video Gallery.
 *
 */

/**
 * Implements hook_block_info().
 */
function itg_videogallery_block_info() {
  $blocks['videogallery_tab_form_block'] = array(
    'info' => t('Video Gallery Form Tab Block'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  return $blocks;
}

/**
 * Implements hook_block_view()
 * {@inheritdoc}
 */
function itg_videogallery_block_view($delta = '') {
  global $user;
  $block = array();
  $data = '';
  switch ($delta) {
    case 'videogallery_tab_form_block':
      $block['content'] = theme('videogallery_tab_form_block', array('data' => $data));
      break;
  }

  return $block;
}

/**
 * Implements hook_theme().
 * {@inheritdoc}
 */
function itg_videogallery_theme($existing, $type, $theme, $path) {
  $themes = array(
    'videogallery_tab_form_block' => array(
      'template' => 'videogallery-form-tab-template',
      'path' => drupal_get_path('module', 'itg_videogallery') . '/templates',
      'variables' => array('data' => NULL),
    ),
    'videogallery_node_form' => array(
      'arguments' => array('form' => NULL),
      'template' => 'videogallery-node-form',
      'path' => drupal_get_path('module', 'itg_videogallery') . '/templates',
      'render element' => 'form',
    ),
  );

  return $themes;
}

/**
 * Implemets hook_form_alter().
 * @param array $form
 * @param array $form_state
 * @param string $form_id
 */
function itg_videogallery_form_alter(&$form, &$form_state, $form_id) {
  global $user, $base_url;

  switch ($form_id) {
    case 'videogallery_node_form':
      unset($form['actions']['preview_changes']);
      $form['#after_build'][] = 'itg_videogallery_after_build';
      // $form['actions']['submit']['#submit'][] = 'itg_story_form_custom_callback';
      $form['upload'] = array(
        '#type' => 'plupload',
        '#weight' => 21,
        '#upload_validators' => array(
          'file_validate_size' => array(50 * 1024 * 1024),
          'file_validate_extensions' => array("mp4"),
        ),
          //'#description' => t('88x66 smallest size of image.'),
      );
      $form['#validate'][] = 'itg_videogallery_custom_validate';
      $form['actions']['cancel'] = array(
        '#markup' => l(t('Cancel'), 'manage-videogallery', array('attributes' => array('class' => 'button'))),
        '#weight' => 20,
      );
      break;
  }
}

/**
 * Implements function for custom validate.
 * @param array $form
 * @param array $form_state
 */
function itg_videogallery_custom_validate($form, &$form_state) {
  //schedule date & expiry date validation
  $schedule_date = strtotime($form_state['values']['field_story_schedule_date_time'][LANGUAGE_NONE][0]['value']);
  $expiry_date = strtotime($form_state['values']['field_story_expiry_date'][LANGUAGE_NONE][0]['value']);
  if (isset($expiry_date) && ($schedule_date > $expiry_date)) {
    form_set_error('field_story_expiry_date', t("Expiry date should be greater then schedule start date"));
  }
  //comment question validation
  $comment_checkbox = $form_state['values']['field_video_configurations'][LANGUAGE_NONE][0]['value'];
  if (isset($comment_checkbox) && $form_state['values']['field_story_comment_question'][LANGUAGE_NONE][0]['value'] == '') {
    form_set_error('field_story_comment_question', t("Please enter the comment question."));
  }
}

/**
 * After build for story form.
 * {@inheritdoc}
 */
function itg_videogallery_after_build($form, &$form_state) {

  global $user, $base_url;
  $settings = array();
  $settings['base_url'] = $base_url;
  $settings['uid'] = $user->uid;
  drupal_add_js(array('itg_videogallery' => array('settings' => $settings)), array('type' => 'setting'));
  drupal_add_js(drupal_get_path('module', 'itg_videogallery') . '/js/itg_videogallery.js', array('weight' => 1));
  return $form;
}

/**
 * Implements hook_form_FORMID_alter().
 * @param array $form
 * @param array $form_state
 * @param array $form_id  
 */
function itg_videogallery_form_videogallery_node_form_alter(&$form, &$form_state, $form_id) {
  global $base_url, $user;
  // code for story expiry date field show and hide
  $form['field_story_expiry_date']['#states'] = array(
    'visible' => array(
      ':input[name="field_story_expires[und][Yes]"]' => array('checked' => TRUE),
    )
  );

  // code for Comment Question field hide and show
  $form['field_story_comment_question']['#states'] = array(
    'visible' => array(
      ':input[name="field_video_configurations[und][comment]"]' => array('checked' => TRUE),
    ),
    'required' => array(
      ':input[name="field_video_configurations[und][comment]"]' => array('checked' => TRUE),
    )
  );


  $form['field_story_posted_by_twitter']['#default_value'] = $user->mail;
  $form['field_story_posted_by_instagram']['#default_value'] = $user->mail;
}

/**
 * Implement hook_form_FORM_ID_alter().
 * @param array $form
 * @param array $form_state
 * @param string $form_id
 */
function itg_videogallery_form_views_exposed_form_alter(&$form, &$form_state, $form_id) {
  if ($form["#id"] == 'views-exposed-form-manage-videogallery-page') {
    $form['title']['#autocomplete_path'] = 'content-title-list/videogallery/autocomplete';
    $form['title']['#attributes'] = array('placeholder' => t('Title'));
    $form['nid']['#autocomplete_path'] = 'content-nid-list/videogallery/autocomplete';
    $form['nid']['#attributes'] = array('placeholder' => t('Video Id'));
  }
}

/**
 * Implement hook_views_pre_render().
 * {@inheritdoc}
 */
function itg_videogallery_views_pre_render(&$view) {
  if ($view->name == "manage_videogallery") {
    $header_content_video = '<span class="count">Count(' . $view->total_rows . ')&nbsp;</span>';
    $header_content_video .= l(t('Create Video'), 'node/add/videogallery', array('query' => array('destination' => 'manage-videogallery')));
    $view->attachment_before = $header_content_video;
  }
}
