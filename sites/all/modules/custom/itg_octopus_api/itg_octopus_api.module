<?php

/**
 * @file
 * ITG Octopus Api module.
 *
 * Fetch the xml value in database from octopus api.
 *
 */

/**
 * Implements hook_init()
 */
function itg_octopus_api_init() {
  global $base_url;
  global $theme;
  $settings = array();
  $settings['loader_url'] = base_path() . drupal_get_path('theme', $theme) . '/images/loader.svg';
  drupal_add_js(array('itg_octopus_holder' => array('settings' => $settings)), array('type' => 'setting'));
}

/**
 * Implements hook_menu().
 * {@inheritdoc}
 */
function itg_octopus_api_menu() {
  $items['itg-octopus-rundown'] = array(
    'title' => 'api callback menu',
    'page callback' => 'itg_octopus_api_rundown',
    'access callback' => TRUE,
    'file' => 'includes/itg_octopus_api.inc',
  );
  $items['rundown/listing'] = array(
    'title' => 'Rundown Listing',
    'page callback' => 'itg_octopus_api_rundown_listing',
    'access arguments' => array('access content'),
    'file' => 'includes/itg_octopus_api.inc',
  );

  $items['itg-octopus/dashboard'] = array(
    'title' => 'ITG Octopus',
    'page callback' => 'itg_octopus_api_rundown_listing',
    'access arguments' => array('access content'),
    'file' => 'includes/itg_octopus_api.inc',
  );

  $items['itg-octopus/dashboard/octopus'] = array(
    'title' => 'ITG Octopus',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  $items['itg-octopus/dashboard/rfa'] = array(
    'title' => 'ITG RFA',
    'page callback' => 'itg_octopus_api_rundown_listing',
    'access arguments' => array('access content'),
    'file' => 'includes/itg_octopus_api.inc',
    'type' => MENU_LOCAL_TASK,
  );

  $items['slug/detail/%'] = array(
    'title' => 'Rundown Slug Detail',
    'page callback' => 'itg_octopus_api_rundown_detail',
    'access callback' => TRUE,
    'file' => 'includes/itg_octopus_api.inc',
  );

  $items['slug_title/autocomplete'] = array(
    'page callback' => 'demo_autocomplete',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/itg_octopus_api.inc',
  );
  $items['slug-details/%'] = array(
    'page callback' => 'slug_details',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/itg_octopus_api.inc',
  );

  $items['admin/config/system/itg_octopus'] = array(
    'title' => 'ITG Octopus Settings',
    'description' => 'ITG Octopus Settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('itg_octopus_api_settings'),
    'access arguments' => array('access content'),
    'file' => 'includes/itg_octopus_api.inc',
  );

  $items['slug-complete-details/nojs/%'] = array(
    'page callback' => 'itg_octopus_slug_details',
    'page arguments' => array(1, 2),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/itg_octopus_api.inc',
  );

  $items['slug-complete-details/ajax/%'] = array(
    'page callback' => 'itg_octopus_slug_details',
    'page arguments' => array(1, 2),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/itg_octopus_api.inc',
  );

  return $items;
}

/**
 * Implements hook_permission.
 * {@inheritdoc}
 */
function itg_octopus_api_permission() {
  return array(
    'authorized user rundown detail' => array(
      'title' => t('Rundown detail page'),
      'description' => t('Octopus rundown detail page permission'),
    ),
    'authorized user rundown listing' => array(
      'title' => t('Rundown listing page'),
      'description' => t('Octopus rundown listing page permission'),
    ),
  );
}

/**
 * Implements hook_theme()
 * {@inheritdoc}
 */
function itg_octopus_api_theme($existing, $type, $theme, $path) {
  $themes = array(
    'rundown_slug_detail' => array(
      'template' => 'rundown-slug-detial',
      'path' => drupal_get_path('module', 'itg_octopus_api') . '/templates',
    ),
    'oct_slug_detail' => array(
      'template' => 'oct-slug-detail',
      'path' => drupal_get_path('module', 'itg_octopus_api') . '/templates',
    ),
  );
  return $themes;
}

/**
 * Implements hook_form().
 * {@inheritdoc}
 */
function itg_octopus_api_form($form, &$form_state) {
  $form = array();

  $form['category'] = array(
    '#type' => 'textfield',
    '#title' => t('Category'),
    '#maxlength' => 255,
    '#size' => 30,
    '#default_value' => isset($_GET['category']) ? $_GET['category'] : '',
    '#weight' => 1,
  );

  $form['video_id'] = array(
    '#type' => 'textfield',
    '#title' => t('Video ID'),
    '#maxlength' => 255,
    '#size' => 30,
    '#default_value' => isset($_GET['video_id']) ? $_GET['video_id'] : '',
    '#weight' => 2,
  );


  $form['title'] = array(
    '#type' => 'textfield',
    '#title' => t('Video Title'),
    '#maxlength' => 255,
    '#size' => 30,
    '#autocomplete_path' => 'slug_title/autocomplete',
    '#default_value' => isset($_GET['title']) ? $_GET['title'] : '',
    '#weight' => 3,
  );



  $form['start_date'] = array(
    '#type' => 'date_popup',
    '#title' => t('Start Date'),
    '#default_value' => "",
    '#date_format' => "Y-m-d",
    '#year_start' => '-99',
    '#year_end' => '+0',
    '#weight' => 4,
    '#default_value' => isset($_GET['start_date']) ? $_GET['start_date'] : '',

  );

  $form['end_date'] = array(
    '#type' => 'date_popup',
    '#title' => t('End Date'),
    '#default_value' => "",
    '#date_format' => "Y-m-d",
    '#year_start' => '-99',
    '#year_end' => '+0',
    '#weight' => 5,
    '#default_value' => isset($_GET['end_date']) ? $_GET['end_date'] : '',

  );

  $form['submit'] = array(
    '#value' => 'Apply',
    '#type' => 'submit',
    '#attributes' => array('class' => array('octopus-apply btn-small')),
    '#prefix' => '<div class = "octopus-filter-btn">',
    '#suffix' => '<a class="btn-reset  btn-small" href="' . base_path() . 'rundown/listing">Reset</a></div>',
    '#weight' => 7,
  );
  return $form;
}

/**
 * Implements hook_submit()
 * {@inheritdoc}
 */
function itg_octopus_api_form_submit($form, &$form_state) {

  $form_state['redirect'] = array(
    'rundown/listing',
    array(
      'query' => array(
        'category' => $form_state['input']['category'],
        'video_id' => $form_state['input']['video_id'],
        'title' => $form_state['input']['title'],
        'start_date' => $form_state['input']['start_date']['date'],
        'end_date' => $form_state['input']['end_date']['date'],
        'rundowntype' => isset($_GET['rundowntype']) ? $_GET['rundowntype'] : '',
      ),
    ),
  );
}

/**
 * Implement hook_form_alter
 * {@inheritdoc}
 */
function itg_octopus_api_form_alter(&$form, &$form_state, $form_id) {
//  p($form);

  if ($form_id == 'story_node_form') {
    $slug_id = $_GET['story_id'];
    $element_type = $_GET['element'];
    if (!empty($slug_id) && is_numeric($slug_id) && $element_type == 'std') {
      $slug_data = itg_octopus_api_slug_data($slug_id, $element_type);
      $form['title']['#default_value'] = $slug_data->story_title;

      if (strpos($slug_data->text, 'CDATA') !== false) {
        $body_slug = explode('[', $slug_data->text);
        unset($body_slug[0]);
        unset($body_slug[1]);
        $cdata_last = implode('', $body_slug);
        $explode_cdata = explode(']', $cdata_last);
      }
      $form['body'][LANGUAGE_NONE][0]['#default_value'] = $explode_cdata[0];
    }
  }

  if ($form_id == 'videogallery_node_form') {
    $slug_id = $_GET['story_id'];
    $element_type = $_GET['element'];
    if (!empty($slug_id) && is_numeric($slug_id) && $element_type == 'vo') {
      $slug_data = itg_octopus_api_slug_data($slug_id, $element_type);

      $form['title']['#default_value'] = $slug_data->story_title;
      if (strpos($slug_data->text, 'CDATA') !== false) {
        $body_slug = explode('[', $slug_data->text);
        unset($body_slug[0]);
        unset($body_slug[1]);
        $cdata_last = implode('', $body_slug);
        $explode_cdata = explode(']', $cdata_last);
      }
      $form['field_story_expert_description'][LANGUAGE_NONE][0]['value']['#value'] = $explode_cdata[0];
    }
  }
}

function itg_octopus_api_slug_data($slug_id, $element_type) {
  $query = db_select('itg_octopus_slug', 'ios');
  $query->leftJoin('itg_element_clip', 'iec', 'iec.storyid = ios.storyid');
  $query->fields('ios');
  $query->fields('iec');
  $query->condition('ios.storyid', $slug_id, '=');
  $query->condition('iec.element_type', $element_type, '=');
  $result = $query->execute()->fetchAll();
  $slug_data = reset($result);
  return $slug_data;
}

/**
 * Implements hook_cronapi().
 * {@inheritdoc}
 */
function itg_octopus_api_cronapi($op, $job = NULL) {
  $items['itg_octopus_cron'] = array(
    'description' => 'This cron is for storing rundown with its item from octopus third party URL',
    'callback' => 'itg_octopus_api_rundown',
    'file' => 'includes/itg_octopus_api.inc',
  );
  return $items;
}
