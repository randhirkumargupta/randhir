<?php
/**
 * Define constant for authentication keys
 */
define('CONSUMER_KEY', 'oynNx70nQQo8aWUlcYtc7BUDX');
define('CONSUMER_SECRET', '2RsvsZLF5hpEcFIjHvqbUNxoeqFStyB9ZEAxognUjVaBWz2r8X');
define('OAUTH_TOKEN', '732461289138585601-ZGsz2F1L9hHH1OBVGAWyiA3Zb9IoxlX');
define('OAUTH_TOKEN_SECRET', 'hp6qwLPSek76vapx9ReocpXdpXa4078SIoKAe3h0m5Xt7');

require_once 'vendor/autoload.php';

    
/**
 * Implements hool_menu()
 * @return array
 */
function itg_twitter_post_menu() {  
  $items['twitter-post'] = array(
    'title' => t('Twitter post'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('itg_twitter_post_form'),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,    
  );
  
  return $items;
}

function itg_twitter_post_form() {
  // Twitter Image
  $form['twitter_image'] = array(
    '#title' => t('Twitter Image'),
    '#type' => 'managed_file',    
    '#upload_location' => 'public://itg_twitter_img/',
    '#widget' => 'imce',
    '#preview' => TRUE,
    "#upload_validators" => array(
      "file_validate_extensions" => array("gif jpg"),
    ),    
  );
  // Twitter video
  $form['twitter_video'] = array(
    '#title' => t('Twitter Video'),
    '#type' => 'managed_file',    
    '#upload_location' => 'public://itg_twitter_video/',
    '#widget' => 'imce',
    '#preview' => TRUE,
    "#upload_validators" => array(
      "file_validate_extensions" => array("mp4 avi flv ogg 3gp"),
    ),    
  );
  // Submit button
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Share Content'),
  );
  
  return $form;
}

function itg_twitter_post_form_validate(&$form, &$form_state) {
  
}

function itg_twitter_post_form_submit(&$form, &$form_state) {  
  \Codebird\Codebird::setConsumerKey(CONSUMER_KEY, CONSUMER_SECRET);

  $cb = \Codebird\Codebird::getInstance();
  
  $cb->setToken(OAUTH_TOKEN, OAUTH_TOKEN_SECRET);
  
  /* Files
  $file = file_load($form_state['values']['twitter_image']);
  $path = drupal_realpath($file->uri);
  $media_files = [
    $path
  ];
// will hold the uploaded IDs
  $media_ids = [];

  foreach ($media_files as $file) {
    // upload all media files
    $reply = $cb->media_upload([
      'media' => $file
    ]);
    // and collect their IDs
    $media_ids[] = $reply->media_id_string;
  }
  // convert media ids to string list
  $media_ids = implode(',', $media_ids);
  
  // send Tweet with these medias
//  $reply = $cb->statuses_update([
//    'status' => 'These are some of my relatives.' ,
//    'media_ids' => $media_ids
//  ]);
  
  */
  // Video
  $file_obj = file_load($form_state['values']['twitter_video']);
  $file = drupal_realpath($file_obj);
  
  $size_bytes = filesize($file);
  $fp         = fopen($file, 'r');
  
  // INIT the upload

  $reply = $cb->media_upload([
    'command'     => 'INIT',
    'media_type'  => 'video/mp4',
    'total_bytes' => $size_bytes
  ]);
  
  $media_id = $reply->media_id_string;

  // APPEND data to the upload

  $segment_id = 0;

  while (! feof($fp)) {
    $chunk = fread($fp, 1048576); // 1MB per chunk for this sample    
    $reply = $cb->media_upload([
      'command'       => 'APPEND',
      'media_id'      => $media_id,
      'segment_index' => $segment_id,
      'media'         => $chunk
    ]);

    $segment_id++;
  }

  fclose($fp);
  

  // FINALIZE the upload

  $reply = $cb->media_upload([
    'command'       => 'FINALIZE',
    'media_id'      => $media_id
  ]);
  

  if ($reply->httpstatus < 200 || $reply->httpstatus > 299) {
    die('hi');
  }

  // Now use the media_id in a Tweet
  $reply = $cb->statuses_update([
    'status'    => 'Twitter now accepts video uploads.',
    'media_ids' => $media_id
  ]);
}