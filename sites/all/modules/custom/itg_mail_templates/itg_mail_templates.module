<?php

module_load_include('inc', 'itg_mail_templates', 'itg_mail_templates_tokens');

/*
 * Implements hook_form_alter
 */
function itg_mail_templates_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'mail_templates_node_form') {
    $table_data = itg_mail_templates_tokenstable();
    $form['#prefix'] = '<div class="get-tokens">Click 
      <a href="javascript:;" data-id="mail-templates-token">here</a> to get tokens</div>'.$table_data;
    $form['actions']['submit']['#suffix'] = '</div>';
    unset($form['field_mail_templates_category']['und']['#options']['_none']);
    $form['actions']['preview']['#access'] = FALSE;
    $form['actions']['delete']['#access'] = FALSE;
    $form['title']['#attributes'] = array('readonly' => 'readonly');
    drupal_add_js("jQuery('#edit-field-mail-templates-category-und').change(function(){
          var select_option = jQuery('#edit-field-mail-templates-category-und option:selected').text(); 
          jQuery('#edit-title').val(select_option);
        });", array('type' => 'inline', 'scope' => 'footer'));
    drupal_add_js("var selected_value = jQuery('.form-field-name-field-mail-templates-category select option:selected').val();
        jQuery('.node-mail_templates-form').find('.mail-template-category').hide().siblings('.' + selected_value).show();
        jQuery('.form-field-name-field-mail-templates-category').on('change', 'select', function(){
        var selected_value = jQuery(this).val();
        jQuery('.node-mail_templates-form').find('.mail-template-category').hide().siblings('.' + selected_value).show();
      });", array('type' => 'inline', 'scope' => 'footer'));
    
    if (!isset($_REQUEST['destination'])) {
        $destination = '';
    }
    else {
        $destination_array = explode('?', $_REQUEST['destination']);
        $destination = $destination_array[0];
    }

    $form['actions']['cancel'] = array(
        '#markup' => l(t('Cancel'), $destination, array('attributes' => array('class' => 'button'))),
        '#weight' => 20,
    );
  }
}

/**
 * Implements hook_node_validate().
 * {@inheritdoc}
 */
function itg_mail_templates_node_validate($node, $form, &$form_state) {
  if (empty($form['nid']['#value'])) {
    $title = isset($node->title) ? $node->title : '';
    $data_val['title'] = array();
    if ($node->title == 'Ask an Expert') {
      $expert_case = $node->field_ask_an_expert_case[LANGUAGE_NONE][0]['value'];
      $data_val['field_ask_an_expert_case_value'] = array();
      $query = db_select('node', 'n');
      $query->leftJoin('field_data_field_ask_an_expert_case', 'aaec', 'n.nid = aaec.entity_id');
      $query->condition('n.status', 1, '=');
      $query->fields('n', array('title', 'nid'));
      $query->fields('aaec', array('field_ask_an_expert_case_value'));
      $query->condition('n.title', $title, '=');
      $query->condition('n.type', 'mail_templates', '=');
      $result = $query->execute();
      $records = $result->fetchAll();
      foreach ($records as $k => $data_vals) {
        $data_val['title'] = $data_vals->title;
        $data_val['field_ask_an_expert_case_value'][] = $data_vals->field_ask_an_expert_case_value;
      }
      if ($data_val['title'] == $title && in_array($expert_case, $data_val['field_ask_an_expert_case_value'])) {
        form_set_error('title', t("Mail Template for @title against @expert_case already Exists, You can only update this mail template", array('@title' => $title, '@expert_case' => ucwords(str_replace('_', " ", $expert_case)))));
      }
    }

    if ($node->title == 'Follow Story') {
      $result = db_query("SELECT title from {node} n WHERE n.title = :title AND n.type = :type", array(":title" => $title, ":type" => "mail_templates"))->fetchField();
      if (!empty($result)) {
        form_set_error('title', t("Mail Template for @title already Exists, you can only update this mail template", array('@title' => $title)));
      }
    }

    if ($node->title == 'Sign up') {
      $result = db_query("SELECT title from {node} n WHERE n.title = :title AND n.type = :type", array(":title" => $title, ":type" => "mail_templates"))->fetchField();
      if (!empty($result)) {
        form_set_error('title', t("Mail Template for @title already Exists, you can only update this mail template", array('@title' => $title)));
      }
    }

    if ($node->title == 'Loyalty Points Expiration') {
      $result = db_query("SELECT title from {node} n WHERE n.title = :title AND n.type = :type", array(":title" => $title, ":type" => "mail_templates"))->fetchField();
      if (!empty($result)) {
        form_set_error('title', t("Mail Template for @title already Exists, you can only update this mail template", array('@title' => $title)));
      }
    }

    if ($node->title == 'Product Expiration') {
      $offer_period = $node->field_product_expiration_status[LANGUAGE_NONE][0]['value'];
      $data_val['field_product_expiration_status_value'] = array();
      $query = db_select('node', 'n');
      $query->leftJoin('field_data_field_product_expiration_status', 'pes', 'n.nid = pes.entity_id');
      $query->condition('n.status', 1, '=');
      $query->fields('n', array('title', 'nid'));
      $query->fields('pes', array('field_product_expiration_status_value'));
      $query->condition('n.title', $title, '=');
      $query->condition('n.type', 'mail_templates', '=');
      $result = $query->execute();
      $records = $result->fetchAll();
      foreach ($records as $k => $data_vals) {
        $data_val['title'] = $data_vals->title;
        $data_val['field_product_expiration_status_value'][] = $data_vals->field_product_expiration_status_value;
      }
      if ($data_val['title'] == $title && in_array($offer_period, $data_val['field_product_expiration_status_value'])) {
        form_set_error('title', t("Mail Template for @title against @offer_period already Exists, You can only update this mail template", array('@title' => $title, '@offer_period' => ucwords(str_replace('_', " ", $offer_period)))));
      }
    }

    if ($node->title == 'UGC') {
      $ugc_comment = $node->field_ugc_comments_status[LANGUAGE_NONE][0]['value'];
      $data_val['field_ugc_comments_status_value'] = array();
      $query = db_select('node', 'n');
      $query->leftJoin('field_data_field_ugc_comments_status', 'ucs', 'n.nid = ucs.entity_id');
      $query->condition('n.status', 1, '=');
      $query->fields('n', array('title', 'nid'));
      $query->fields('ucs', array('field_ugc_comments_status_value'));
      $query->condition('n.title', $title, '=');
      $query->condition('n.type', 'mail_templates', '=');
      $result = $query->execute();
      $records = $result->fetchAll();
      foreach ($records as $k => $data_vals) {
        $data_val['title'] = $data_vals->title;
        $data_val['field_ugc_comments_status_value'][] = $data_vals->field_ugc_comments_status_value;
      }
      if ($data_val['title'] == $title && in_array($ugc_comment, $data_val['field_ugc_comments_status_value'])) {
        form_set_error('title', t("Mail Template for @title against @ugc_comment already Exists, You can only update this mail template", array('@title' => $title, '@ugc_comment' => ucwords(str_replace('_', " ", $ugc_comment)))));
      }
    }

    if ($node->title == 'Task/Idea') {
      $task_status = $node->field_new_task_status[LANGUAGE_NONE][0]['value'];
      $data_val['field_new_task_status_value'] = array();
      $query = db_select('node', 'n');
      $query->leftJoin('field_data_field_new_task_status', 'nts', 'n.nid = nts.entity_id');
      $query->condition('n.status', 1, '=');
      $query->fields('n', array('title', 'nid'));
      $query->fields('nts', array('field_new_task_status_value'));
      $query->condition('n.title', $title, '=');
      $query->condition('n.type', 'mail_templates', '=');
      $result = $query->execute();
      $records = $result->fetchAll();
      foreach ($records as $k => $data_vals) {
        $data_val['title'] = $data_vals->title;
        $data_val['field_new_task_status_value'][] = $data_vals->field_new_task_status_value;
      }
      if ($data_val['title'] == $title && in_array($task_status, $data_val['field_new_task_status_value'])) {
        form_set_error('title', t("Mail Template for @title against @task_status already Exists, You can only update this mail template", array('@title' => $title, '@task_status' => ucwords(str_replace('_', " ", $task_status)))));
      }
    }

    if ($node->title == 'Blog' || $node->title == 'Story' || $node->title == 'Photo Gallery' || $node->title == 'Podcast' || $node->title == 'Video') {
      if (!empty($node->field_story_status[LANGUAGE_NONE][0]['value'])) {
        $cms_status = $node->field_story_status[LANGUAGE_NONE][0]['value'];
        $status_table = 'field_data_field_story_status';
        $status_table_value = 'field_story_status_value';
      } elseif (!empty($node->field_blog_status[LANGUAGE_NONE][0]['value'])) {
        $cms_status = $node->field_blog_status[LANGUAGE_NONE][0]['value'];
        $status_table = 'field_data_field_blog_status';
        $status_table_value = 'field_blog_status_value';
      } elseif (!empty($node->field_podcast_status[LANGUAGE_NONE][0]['value'])) {
        $cms_status = $node->field_podcast_status[LANGUAGE_NONE][0]['value'];
        $status_table = 'field_data_field_podcast_status';
        $status_table_value = 'field_podcast_status_value';
      } elseif (!empty($node->field_photo_gallery_status[LANGUAGE_NONE][0]['value'])) {
        $cms_status = $node->field_photo_gallery_status[LANGUAGE_NONE][0]['value'];
        $status_table = 'field_data_field_photo_gallery_status';
        $status_table_value = 'field_photo_gallery_status_value';
      } elseif (!empty($node->field_video_status[LANGUAGE_NONE][0]['value'])) {
        $cms_status = $node->field_video_status[LANGUAGE_NONE][0]['value'];
        $status_table = 'field_data_field_video_status';
        $status_table_value = 'field_video_status_value';
      }
      $query = db_select('node', 'n');
      $query->leftJoin($status_table, 'cs', 'n.nid = cs.entity_id');
      $query->condition('n.status', 1, '=');
      $query->fields('n', array('title', 'nid'));
      $query->fields('cs', array($status_table_value));
      $query->condition('n.title', $title, '=');
      $query->condition('n.type', 'mail_templates', '=');
      $query->condition('cs.'.$status_table_value, $cms_status, '=');
      $result = $query->execute();
      $num_of_results = $result->rowCount();
      if ($num_of_results >= 1) {
        form_set_error('title', t("Mail Template for @title against status of @cms_status already Exists, You can only update this mail template", array(
            '@title' => $title,
            '@cms_status' => ucwords(str_replace('_', " ", $cms_status)),
        )));
      }
    }
  }
}

/*
 * Get the mail content for each CMS Template 
 */

function itg_mail_templates_get_mailcontent($key, $task_event, $ugc_status) {
  
  if ($key->type == 'loyalty_and_rewards' && $task_event == 'inventory_status') {
    $title = "Product Expiration";
    $query = db_select('node', 'n');
    $query->leftJoin('field_data_field_product_expiration_status', 'pes', 'n.nid = pes.entity_id');
    $query->fields('n');
    $query->condition('pes.field_product_expiration_status_value', $task_event, '=');
    $query->condition('n.status', 1, '=');
    $query->condition('n.title', '%' . db_like($title) . '%', 'LIKE');
    $query->condition('n.type', 'mail_templates', '=');
    $result = $query->execute();
    $records = $result->fetchAssoc();
    $get_mail_content = node_load($records['nid']);
    return $get_mail_content;
  }
  
  if ($key->type == 'story' && $task_event == 'Follow Story') {
    $query = db_select('node', 'n');
    $query->fields('n');
    $query->condition('n.status', 1, '=');
    $query->condition('n.title', '%' . db_like($task_event) . '%', 'LIKE');
    $query->condition('n.type', 'mail_templates', '=');
    $result = $query->execute();
    $records = $result->fetchAssoc();
    $get_mail_content = node_load($records['nid']);
    return $get_mail_content;
  }

  if ($key == 'story' && $task_event == 'UGC') {
    if ($ugc_status == 'Published') {
      $status = 'approved';
    } elseif ($ugc_status == 'Rejected') {
      $status = 'reject';
    }

    $query = db_select('node', 'n');
    $query->leftJoin('field_data_field_ugc_comments_status', 'ucs', 'n.nid = ucs.entity_id');
    $query->fields('n');
    $query->condition('n.status', 1, '=');
    $query->condition('n.title', '%' . db_like($task_event) . '%', 'LIKE');
    $query->condition('n.type', 'mail_templates', '=');
    $query->condition('ucs.field_ugc_comments_status_value', $status, '=');
    $result = $query->execute();
    $records = $result->fetchAssoc();
    $get_mail_content = node_load($records['nid']);
    return $get_mail_content;
  }

  if (!empty($key) && $key == 'Sign up' || $key == 'Password Changed') {

    if ($key == 'Sign up') {
      $action_name = $key;
    } elseif ($key == 'Password Changed') {
      $action_name = $key;
    }
    $query = db_select('node', 'n');
    $query->fields('n');
    $query->condition('n.status', 1, '=');
    $query->condition('n.title', '%' . db_like($key) . '%', 'LIKE');
    $query->condition('n.type', 'mail_templates', '=');
    $result = $query->execute();
    $records = $result->fetchAssoc();
    $get_mail_content = node_load($records['nid']);
    return $get_mail_content;
  }

  if ($key == 'blog' || $key == 'story' || $key == 'photogallery' || $key == 'videogallery' || $key == 'podcast' && !empty($task_event)) {
    if ($key == 'photogallery') {
      $template_title = 'Photo Gallery';
      $table_cat = 'photo_gallery';
      $status_table = 'field_data_field_' . $table_cat . '_status';
      $status_table_value = 'field_' . $table_cat . '_status_value';
    } elseif ($key == 'videogallery') {
      $template_title = 'Video';
      $table_cat = 'video';
      $status_table = 'field_data_field_' . $table_cat . '_status';
      $status_table_value = 'field_' . $table_cat . '_status_value';
    } else {
      $template_title = ucwords($key);
      $status_table = 'field_data_field_' . $key . '_status';
      $status_table_value = 'field_' . $key . '_status_value';
    }
    
    if ($task_event == 'create') {
      $cms = "New_created";
    } elseif ($task_event == 'update') {
      $cms = "updated";
    } elseif ($task_event == 'needs_review') {
      $cms = "needs_review";
    } elseif ($task_event == 'rejected') {
      $cms = "rejected";
    } elseif ($task_event == 'needs_modification') {
      $cms = "needs_modification";
    }
    
    $query = db_select('node', 'n');
    $query->leftJoin($status_table, 'fcs', 'n.nid = fcs.entity_id');
    $query->fields('n');
    $query->condition('n.status', 1, '=');
    $query->condition('n.title', '%' . db_like($template_title) . '%', 'LIKE');
    $query->condition('n.type', 'mail_templates', '=');
    $query->condition('fcs.' . $status_table_value, $cms, '=');
    $result = $query->execute();
    $records = $result->fetchAssoc();
    $get_mail_content = node_load($records['nid']);
    return $get_mail_content;
  }

  if ($key->type == 'print_team_integration') {
    $get_title = explode("_", $key->type);
    $query = db_select('node', 'n');
    $query->fields('n');
    $query->condition('n.status', 1, '=');
    $query->condition('n.title', '%' . db_like($get_title[0]) . '%', 'LIKE');
    $query->condition('n.type', 'mail_templates', '=');
    $result = $query->execute();
    $records = $result->fetchAssoc();
    $get_mail_content = node_load($records['nid']);
    return $get_mail_content;
  }

  if ($key->type == 'task_idea_allocation_tracking' || $key == 'task_idea_allocation_tracking' && !empty($task_event)) {
    if ($task_event == 'create') {
      $task_status = 'task_assigned';
    } else if ($task_event == 'update') {
      $task_status = 'task_modified';
    } else if ($task_event == 'comment') {
      $task_status = 'comment_on_task';
    } else if ($task_event == 'task_expiry') {
      $task_status = 'task_expiration';
    }

    $get_title = explode("_", $key->type);
    $query = db_select('node', 'n');
    $query->leftJoin('field_data_field_new_task_status', 'fnts', 'n.nid = fnts.entity_id');
    $query->condition('fnts.field_new_task_status_value', $task_status, '=');
    $query->fields('n');
    $query->condition('n.status', 1, '=');
    $query->condition('n.title', '%' . db_like($get_title[0]) . '%', 'LIKE');
    $query->condition('n.type', 'mail_templates', '=');
    $result = $query->execute();
    $records = $result->fetchAssoc();
    $get_mail_content = node_load($records['nid']);
    return $get_mail_content;
  }
  if ($key->type == 'ask_an_expert') {
    if ($task_event == 'When user submit query') {
      $task_status = 'when_user_submit_query';
    } elseif ($task_event == 'When Review') {
      $task_status = 'please_check_screen_shot';
    }
    
    $key_type = str_replace("_", " ", $key->type);
    $query = db_select('node', 'n');
    $query->leftJoin('field_data_field_ask_an_expert_case', 'aaec', 'n.nid = aaec.entity_id');
    $query->fields('n');
    $query->condition('n.status', 1, '=');
    $query->condition('n.title', '%' . db_like($key_type) . '%', 'LIKE');
    $query->condition('n.type', 'mail_templates', '=');
    $query->condition('aaec.field_ask_an_expert_case_value', $task_status, '=');
    $result = $query->execute();
    $records = $result->fetchAssoc();
    $get_mail_content = node_load($records['nid']);
    return $get_mail_content;
  }

  if (is_string($key)) {
    $get_title = explode("_", $key);
    $title = $get_title[1];
    $query = db_select('node', 'n');
    $query->fields('n');
    $query->condition('n.status', 1, '=');
    $query->condition('n.title', '%' . db_like($title) . '%', 'LIKE');
    $query->condition('n.type', 'mail_templates', '=');
    $result = $query->execute();
    $records = $result->fetchAssoc();
    $get_mail_content = node_load($records['nid']);
    return $get_mail_content;
  } else {
    $title = "Product Expiration";
    $query = db_select('node', 'n');
    $query->leftJoin('field_data_field_product_expiration_status', 'pes', 'n.nid = pes.entity_id');
    $query->fields('n');
    $query->condition('pes.field_product_expiration_status_value', 'offer_period_expiration_status', '=');
    $query->condition('n.status', 1, '=');
    $query->condition('n.title', '%' . db_like($title) . '%', 'LIKE');
    $query->condition('n.type', 'mail_templates', '=');
    $result = $query->execute();
    $records = $result->fetchAssoc();
    $get_mail_content = node_load($records['nid']);
    return $get_mail_content;
  }
}

/**
 * Implement hook_views_pre_render
 * {@inheritdoc}
 */
function itg_mail_templates_views_pre_render(&$view) {
  // Add "Create Breaking news" on listing page of Breaking news
  if ($view->name == "mail_templates" && $view->current_display == 'page') {
    $header_content_mail_template = '<span class="count">Count(' . $view->total_rows . ')&nbsp;</span>';
    $header_content_mail_template .= l('Create Mail Templates', 'node/add/mail-templates', array('query' => array('destination' => 'mail-templates')));
    $view->attachment_before = $header_content_mail_template;
  }
}
