<?php

/**
 * @file
 * Main menu manager module file.
 */

module_load_include('inc', 'itg_menu_manager', 'include/itg_menu_manager');
module_load_include('inc', 'itg_menu_manager', 'include/itg-menu-manager-helper');

/**
 * {@inheritdoc}
 */
function itg_menu_manager_menu() {

    $items['itg-menu-manager'] = array(
      'title' => t('Create Menu'),
      'description' => t('Create Menu'),
      'page callback' => 'drupal_get_form',
      'file' => 'include/itg-menu-manager-form.inc',
      'page arguments' => array('itg_menu_manager_form'),
      'access arguments' => array('administer itg menu manager'),
    );

    $items['itg-menu-manager-remove'] = array(
      'page callback' => 'remove_from_menu_manager',
      'page arguments' => array(1),
      'access arguments' => array('administer itg menu manager'),
    );

    $items['itg-menu-manager/get-child/autocomplete'] = array(
      'page callback' => 'itg_menu_manager_get_child',
      'access arguments' => array('administer itg menu manager'),
    );

    $items['admin/config/user-interface/itg_menu_manager'] = array(
      'title' => 'Slideshow',
      'description' => 'Manage itg_menu_manager list.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('itg_menu_manager_manage'),
      'access arguments' => array('administer content'),
    );

    $items['itg-menu-manager/get-child-under-category-management/autocomplete'] = array(
      'page callback' => 'itg_menu_manager_get_child_under_category_management',
      'access arguments' => array('administer itg menu manager'),
    );

    $items['admin/settings/menu-manager'] = array(
      'title' => 'Menu manager',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('itg_menu_manager_custom_variables'),
      'access arguments' => array('access administrator'),
      'type' => MENU_NORMAL_ITEM,
    );

    $items['itg-menu-manager-search-second'] = array(
      'page callback' => 'itg_menu_manager_autosuggest',
      'page arguments' => array(2),
      'access arguments' => array('administer itg menu manager'),
    );

    $items['itg-menu-manager-search-third/%'] = array(
      'page callback' => 'itg_menu_manager_autosuggest_third',
      'page arguments' => array(2),
      'access arguments' => array('administer itg menu manager'),
    );

    $items['insert_all_node_in_widegt_table'] = array(
      'page callback' => 'create_new_column', // load the croper according to size!.
      'type' => MENU_CALLBACK,
      'access arguments' => array('access administrator'),
    );

    return $items;
}

/**
 * {@inheritdoc}
 */
function itg_menu_manager_permission() {
    return array(
      'administer itg menu manager' => array(
        'title' => t('administer itg menu manager'),
        'description' => t('Perform administration tasks for administer itg menu manager'),
      ),
    );
}

/**
 * {@inheritdoc}
 */
function itg_menu_manager_after_build($form, &$form_state) {
    drupal_add_css("input[name=bk_color] {display:none}", "inline");
    drupal_add_js(drupal_get_path('module', 'itg_menu_manager') . '/js/itg-menu-main.js', array('scope' => 'footer'));
    drupal_add_js(drupal_get_path('module', 'itg_menu_manager') . '/js/jscolor.min.js', array('scope' => 'footer'));
    return $form;
}

/**
 * {@inheritdoc}
 */
function itg_menu_manager_block_info() {
    $blocks['second_level_menu'] = array(
      'info' => t('Second Level Menu'),
      'cache' => DRUPAL_NO_CACHE
    );

    $blocks['third_level_menu'] = array(
      'info' => t('Third Level Menu'),
      'cache' => DRUPAL_NO_CACHE
    );

    $blocks['vertical_menu'] = array(
      'info' => t('Vertical Menu'),
      'cache' => DRUPAL_NO_CACHE
    );
    
    $blocks['magazine_node_third_level_menu'] = array(
      'info' => t('Magazine Third Level Menu'),
      'cache' => DRUPAL_NO_CACHE
    );
    return $blocks;
}

/**
 * {@inheritdoc}
 */
function itg_menu_manager_block_view($delta = '') {
    $block = array();
    switch ($delta) {
        case 'second_level_menu':
            $second_level_menu = get_second_level_menu();
            foreach ($second_level_menu as $db_data) {
                $temp_data = array();
                $temp_data['db_data'] = $db_data;
                $temp_data['term_load'] = taxonomy_term_load($db_data['tid']);
                $data[] = $temp_data;
            }
            $block['content'] = theme('second_level_menu', array("data" => $data));
            break;
        case 'vertical_menu':
            $vertical_menu = get_second_level_menu('vertical');
            foreach ($vertical_menu as $db_data) {
                $temp_data = array();
                $temp_data['db_data'] = $db_data;
                $temp_data['term_load'] = taxonomy_term_load($db_data['tid']);
                $data[] = $temp_data;
            }
            $block['content'] = theme('vertical_level_menu', array("data" => $data));
            break;
        case 'third_level_menu':
            $data = array();
            $third_level_menu = get_third_level_menu();

            $node_data = array();

            // handling for ip pages
            $links_string = variable_get('menu_manager_custom_url');
            $links_array = explode(",", $links_string);
            if (in_array(arg(1), $links_array)) {
                $node_data = node_load(arg(1));
            }

            if (!empty($third_level_menu) && isset($third_level_menu)) {
                foreach ($third_level_menu as $db_data) {
                    $temp_data = array();
                    $temp_data['db_data'] = $db_data;
                    $temp_data['term_load'] = taxonomy_term_load($db_data['tid']);
                    $data[] = $temp_data;
                }
            }

            $block['content'] = theme('third_level_menu', array("data" => $data, "node_load" => $node_data));
            break;
        case 'magazine_node_third_level_menu':
            $block['content'] = magazine_node_third_level_menu_content();
            break;
    }
    return $block;
}

/**
 * {@inheritdoc}
 */
function itg_menu_manager_theme() {
    return array(
      'second_level_menu' => array(
        'template' => 'templates/second-level-menu',
      ),
      'third_level_menu' => array(
        'template' => 'templates/third-level-menu',
      ),
      'vertical_level_menu' => array(
        'template' => 'templates/vertical-level-menu',
      ),
    );
}

/**
 * Implements hook_views_api().
 * registering api information for custom views handlers.
 */
function itg_menu_manager_views_api() {
    return array(
      'api' => 3,
    );
}

/**
 * {@inheritdoc}
 */
function itg_menu_manager_views_data() {

    $data['itg_menu_manager']['table']['group'] = t('Menu Manager');

    $data['itg_menu_manager']['table']['base'] = array(
      'field' => 'tid',
      'title' => t('Menu Manager'),
      'help' => t('ITG Menu Manager Data'),
    );

    $data['itg_menu_manager']['tid'] = array(
      'title' => t('Category Manager Table'),
      'help' => t('Log information about taxonomy term.'),
      'relationship' => array(
        'base' => 'taxonomy_term_data', // The name of the table to join with.
        'base field' => 'tid', // The name of the field on the joined table.
        'handler' => 'views_handler_relationship',
        'label' => t('Menu Category manager'),
        'title' => t('ITG'),
        'help' => t('Relate taxonomy to view.'),
      ),
      'field' => array(
        'handler' => 'views_handler_field_numeric',
        'click sortable' => TRUE,
      ),
      'filter' => array(
        'handler' => 'views_handler_filter_numeric',
      ),
      'sort' => array(
        'handler' => 'views_handler_sort',
      ),
    );

    $data['itg_menu_manager']['url'] = array(
      'title' => t('url'),
      'help' => t('Menu url'),
      'field' => array(
        'handler' => 'views_handler_field',
        'click sortable' => TRUE,
      ),
      'sort' => array(
        'handler' => 'views_handler_sort',
      ),
      'filter' => array(
        'handler' => 'views_handler_filter_string',
      ),
      'argument' => array(
        'handler' => 'views_handler_argument_string',
      ),
    );

    $data['itg_menu_manager']['title'] = array(
      'title' => t('title'),
      'help' => t('Menu title'),
      'field' => array(
        'handler' => 'views_handler_field',
        'click sortable' => TRUE,
      ),
      'sort' => array(
        'handler' => 'views_handler_sort',
      ),
      'filter' => array(
        'handler' => 'views_handler_filter_string',
      ),
      'argument' => array(
        'handler' => 'views_handler_argument_string',
      ),
    );

    $data['itg_menu_manager']['menu_level'] = array(
      'title' => t('Menu Level'),
      'help' => t('Menu Level'),
      'field' => array(
        'handler' => 'views_handler_field',
        'click sortable' => TRUE,
      ),
      'sort' => array(
        'handler' => 'views_handler_sort',
      ),
      'filter' => array(
        'handler' => 'views_handler_filter_string',
      ),
      'argument' => array(
        'handler' => 'views_handler_argument_string',
      ),
    );

    $data['itg_menu_manager']['url_type'] = array(
      'title' => t('Url Type'),
      'help' => t('Its stores url type value internal or external'),
      'field' => array(
        'handler' => 'views_handler_field',
        'click sortable' => TRUE,
      ),
      'sort' => array(
        'handler' => 'views_handler_sort',
      ),
      'filter' => array(
        'handler' => 'views_handler_filter_string',
      ),
      'argument' => array(
        'handler' => 'views_handler_argument_string',
      ),
    );

    $data['itg_menu_manager']['menu_name'] = array(
      'title' => t('Menu name'),
      'help' => t('Here we are storing icon of menu manager'),
      'field' => array(
        'handler' => 'views_handler_field',
        'click sortable' => TRUE,
      ),
      'sort' => array(
        'handler' => 'views_handler_sort',
      ),
      'filter' => array(
        'handler' => 'views_handler_filter_string',
      ),
      'argument' => array(
        'handler' => 'views_handler_argument_string',
      ),
    );

    $data['itg_menu_manager']['weight'] = array(
      'title' => t('Weight'),
      'help' => t('Weight'),
      'field' => array(
        'handler' => 'views_handler_field_numeric',
        'click sortable' => TRUE,
      ),
      'filter' => array(
        'handler' => 'views_handler_filter_numeric',
      ),
      'sort' => array(
        'handler' => 'views_handler_sort',
      ),
    );

    $data['itg_menu_manager']['id'] = array(
      'title' => t('ID'),
      'help' => t('table id can be use for actions'),
      'field' => array(
        'handler' => 'views_handler_field_numeric',
        'click sortable' => TRUE,
      ),
      'filter' => array(
        'handler' => 'views_handler_filter_numeric',
      ),
      'sort' => array(
        'handler' => 'views_handler_sort',
      ),
    );

    $data['itg_menu_manager']['section_id'] = array(
      'title' => t('Section'),
      'help' => t('Section id is saved if menu level is third'),
      'field' => array(
        'handler' => 'views_handler_field_numeric',
        'click sortable' => TRUE,
      ),
      'filter' => array(
        'handler' => 'views_handler_filter_numeric',
      ),
      'sort' => array(
        'handler' => 'views_handler_sort',
      ),
    );


    return $data;
}

/**
 * {@inheritdoc}
 */
function itg_menu_manager_form_alter(&$form, &$form_state, $form_id) {

    if ($form_id == 'views_form_menu_manager_menu_manager_page') {
        $form['actions']['submit']['#submit'][] = 'itg_menu_manager_custom_submit';
    }

    if ($form_id == 'views_exposed_form') {
        $view = $form_state['view'];
        if ($view->name == "menu_manager" && $view->current_display == 'menu_manager_page') {
            drupal_add_css("#edit-section-id-wrapper {display:none}", "inline");
            drupal_add_css("label[for=edit-tid] {display:none !important}", "inline");
            drupal_add_css("#draggableviews-table-menu-manager-menu-manager-page td img {max-width:48px; max-height:30px}", "inline");
            if (arg(1) == 'third') {
                drupal_add_js(drupal_get_path('module', 'itg_menu_manager') . '/js/itg_menu_manager.js', 'file');
                $options = itg_menu_manager_get_taxonomy_term_options('category_management');

                $new_select = '<div class="third-label-menu-section"><label for="edit-section-child">Section </label><select id="edit-section-child" name="section_child" class="form-select valid">';
                foreach ($options as $key => $value) {
                    if (isset($_GET['section_child']) && $_GET['section_child'] == $key) {
                        $selcted = "selected='selected'";
                    } else {
                        $selcted = "";
                    }
                    $new_select .= '<option value="' . $key . '" ' . $selcted . '>' . $value . '</option>';
                }
                $new_select .= '</select></div>';

                $auto_complete_label = '<div class="third-label-menu-term"><label for="edit-edit-tid">' . t("Term Id") . '</label>';

                if (!isset($_GET['section_child']) || $_GET['section_child'] == "0") {
                    $form['tid']['#attributes']['class'] = array('hide');
                    $auto_complete_label = '<div class="third-label-menu-term">';
                }

                $new_select .= $auto_complete_label;
                $form['tid']['#prefix'] = $new_select;
                $form['tid']['#suffix'] = "</div>";
            }
        }
    }

    // see if webform_client_form_ is in the form_id
    if (strstr($form_id, 'webform_client_form_')) {
        // get the nid so we can use it in the wrapper value
        $nid = $form['#node']->nid;
        // add the ajax properties to the submit button
        $form['actions']['submit']['#attributes'] = array("class" => array("btn"));
        $form['actions']['submit']['#ajax'] = array(
          'callback' => 'itg_menu_manager_webform_js_submit',
          'wrapper' => 'webform-client-form-' . $nid,
          'method' => 'replace',
          'effect' => 'fade',
        );
    }

    if ($form_id == 'menu_edit_item' && (arg(4) == 'menu-about-us-page-menu' || arg(5) == 'edit')) {
        $form['actions']['submit']['#suffix'] = l("Cancel", "admin/structure/menu/manage/menu-about-us-page-menu", array("attributes" => array("class" => array("button"))));
        drupal_add_css(".form-item-expanded {display:block !important}", "inline");
    }
}

/**
 * {@inheritdoc}
 */
function itg_menu_manager_views_pre_render(&$view) {

    if ($view->name == "menu_manager" && $view->current_display == 'menu_manager_page') {
        drupal_add_js(drupal_get_path('module', 'itg_menu_manager') . '/js/menu-manager-pre-render.js', array('type' => 'file', 'scope' => 'footer'));
        $arg = arg();
        $view->build_info['title'] = ucfirst(arg(1)) . t(" level menu ordering");
        $count = 0;
        if ((arg(1) == 'third' && !isset($_GET['section_child'])) && $_GET['section_child'] == 0) {
            unset($view->result);
        } else {
            $count = $view->total_rows;
        }

        // Handel case for inactive category.
        // Here altered result of $views->result i.e. skip rowa which have inactive tid.
        $correct_view_result = array();
        foreach ($view->result as $keys => $result) {
            $tid = $result->tid;
            // Procceed if tid is not timestamp.
            // current unix timestamp 1484910494 for Jan 01 1970.
            if ($tid < 1484910494) {
                if (function_exists('itg_category_manager_term_state') && !itg_category_manager_term_state($tid)) {
                    continue;
                } else {
                    $correct_view_result[] = $view->result[$keys];
                }
            } else {
                $correct_view_result[] = $view->result[$keys];
            }
        }
        $view->result = $correct_view_result;
        $header_content = "";
        $header_content .= '<span class="count">Count (' . count($correct_view_result) . ') </span>';
        $header_content .= l(t('Create Menu'), 'itg-menu-manager/' . $arg[1], array("query" => array("destination" => $arg[0] . "/" . $arg[1])));
        $view->attachment_before = $header_content;
    }
}

/**
 * {@inheritdoc}
 */
function itg_menu_manager_form_views_exposed_form_alter(&$form, &$form_state, $form_id) {
    switch ($form['#id']) {
        case 'views-exposed-form-menu-manager-menu-manager-page':
            $arg = arg();
            $form['tid']['#attributes']['placeholder'] = t('Term Id');
            if ($arg[1] == 'second') {
                $form['tid']['#autocomplete_path'] = 'itg-menu-manager-search-second/autocomplete';
            } else {
                if (isset($_GET['section_id'])) {
                    $section_id = $_GET['section_id'];
                    $form['tid']['#autocomplete_path'] = "itg-menu-manager-search-third/$section_id/autocomplete";
                }
            }
            break;
    }
}

/**
 * {@inheritdoc}
 */
function itg_menu_manager_taxonomy_term_delete($term) {
    _delete_term_from_menu_manager($tid);
}
