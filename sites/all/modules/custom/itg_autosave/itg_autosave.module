<?php

/**
 * @file
 * Autosave module file contains hooks to extends core functionality.
 */

module_load_include('inc', 'itg_autosave', 'includes/itg_auto_save');

/**
 * Impplements hook_help().
 *
 * {@inheridoc}.
 */
function it_autosave_help($path, $arg) {
  switch ($path) {
    case 'admin/help#it_autosave':

      return 'Hello Auto save';
  }
}

/**
 * Implements hook_permissions().
 *
 * Set access permission on ITG Autosave settings form.
 *
 * {@inheridoc}.
 */
function itg_autosave_permission() {
  return array(
    'administer itg_autosave settings' => array(
      'title' => t('Administer ITG Autosave Settings'),
      'description' => t('Perform administration tasks for ITG Autosave.'),
    ),
  );
}

/**
 * Implements hook_menu().
 *
 * {@inheridoc}.
 */
function itg_autosave_menu() {
  // Settings form menu.
  $items['admin/config/administration/itg_autosave'] = array(
    'title' => 'ITG Autosave Setting',
    'description' => 'Autosave settings form',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('itg_autosave_form'),
    'access arguments' => array('administer itg_autosave settings'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'includes/itg_autosave.admin.inc',
  );
  // Delete saved form id menu.
  $items['itg-autosave-formid-delete/%'] = array(
    'page callback' => 'itg_autosave_form_delete',
    'page arguments' => array(1),
    'access arguments' => array('administer itg_autosave settings'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/itg_autosave.admin.inc',
  );
  // Autosave ajax callback function.
  $items['itg-autosave/nodeform'] = array(
    'page callback' => 'itg_autosave_nodeform',
    'page arguments' => array(2, 3),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'includes/itg_autosave.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_views_api().
 *
 * This tells drupal that there is Views integration file named
 * itg_social_media.views.inc.
 *
 * {@inheritdoc}
 */
function itg_autosave_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'itg_autosave') . '/includes/views',
  );
}

/**
 * Implements hook_form_alter().
 *
 * {@inheritdoc}.
 */
function itg_autosave_form_alter(&$form, &$form_state, $form_id) {
  // Fetch form ids saved into databse for auto save feature.
  $itg_autosave_form = new itg_auto_save();

  // Restore data if it is available on auto saved data.
  switch ($form_id) {
    case 'astro_node_form':
      // Add js file for autosave ajax.
      $form['#attached']['js'] = array(
        drupal_get_path('module', 'itg_autosave') . '/js/itg_autosave.js',
      );
      // Set form ids to js file.
      $itg_autosave_form->itg_save_set_form_ids($form['nid']['#value'], $form['type']['#value']);

      // Retrive data is it is already set.
      $data = $itg_autosave_form->itg_save_retrieve_form_data($form['nid']['#value'], $form['type']['#value']);
      $form_data = unserialize($data->form_data);
      $field_detail = $itg_autosave_form->itg_save_extract_fieldtype($form_data);

      $form['title']['#default_value'] = isset($form_data['title']) ? $form_data['title'] : date('M d, Y');
      foreach ($field_detail as $value) {
        if ($value['fieldType'] == 'field_collection') {
          $itg_autosave_form->itg_save_retrieve_fcollection($form, $value['fieldName'], $form_data[$value['fieldName']]);
        }
        else {
          $itg_autosave_form->itg_save_prepare_retrieve_array($form, $value['fieldName'], $form_data[$value['fieldName']], $value['fieldType']);
        }
      }

      break;
  }
}
