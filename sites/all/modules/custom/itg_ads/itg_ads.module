<?php

/**
 * @file
 * The ITG Ads module.
 *
 * Contains functionality for Ads. *
 */

/**
 * Implements hook_block_info(). 
 * {@inheritdoc}
 */
function itg_ads_block_info() {
	$blocks['ad_right_sidebar_1'] = array(
		'info' => t('Ad right sidebar 1'),
		'cache' => DRUPAL_CACHE_GLOBAL,
	);
	$blocks['ad_right_sidebar_2'] = array(
		'info' => t('Ad right sidebar 2'),
		'cache' => DRUPAL_CACHE_GLOBAL,
	);

	return $blocks;
}

/**
 * Implements hook_block_view().
 * {@inheritdoc}
 */
function itg_ads_block_view($delta = '') {
	$block = array();
	switch ($delta) {
		case 'ad_right_sidebar_1':
			$page_name = 'Rest';
			$data['itg_ad'] = get_ad_script($page_name);
			$block['content'] = theme('ad_right_sidebar_block1', array('data' => $data));
			break;
		case 'ad_right_sidebar_2':
			$page_name = 'Rest';
			$data['itg_ad'] = get_ad_script($page_name);
			$block['content'] = theme('ad_right_sidebar_block2', array('data' => $data));
			break;
	}

	return $block;
}

/**
 * Implements hook_menu.
 * {@inheritdoc}
 */
function itg_ads_menu() {
	$items = array();
	$items['itg-ads/%'] = array(
		'title' => t('Ads'),
		'page callback' => 'itg_ads_show_ad_image',
		'access callback' => TRUE,
		'type' => MENU_CALLBACK,
	);

	return $items;
}

/**
 * Implements hook_theme.
 * {@inheritdoc}
 */
function itg_ads_theme($existing, $type, $theme, $path) {
	return array(
		'itg_ads' => array(
			'variables' => array('data' => NULL),
			'template' => 'templates/itg-ads',
		),
		'ad_right_sidebar_block1' => array(
			'template' => 'ad-right-sidebar1',
			'path' => drupal_get_path('module', 'itg_ads') . '/templates',
			'variables' => array('data' => NULL),
		),
		'ad_right_sidebar_block2' => array(
			'template' => 'ad-right-sidebar2',
			'path' => drupal_get_path('module', 'itg_ads') . '/templates',
			'variables' => array('data' => NULL),
		),
	);
}

/**
 * Implemens hook_form_FORM_ID_alter().
 * {@inheritdoc}
 */
function itg_ads_form_ads_management_node_form_alter(&$form, &$form_state, $form_id) {
	$formdata = NULL;
	
	// Hide the template variant field temporary
	unset($form['field_ads_template_variants']);
	$form['#attached']['js'] = array(
		drupal_get_path('module', 'itg_ads') . '/js/itg_ads.js',
	);
	
	// Hide the template variant field temporary
	unset($form['field_ads_template_variants']);
	$form['#attached']['js'] = array(
		drupal_get_path('module', 'itg_ads') . '/js/itg_ads.js',
	);
	$form['#after_build'][] = 'itg_common_cancel_button';

	// Custom callback on submit button
	$form['actions']['submit']['#submit'][] = 'alter_ad_submit_status_message';

	// Code to check if section is selected then section selection field show
	$form['field_ads_select_secton_option']['#states'] = array(
		'visible' => array(
			':input[name="field_ads_template_selection[und]"]' => array('value' => 'Section'),
		)
	);

	// Code to check if section is selected then section selection field show
	$form['field_ads_section_selection']['#states'] = array(
		'visible' => array(
			':input[name="field_ads_template_selection[und]"]' => array('value' => 'Section'),
		)
	);
		
	// Ajax work based on field template selection
	$template_selection_field = 'field_ads_template_selection';
	$ads_placeholder_field = 'field_ads_placeholder';

	// Set template selection on edit and trigger action
	if (isset($form[$template_selection_field][LANGUAGE_NONE]['#default_value'][0]) && !isset($form_state['triggering_element'])) {
		$template_id = $form[$template_selection_field][LANGUAGE_NONE]['#default_value'][0];
		$formdata = $template_id;
	}
	else {
		$template_id = $form_state['input'][$template_selection_field][LANGUAGE_NONE];
	}

	// Add ajax on template selection field
	$form[$template_selection_field][LANGUAGE_NONE]['#ajax'] = array(
		'event' => 'change',
		'callback' => 'itg_ads_value_ajax_callback',
		'wrapper' => $ads_placeholder_field . '_replace',
	);
	$form['field_ads_placeholder']['#validated'] = TRUE;

	// Setup Ads placeholder field select
	$form[$ads_placeholder_field][LANGUAGE_NONE]['#prefix'] = '<div id="' . $ads_placeholder_field . '_replace">';
	$form[$ads_placeholder_field][LANGUAGE_NONE]['#suffix'] = '</div>';

	//  if (function_exists('itg_common_dropdown_supplement')) {
	if ($template_id == 'Home' || $template_id == 'Rest') {
		$form[$ads_placeholder_field][LANGUAGE_NONE]['#options'] = itg_ads_placeholder_values($template_id, $template_id);
	}
	else {
//		//Ajax work based on field section selection
//		$section_selection_field = 'field_ads_section_selection';
//		$ads_placeholder_field = 'field_ads_placeholder';
//		// set section selection on edit and trigger action
//		if (isset($form[$section_selection_field][LANGUAGE_NONE]['#default_value'][0]) && !isset($form_state['triggering_element'])) {
//			$section_id = $form[$section_selection_field][LANGUAGE_NONE]['#default_value'][0];
//		}
//		else {
//			$section_id = $form_state['input'][$section_selection_field][LANGUAGE_NONE];
//		}
//
//		// add ajax on template selection field
//		$form[$section_selection_field][LANGUAGE_NONE]['#ajax'] = array(
//			'event' => 'change',
//			'callback' => 'itg_ads_value_ajax',
//			'wrapper' => $ads_placeholder_field . '_replace',
//		);
//		$form['field_ads_placeholder']['#validated'] = TRUE;
//
//		// Setup Ads placeholder field select
//		$form[$ads_placeholder_field][LANGUAGE_NONE]['#prefix'] = '<div id="' . $ads_placeholder_field . '_replace">';
//		$form[$ads_placeholder_field][LANGUAGE_NONE]['#suffix'] = '</div>';
//		$form[$ads_placeholder_field][LANGUAGE_NONE]['#options'] = itg_ads_placeholder_value($section_id, $section_id);

		//Ajax work based on field section selection
		$section_selection_field = 'field_ads_section_selection';
		$ads_placeholder_field = 'field_ads_select_secton_option';
		// set section selection on edit and trigger action
		if (isset($form[$section_selection_field][LANGUAGE_NONE]['#default_value'][0]) && !isset($form_state['triggering_element'])) {
			$section_id = $form[$section_selection_field][LANGUAGE_NONE]['#default_value'][0];
		}
		else {
			$section_id = $form_state['input'][$section_selection_field][LANGUAGE_NONE];
		}

		// add ajax on template selection field
		$form[$section_selection_field][LANGUAGE_NONE]['#ajax'] = array(
			'event' => 'change',
			'callback' => 'itg_ads_value_ajaxs',
			'wrapper' => $ads_placeholder_field . '_replace',
		);
		$form['field_ads_select_secton_option']['#validated'] = TRUE;

		// Setup Ads placeholder field select
		$form[$ads_placeholder_field][LANGUAGE_NONE]['#prefix'] = '<div id="' . $ads_placeholder_field . '_replace">';
		$form[$ads_placeholder_field][LANGUAGE_NONE]['#suffix'] = '</div>';
//		$form[$ads_placeholder_field][LANGUAGE_NONE]['#options'] = itg_ads_placeholder($form, $section_id);
//		$form['field_ads_placeholder'][LANGUAGE_NONE]['#options'] = array('-none-' => 'None');
		if ($section_id == 'Photo' || $section_id == 'Video' || $section_id == 'Default') {
			$form[$ads_placeholder_field][LANGUAGE_NONE]['#options'] = itg_ads_placeholder($form, $section_id);		
		}		
		
				//Ajax work based on field select section option
		$select_secton_field = 'field_ads_select_secton_option';
		$ads_placeholder_field = 'field_ads_placeholder';
		if (arg(2) == 'edit' && arg(0) == 'node' && is_numeric(arg(1))) {
			$section_section_id = $form[$select_secton_field][LANGUAGE_NONE]['#entity']->field_ads_select_secton_option[LANGUAGE_NONE][0]['value'];
			$section_id = $form[$select_secton_field][LANGUAGE_NONE]['#entity']->field_ads_section_selection[LANGUAGE_NONE][0]['value'];
		}
		else {
			$select_section_id = $form_state['input'][$select_secton_field][LANGUAGE_NONE];
			$section_id = $form_state['input']['field_ads_section_selection'][LANGUAGE_NONE];
		}
		// add ajax on template selection field
		$form[$select_secton_field][LANGUAGE_NONE]['#ajax'] = array(
			'event' => 'change',
			'callback' => 'itg_ads_value_ajax',
			'wrapper' => $ads_placeholder_field . '_replace',
		);
		$form['field_ads_placeholder']['#validated'] = TRUE;

		// Setup Ads placeholder field select
		$form[$ads_placeholder_field][LANGUAGE_NONE]['#prefix'] = '<div id="' . $ads_placeholder_field . '_replace">';
		$form[$ads_placeholder_field][LANGUAGE_NONE]['#suffix'] = '</div>';
		$form[$ads_placeholder_field][LANGUAGE_NONE]['#options'] = itg_ads_placeholder_value($select_section_id, $section_id);
		
		}
	if (arg(2) == 'edit') {
		$db_options = $form_state['build_info']['args'][0]->field_ads_placeholder['und'][0]['value'];
		$form['field_ads_placeholder']['und']['#options'][$db_options] = $db_options;
		$form['field_ads_placeholder']['und']['#default_value'] = array($db_options);
		
		$db_option = $form_state['build_info']['args'][0]->field_ads_select_secton_option['und'][0]['value'];
		$term = taxonomy_term_load($db_option);
		$term_data = $term->name;
		$form['field_ads_select_secton_option']['und']['#options'][$db_option] = t($term_data);
		$form['field_ads_select_secton_option']['und']['#default_value'] = $db_option;
		//pr ($db_option);
	}
}

/**
 * Ajax callback for ads placeholder dropdown.
 * @param array $form
 * @param array $form_state
 * @return int
 */
function itg_ads_value_ajax_callback($form, $form_state) {
	return $form['field_ads_placeholder'];
}

/**
 * Ajax callback for Event roles dropdown.
 * @param array $form
 * @param array $form_state
 * @return int
 */
function itg_ads_value_ajax($form, $form_state) {
	return $form['field_ads_placeholder'];
}

/**
 * Ajax callback for Event roles dropdown.
 * @param array $form
 * @param array $form_state
 * @return int
 */
function itg_ads_value_ajaxs($form, $form_state) {
	return $form['field_ads_select_secton_option'];
}

/**
 * Custom function to populate the second dropdown.
 * @param string $formdata
 * @param string $id
 * @return array $result
 */
function itg_ads_placeholder_value($formdata, $id = '') {
	if ($id == 'Photo') {
		$section_name = 'page section photo';
	}
	if ($id == 'Video') {
		$section_name = 'page section video';
	}
	if ($id == 'Default') {
		$section_name = 'page section default';
	}
	if ($formdata == '_none') {
		$arr = array();
		return $arr;
	}
	if (!is_null($id)) {
		$dat = $id;
	}

	$url_val = $_SERVER["HTTP_REFERER"];
	global $base_url;
	$trimm = trim($url_val, $base_url);
	$arr = explode("/", $trimm);
	$arrr = explode("?", $arr[2]);

	// Fetch query for Ads Placeholder
	$select = t('- None -');
	$data = array('_none' => $select);
	$data1 = array();
	$current_date = date("Y-m-d H:i:s");
	$vocab_name = 'Ads template placeholder';
	$query = db_select('taxonomy_term_data', 'tt');
	$query->join('taxonomy_vocabulary', 'tv', 'tv.vid = tt.vid');
	$query->join('field_data_field_ads_placeholder_values', 'fdapv', 'fdapv.entity_id = tt.tid');
//	$query->condition('tv.name', $vocab_name, '=');
	$query->condition('tt.name', $section_name, '=');
	$query->fields('tt', array('tid', 'name'));
	$query->fields('fdapv', array('field_ads_placeholder_values_value'));
	$script_code = $query->execute()->fetchAll();
	foreach ($script_code as $val) {
		if ($val->name == 'page section default') {
			$data['Default'][$val->field_ads_placeholder_values_value] = $val->field_ads_placeholder_values_value;
		}
		if ($val->name == 'page section photo') {
			$data['Photo'][$val->field_ads_placeholder_values_value] = $val->field_ads_placeholder_values_value;
		}
		if ($val->name == 'page section video') {
			$data['Video'][$val->field_ads_placeholder_values_value] = $val->field_ads_placeholder_values_value;
		}
	}
	//Fetech query to get already filled values of ads placeholder against section selection
	$query = db_select('field_data_field_ads_placeholder', 'ap');
	$query->fields('ap', array('field_ads_placeholder_value'));
	$query->join('field_data_field_ads_end_date', 'ed', 'ed.entity_id = ap.entity_id');
	$query->join('field_data_field_ads_section_selection', 'ts', 'ap.entity_id = ts.entity_id');
	$query->join('`field_data_field_ads_select_secton_option', 'so', 'ap.entity_id = so.entity_id');
	$query->condition('ts.field_ads_section_selection_value', $id, '=');
	$query->condition('so.field_ads_select_secton_option_value', $formdata, '=');
	$query->condition('ed.field_ads_end_date_value', $current_date, '>');
	$place_code = $query->execute()->fetchAll();
	foreach ($place_code as $row) {
		$data1[$row->field_ads_placeholder_value] = $row->field_ads_placeholder_value;
	}
	if (arg(2) == 'edit') { //Edit case

	//$result = array('1'=>'1');
		$result = array_diff($data[$id], $data1);
		$nid = arg(1);
		$data_placeholder = itg_ads_get_prefilled_value($nid);
		$data_section = itg_ads_get_prefilled_section($nid);
		if (!is_null($dat) && $dat == $data_section[$dat]) {
			$result = array_merge($data_placeholder, $result);
		}
	}
	else { // Add case 
		$result = array_diff($data[$id], $data1);
	}
	//$result = array_diff($data[$id], $data1);

	return $result;
}

/**
 * Custom function to populate the second dropdown.
 * @param string $formdata
 * @param string $id
 * @return array $result
 */
function itg_ads_placeholder_values($formdata, $id = '') {
	if ($id == 'Home') {
		$template_name = 'page front';
	}
	if ($id == 'Rest') {
		$template_name = 'page rest of site';
	}

	if (!is_null($formdata)) {
		$dat = $formdata;
	}

	$url_val = $_SERVER["HTTP_REFERER"];
	global $base_url;
	$trimm = trim($url_val, $base_url);
	$arr = explode("/", $trimm);
	$arrr = explode("?", $arr[2]);

	// Fetch query for Ads Placeholder
	$select = t('- None -');
	$data = array('_none' => $select);
	$data1 = array();
	$current_date = date("Y-m-d H:i:s");
	$vocab_name = 'Ads template placeholder';
	$query = db_select('taxonomy_term_data', 'tt');
	$query->join('taxonomy_vocabulary', 'tv', 'tv.vid = tt.vid');
	$query->join('field_data_field_ads_placeholder_values', 'fdapv', 'fdapv.entity_id = tt.tid');
	$query->condition('tv.name', $vocab_name, '=');
	$query->condition('tt.name', $template_name, '=');
	$query->fields('tt', array('tid', 'name'));
	$query->fields('fdapv', array('field_ads_placeholder_values_value'));
	$script_code = $query->execute()->fetchAll();
	foreach ($script_code as $val) {
		if ($val->name == 'page front') {
			$data['Home'][$val->field_ads_placeholder_values_value] = $val->field_ads_placeholder_values_value;
		}
		if ($val->name == 'page rest of site') {
			$data['Rest'][$val->field_ads_placeholder_values_value] = $val->field_ads_placeholder_values_value;
		}
	}
	//Fetech query to get already filled values of ads placeholder against template selection
	$query = db_select('field_data_field_ads_placeholder', 'ap');
	$query->fields('ap', array('field_ads_placeholder_value'));
	$query->join('field_data_field_ads_end_date', 'ed', 'ed.entity_id = ap.entity_id');
	$query->join('field_data_field_ads_template_selection', 'ts', 'ap.entity_id = ts.entity_id');
	$query->condition('ts.field_ads_template_selection_value', $id, '=');
	$query->condition('ed.field_ads_end_date_value', $current_date, '>');
	$place_code = $query->execute()->fetchAll();
	foreach ($place_code as $row) {
		$data1[$row->field_ads_placeholder_value] = $row->field_ads_placeholder_value;
	}

	if ($arrr[0] == 'edit') { //Edit case
		$result = array_diff($data[$id], $data1);
		$nid = $arr[1];
		$data_placeholder = itg_ads_get_prefilled_value($nid);
		$data_template = itg_ads_get_prefilled($nid);

		if (!is_null($dat) && $dat == $data_template[$dat]) {
			$result = array_merge($data_placeholder, $result);
		}
	}
	else { // Add case 
		$result = array_diff($data[$id], $data1);
	}
	return $result;
}

/**
 * Implements hook_form_views_exposed_form_alter.
 * {@inheritdoc}
 */
function itg_ads_form_views_exposed_form_alter(&$form, &$form_state, $form_id) {
	if ($form["#id"] == 'views-exposed-form-manage-ads-page') {
		$form['title']['#autocomplete_path'] = 'content-title-list/ads_management/autocomplete';
		$form['title']['#attributes'] = array('placeholder' => t('Placeholder Title'));
	}
}

/**
 * Implements hook_views_pre_render.
 * {@inheritdoc}
 */
function itg_ads_views_pre_render(&$view) {
	if ($view->name == "manage_ads") {
		// Get user information.
		global $user;
		$header_content = '';
		if (!in_array('Intern', $user->roles) && !in_array('Author/Guest', $user->roles) && !in_array('Subeditor/Sr.Sub', $user->roles)) {
			$header_content = '<span class="count">Count (' . $view->total_rows . ') </span>';
			$header_content .= l(t('Create Ads Placeholder'), 'node/add/ads-management', array('query' => array('destination' => arg(0))));
		}
	$view->attachment_before = $header_content;
	}
}

/**
 * Custom function on submit of Ads Management form.
 * @param array $form
 * @param array $form_state
 */
function alter_ad_submit_status_message(&$form, $form_state) {
	if (isset($_SESSION['messages']['status'])) {
		unset($_SESSION['messages']['status']);
	}
	if (arg(0) == 'node' && arg(1) == 'add' && arg(2) == 'ads-management') {
		$op = 'created';
	}
	else {
		$op = 'updated';
	}
	$ads_title = $form_state['node']->title;
	drupal_set_message(t('Ad <b>' . $ads_title . '</b> has been ' . $op . '.'));

	// TODO: check logic for this assignment.
	$_GET['destination'] = $_REQUEST['destination'];
}

/**
 * Implements hook_node_validate().
 * {@inheritdoc}
 */
function itg_ads_node_validate($node, $form, &$form_state) {
	$current_date = date("Y-m-d H:i:s");
	$current_time = strtotime($current_date);
	if ($node->type == 'ads_management') {
		$template = $node->field_ads_template_selection[LANGUAGE_NONE][0]['value'];
		$section_selection = $node->field_ads_section_selection[LANGUAGE_NONE][0]['tid'];
		$template_variants = $node->field_ads_template_variants[LANGUAGE_NONE][0]['tid'];

		//check on date values
		$start_date = strtotime($form_state['values']['field_ads_start_date'][LANGUAGE_NONE][0]['value']);
		$end_date = strtotime($form_state['values']['field_ads_end_date'][LANGUAGE_NONE][0]['value']);
		if ($end_date < $start_date) {
			form_set_error('field_ads_end_date', 'End date must be greater than or equal to Start date.');
		}
		if ($end_date < $current_time) {
			form_set_error('field_ads_end_date', 'End date must be greater than or equal to current date.');
		}
	}
}

/**
 * Show ad image using nid.
 * @return string
 */
function itg_ads_show_ad_image() {
	$node = node_load(arg(1));
	
	return theme('itg_ads', array('data' => $node));
}

/**
 * Custom method to get ad script.
 * @param string $page_type
 * @return string
 */
function get_ad_script($page_type) {
	if (($page_type == 'Home') || ($page_type == 'Rest')) {
	$current_date = date("Y-m-d H:i:s");
	$query = db_select('field_data_field_ads_ad_code', 'ac');
	$query->fields('ac', array('field_ads_ad_code_value'));
	$query->fields('f', array('field_ads_placeholder_value'));
	$query->join('field_data_field_ads_template_selection', 'ts', 'ac.entity_id = ts.entity_id');
	$query->join('field_data_field_ads_placeholder', 'f', 'ac.entity_id = f.entity_id');
	$query->join('field_data_field_ads_end_date', 'ed', 'ed.entity_id = ac.entity_id');
	$query->join('field_data_field_ads_start_date', 'sd', 'sd.entity_id = ac.entity_id');
	$query->condition('ts.field_ads_template_selection_value', $page_type, '=');
	$query->condition('sd.field_ads_start_date_value', $current_date, '<=');
	$query->condition('ed.field_ads_end_date_value', $current_date, '>');
	$script_code = $query->execute()->fetchAll();
	foreach ($script_code as $row) {
		$arr[$row->field_ads_placeholder_value] = $row->field_ads_ad_code_value;
	}
	}
	else {
	$current_date = date("Y-m-d H:i:s");
	$query = db_select('field_data_field_ads_ad_code', 'ac');
	$query->fields('ac', array('field_ads_ad_code_value'));
	$query->fields('f', array('field_ads_placeholder_value'));
	$query->join('field_data_field_ads_select_secton_option', 'ts', 'ac.entity_id = ts.entity_id');
	$query->join('field_data_field_ads_placeholder', 'f', 'ac.entity_id = f.entity_id');
	$query->join('field_data_field_ads_end_date', 'ed', 'ed.entity_id = ac.entity_id');
	$query->join('field_data_field_ads_start_date', 'sd', 'sd.entity_id = ac.entity_id');
	$query->condition('ts.field_ads_select_secton_option_value', $page_type, '=');
	$query->condition('sd.field_ads_start_date_value', $current_date, '<=');
	$query->condition('ed.field_ads_end_date_value', $current_date, '>');
	$script_code = $query->execute()->fetchAll();
	foreach ($script_code as $row) {
		$arr[$row->field_ads_placeholder_value] = $row->field_ads_ad_code_value;
	}
	}
	
	return $arr;
}

/**
 * Custom function to get value of ads placeholder
 * @param int $nid
 * @return array
 */
function itg_ads_get_prefilled_value($nid) {
	$query = db_select('field_data_field_ads_placeholder', 'a');
	$query->fields('a', array('field_ads_placeholder_value'));
	$query->condition('a.entity_id', $nid, '=');
	$place_code = $query->execute()->fetchAll();
	foreach ($place_code as $row) {
		$data2[$row->field_ads_placeholder_value] = $row->field_ads_placeholder_value;
	}
	
	return $data2;
}

/**
 * Custom function to get value of template selection
 * @param int $nid
 * @return array
 */
function itg_ads_get_prefilled($nid) {
	$data3 = array();
	$query = db_select('field_data_field_ads_template_selection', 'b');
	$query->fields('b', array('field_ads_template_selection_value'));
	$query->condition('b.entity_id', $nid, '=');
	$place_code = $query->execute()->fetchAll();
	foreach ($place_code as $row) {
		$data3[$row->field_ads_template_selection_value] = $row->field_ads_template_selection_value;
	}
	
	return $data3;
}

/**
 * Custom function to get value of section selection
 * @param int $nid
 * @return array
 */
function itg_ads_get_prefilled_section($nid) {
	$data3 = array();
	$query = db_select('field_data_field_ads_section_selection', 'b');
	$query->fields('b', array('field_ads_section_selection_value'));
	$query->condition('b.entity_id', $nid, '=');
	$place_code = $query->execute()->fetchAll();
	foreach ($place_code as $row) {
		$data3[$row->field_ads_section_selection_value] = $row->field_ads_section_selection_value;
	}
	
	return $data3;
}

function itg_ads_placeholder($form, $id = '') {
	//$form['field_ads_placeholder'][LANGUAGE_NONE]['#options'] = array('-none-' => 'None');
	if ($id == 'Photo') {
		$temp_name = 'page--section_photo';
	}
	if ($id == 'Video') {
		$temp_name = 'page--section_video';
	}
	if ($id == 'Default') {
		$temp_name = 'page--section_default';
	}

	// Fetch query for Ads Placeholder
	$select = t('- None -');
	$data['_none'] = '- None -';
	//$result = array('_none' => '- None -');
	$query = db_select('taxonomy_term_data', 'tt');
	$query->join('itg_layout_tpl', 'tv', 'tv.section_name = tt.tid');
	$query->condition('tv.template_name', $temp_name, '=');
	$query->fields('tt', array('name', 'tid'));
	$query->fields('tv', array('template_name'));
	$script_code = $query->execute()->fetchAll();
	foreach ($script_code as $val) {
		$data[$val->tid] = $val->name;
//		if ($val->template_name == 'page--section_default') {
//			$data['Default'][$val->tid] = $val->name;
//		}
//		if ($val->template_name == 'page--section_photo') {
//			$data['Photo'][$val->tid] = $val->name;
//		}
//		if ($val->template_name == 'page--section_video') {
//			$data['Video'][$val->tid] = $val->name;
//		}
	}

	$results = $data;
	
	return $results;
}