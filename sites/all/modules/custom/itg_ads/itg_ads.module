<?php

/**
 * Implementation of hook_form_FORM_ID_alter().
 * @param array $form
 * @param array reference $form_state
 */
function itg_ads_form_ads_management_node_form_alter(&$form, &$form_state, $form_id) {    
    
    $form['#attached']['js'] = array(
      drupal_get_path('module', 'itg_ads') . '/js/itg_ads.js',      
    );
    $form['#after_build'][] = 'itg_common_cancel_button';    
    $form['actions']['submit']['#submit'][] = 'alter_ad_submit_status_message';
    
    $form['field_ads_section_selection']['#states'] = array(
      'visible' => array(
        ':input[name="field_ads_template_selection[und]"]' => array('value' => 'Section'),
      )
    );
    
    $form['field_ads_content_selection']['#states'] = array(
      'visible' => array(
        ':input[name="field_ads_template_selection[und]"]' => array('value' => 'Section'),
      )
    );
    
    $form['field_ads_template_variants']['#states'] = array(
      'visible' => array(
        ':input[name="field_ads_template_selection[und]"]' => array('value' => 'Home'),
      )
    );
        
    $tax = taxonomy_get_tree(CATEGORY_MANAGMENT, $parent = 0, $max_depth = 1, $load_entities = FALSE);
    $op = array();
    foreach ($tax as $key => $val) {
        $op[$val->tid] = $val->name;
    }
    
    // assign array value to taxonomy field
    $form['field_ads_section_selection']['und']['#options'] = $op;
    
 }

/**
 * Implementation of hook_form_FORM_ID_alter().
 * @param array $form
 * @param array reference $form_state
 */
function itg_ads_form_views_exposed_form_alter(&$form, &$form_state, $form_id) {
    //die($form["#id"]);
    if ($form["#id"] == 'views-exposed-form-manage-ads-page') {
    $form['title']['#autocomplete_path'] = 'content-title-list/ads_management/autocomplete';
    $form['title']['#attributes'] = array('placeholder' => t('Placeholder Title'));
}
}

/**
 * Implements views header link 
 * @param type $view Description
 */
function itg_ads_views_pre_render(&$view) {   
  if ($view->name == "manage_ads") {  
    global $user; // Get user information
    $header_content = '';
    if (!in_array('Intern', $user->roles) && !in_array('Author/Guest', $user->roles) && !in_array('Editor', $user->roles) && !in_array('Subeditor/Sr.Sub', $user->roles) && !in_array('Section Editor/Anchor', $user->roles) && !in_array('Copy Editor', $user->roles)) {      
      $header_content = '<span class="count">Count ('.$view->total_rows.') </span>';  
      $header_content .= l(t('Create Ads'), 'node/add/ads-management', array('query' => array('destination' => arg(0))));
     }

    $view->attachment_before = $header_content;
  }  
}

function alter_ad_submit_status_message(&$form, $form_state) {
   if (isset($_SESSION['messages']['status'])) {
    unset($_SESSION['messages']['status']);}
  if (arg(0) == 'node' && arg(1) == 'add' && arg(2) == 'ads-management') {
    $op = 'created';
  }
  else {
    $op = 'updated';}
  $ads_title = $form_state['node']->title;
  drupal_set_message(t('Ad <b>' . $ads_title . '</b> has been ' . $op.'.' ));
  $_GET['destination'] = $_REQUEST['destination'];
}


/**
 * Implements hook_node_validate().
 * @param type $node
 * @param type $form
 * @param type $form_state   
 */
function itg_ads_node_validate($node, $form, &$form_state) {    
  
  if ($node->type == 'ads_management') {
      
    $template = $node->field_ads_template_selection[LANGUAGE_NONE][0]['value'];
    $content_selection = $node->field_ads_content_selection[LANGUAGE_NONE][0]['tid'];
    $section_selection = $node->field_ads_section_selection[LANGUAGE_NONE][0]['tid'];
    $template_variants = $node->field_ads_template_variants[LANGUAGE_NONE][0]['tid'];
    
    // code to check if issue based is check fill magazine kicker text
    if ($template == 'Section') {
      if (empty($content_selection)) {
        form_set_error('field_ads_content_selection', t("Content selection is required"));
      }
    }
    
    // code to validation magazine field when issue based story is checked
    if ($template == 'Section') {
      if (empty($section_selection)) {
        form_set_error('field_ads_section_selection', t("Section selection is required"));
      }
    }   
    if ($template == 'Home') {
      if (empty($template_variants)) {
        form_set_error('field_ads_template_variants', t("Template variant is required"));
      }
    }  
    $startdate = strtotime($form_state['values']['field_ads_start_date'][LANGUAGE_NONE][0]['value']);
    $enddate = strtotime($form_state['values']['field_ads_end_date'][LANGUAGE_NONE][0]['value']);
    if($enddate < $startdate){
    form_set_error('field_ads_end_date', 'End date must be greater than or equal to Start date.');
  }
  }
}