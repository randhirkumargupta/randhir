<?php

/**
 * @file
 * ITG workflow module.
 *
 * Provides customizations and functions for workflow.
 *
 */

/**
 * Implemets hook_form_alter().
 * @param type $form
 * @param type $form_state
 * @param type $form_id
 */
function itg_workflow_form_alter(&$form, &$form_state, $form_id) {
  global $user, $base_url;
  
  switch ($form_id) {
    case 'story_node_form':
    case 'photogallery_node_form':
    case 'blog_node_form':
      $form['#after_build'][] = 'itg_workflow_after_build';
    break;
    
    case 'views_exposed_form':
      $form['#after_build'][] = 'itg_workflow_views_exposed_form_after_build';      
    break;
  }
}

/**
 * After build for story form.
 * @param type $form
 * @param type $form_state
 */
function itg_workflow_after_build($form, &$form_state) {
  global $user, $base_url;
 
  // code for sequence change of modration field
 
  $log = $form['revision_information']['log'];
  $state = $form['revision_information']['workbench_moderation_state_new'];
  unset($form['revision_information']['log']);
  unset($form['revision_information']['workbench_moderation_state_new']);
  $form['revision_information']['workbench_moderation_state_new'] = $state;
  
  // Code for rejection master message
  if ($form['#entity']->workbench_moderation['current']->state == 'needs_review') {
    $vid = taxonomy_vocabulary_machine_name_load('reasons_for_reject');
    $terms=taxonomy_get_tree($vid->vid);
    foreach($terms as $key => $val){
      $term_name[$val->name] = $val->name;
    }
    $form['revision_information']['reject_msg'] = array(
        '#type' => 'select',
        '#title' => t('Remarks'),
        '#options' => $term_name,        
        '#attributes' => array('class' => array('reasons-form-msg')),
        '#prefix' => '<div class="reasons-form">',
        '#suffix' => '</div>',
    );
  }
  
  $form['revision_information']['log'] = $log;  
  $form['revision_information']['log']['#title'] = t('Remarks');
 
 // hide workbench dropdown
  drupal_add_js('jQuery(document).ready(function() {
              jQuery("#edit-revision-information").show();
              jQuery(".form-item-workbench-moderation-state-new").hide();
              jQuery("#edit-field-story-archive").hide();              
            });', array('type' => 'inline', 'scope' => 'footer'));
  
  if (array_key_exists(SECTION_EDITOR_ANCHOR, $user->roles) || array_key_exists(COPY_EDITOR, $user->roles) || array_key_exists(EDITOR, $user->roles) || array_key_exists(UGC_MODERATOR, $user->roles)) {    
    if (!isset($form['#node']->workbench_moderation['current'])) {
      $state_class = ' published';
      $submit_name = 'Publish';
      $form['actions']['submit']['#value'] = t('Save as Draft');
      
    } else if (isset($form['#node']->workbench_moderation['current'])) {
      if ($form['#node']->workbench_moderation['current']->state == 'draft') {
        $state_class = ' published';
        $submit_name = 'Publish';
        $form['actions']['submit']['#value'] = t('Save as Draft');
        
      } else if ($form['#node']->workbench_moderation['current']->state == 'needs_review') {
            $submit_name = '';            
            $state_class = ' published';
            $form['actions']['submit']['#attributes']['class'][] = 'edit-submit-class';
            //p($form['actions']['submit']);
            /*drupal_add_js('jQuery(document).ready(function() {              
              jQuery(".form-item-workbench-moderation-state-new").show();
              jQuery("#edit-log").val("");
            });', array('type' => 'inline', 'scope' => 'footer'));*/
            
            drupal_add_js('jQuery(document).ready(function() {              
              jQuery(".form-item-workbench-moderation-state-new").show();
              jQuery(".reasons-form").hide();              
              jQuery("#edit-log").val("");
              
               jQuery("#edit-workbench-moderation-state-new").change(function() {
                jQuery("#edit-log").val("");
                if(jQuery("#edit-workbench-moderation-state-new").val() == "rejected") {                  
                  jQuery(".form-item-log").hide();
                  jQuery("#edit-log").val(jQuery(".reasons-form-msg").val());
                  jQuery(".reasons-form").show();
                  
                  jQuery(".reasons-form-msg").change(function() {
                    jQuery("#edit-log").val(jQuery(".reasons-form-msg").val());
                  });
                } else {
                  jQuery(".form-item-log").show();
                  jQuery(".reasons-form").hide();
                }
              });
            });', array('type' => 'inline', 'scope' => 'footer'));
            
          }      
    }
  } else if (array_key_exists(AUTHOR_GUEST, $user->roles) || array_key_exists(INTERN, $user->roles) || array_key_exists(SUBEDITOR_SR_SUB, $user->roles)) {
      if (!isset($form['#node']->workbench_moderation['current'])) {
        $submit_name = 'Submit for Review';
        $state_class = ' needs_review';
        $form['actions']['submit']['#value'] = t('Save as Draft'); 
        
      } else if (isset($form['#node']->workbench_moderation['current']) && ($form['#node']->workbench_moderation['current']->state == 'draft' || $form['#node']->workbench_moderation['current']->state == 'needs_review' || $form['#node']->workbench_moderation['current']->state == 'needs_modification')) {
          if ($form['#node']->workbench_moderation['current']->state == 'needs_review') {
            $submit_name = '';
            
          } else if ($form['#node']->workbench_moderation['current']->state == 'needs_modification') {
            $submit_name = 'Submit for Review';
            $state_class = ' needs_review';
            $form['actions']['submit']['#value'] = t('Save as Draft');
            
            drupal_add_js('jQuery(document).ready(function() {
              jQuery("#edit-workbench-moderation-state-new").val("needs_modification");              
            });', array('type' => 'inline', 'scope' => 'footer'));
            
          } else if ($form['#node']->workbench_moderation['current']->state == 'published') {
              $submit_name = '';
              
          } else if ($form['#node']->workbench_moderation['current']->state == 'draft') {
              $submit_name = 'Submit for Review';
              $state_class = ' needs_review';
              $form['actions']['submit']['#value'] = t('Save as Draft');
              
          } else {
            
          }          
      }
  }

  if (!empty($submit_name)) {    
    $form['actions']['submit_link'] = array(
        '#markup' => '<a href="javascript:void(0)" id="story_submit_link" class="button'. $state_class .'">'.t($submit_name).'</a>',
        '#weight' => 20,
      );
  } 
    
  $settings = array();
  $settings['base_url'] = $base_url;
  $settings['uid'] = $user->uid;

  drupal_add_js(array('itg_story' => array('settings' => $settings)), array('type' => 'setting'));
  drupal_add_js(drupal_get_path('module', 'itg_workflow') . '/js/itg_workflow.js', array('weight' => 1));
  
  // Code for UGC
  $arg3 = arg(3);
  if (arg(1) == 'add' && isset($arg3) && is_numeric($arg3)) {
    drupal_add_js('jQuery(document).ready(function() {
              jQuery("#edit-submit").hide();              
            });', array('type' => 'inline', 'scope' => 'footer'));
  }
  //End
  return $form;
}


/**
 * Implements hook_node_presave.
 * @param type $node
 */
function itg_workflow_node_presave($node) {
  if ($node->type == 'story' || $node->type == 'photogallery' || $node->type == 'blog') {  
   if ($node->workbench_moderation['current']->state == 'published' && $node->status == 1) {
    $node->workbench_moderation_state_new = 'published';
   }
  }
}

/**
 * After build for views exposed form.
 * @param type $form
 * @param type $form_state
 */
function itg_workflow_views_exposed_form_after_build($form, &$form_state) {
  global $user, $base_url;
  
  if ($form['#id'] == 'views-exposed-form-strory-menegment-page-6' || $form['#id'] == 'views-exposed-form-photo-gallery-management-page-6') {
    $form['state']['#options'] = array('All' => '-All-', 
                                       'needs_review' => 'Submitted for Review', 
                                       'rejected' => 'Rejected', 
                                       'needs_modification' => 'Needs Modification' );
    
  } else if ($form['#id'] == 'views-exposed-form-strory-menegment-page-5') {     
    $form['field_story_schedule_date_time_value_1_op']['#options'] = array('empty' => t('-All-'), '<' => 'Published', '>=' => t('To Be Live'));    
    
    drupal_add_js('jQuery(document).ready(function() {
              jQuery("#edit-field-story-schedule-date-time-value-value-wrapper").hide();              
            });', array('type' => 'inline', 'scope' => 'footer'));
    
  } else if ($form['#id'] == 'views-exposed-form-strory-menegment-page-1' || $form['#id'] == 'views-exposed-form-strory-menegment-page-12') {     
    $form['field_story_schedule_date_time_value_op']['#options'] = array('empty' => t('-All-'), '<' => 'Published', '>=' => t('To Be Live'));    
    
    drupal_add_js('jQuery(document).ready(function() {
              jQuery("#edit-field-story-schedule-date-time-value-value-wrapper").hide();
              jQuery("#edit-field-story-schedule-date-time-value-op").click(function() {                     
                     jQuery("#edit-field-story-schedule-date-time-value-value-wrapper").hide();                     
                 });
            });', array('type' => 'inline', 'scope' => 'footer'));
    
  } else if ($form['#id'] == 'views-exposed-form-strory-menegment-page') {
      
      // Code for Bulk opration related work for story
      
      drupal_add_js('jQuery(document).ready(function() {
               jQuery("#edit-actionviews-bulk-operations-modify-action").val("Archive");
               var myInputBoxID = "edit-bundle-story-appendfield-story-archive";
               jQuery("label[for=" + myInputBoxID + "]").hide();
               jQuery("#edit-bundle-story-appendfield-story-archive").hide();
               jQuery("#edit-tokens").hide();
               jQuery("#edit-actions-submit").val("Archive");
               jQuery("#edit-bundle-story-field-story-archive-und-yes").attr("checked", true);
               jQuery("#edit-bundle-story-field-story-archive-und").hide();               
             });', array('type' => 'inline', 'scope' => 'footer'));
      
  } else if ($form['#id'] == 'views-exposed-form-photo-gallery-management-page') {
      
      // Code for Bulk opration related work for Gallery
      
      // itg_workflow_bulk_opration_related('edit-bundle-photogallery-appendfield-story-archive', 'edit-bundle-photogallery-field-story-archive-und');
      
      drupal_add_js('jQuery(document).ready(function() {
               jQuery("#edit-actionviews-bulk-operations-modify-action").val("Archive");
               var myInputBoxID = "edit-bundle-photogallery-appendfield-story-archive";
               jQuery("label[for=" + myInputBoxID + "]").hide();
               jQuery("#edit-bundle-photogallery-appendfield-story-archive").hide();
               jQuery("#edit-tokens").hide();
               jQuery("#edit-actions-submit").val("Archive");
               jQuery("#edit-bundle-photogallery-field-story-archive-und-yes").attr("checked", true);
               jQuery("#edit-bundle-photogallery-field-story-archive-und").hide();               
             });', array('type' => 'inline', 'scope' => 'footer'));
      
  } else if ($form['#id'] == 'views-exposed-form-blogs-management-page') {
    
      // itg_workflow_bulk_opration_related('edit-bundle-blog-appendfield-story-archive', 'edit-bundle-blog-field-story-archive-und');
      
      // Code for Bulk opration related work for Blog
      drupal_add_js('jQuery(document).ready(function() {
               jQuery("#edit-actionviews-bulk-operations-modify-action").val("Archive");
               var myInputBoxID = "edit-bundle-blog-appendfield-story-archive";
               jQuery("label[for=" + myInputBoxID + "]").hide();
               jQuery("#edit-bundle-blog-appendfield-story-archive").hide();
               jQuery("#edit-tokens").hide();
               jQuery("#edit-actions-submit").val("Archive");
               jQuery("#edit-bundle-blog-field-story-archive-und-yes").attr("checked", true);
               jQuery("#edit-bundle-blog-field-story-archive-und").hide();               
             });', array('type' => 'inline', 'scope' => 'footer'));
      
  }
  
  return $form;
}

/**
 * Implementation of hook_views_query_alter
 * @param type $view
 * @param type $query 
 */
function itg_workflow_views_query_alter(&$view, &$query) {

  // < published and >= approved
  
  // for story list
  if ((!isset($_REQUEST['field_story_schedule_date_time_value_1_op'])) && $view->current_display == 'page_5') {
    unset($view->query->where[1]['conditions'][4]);
  } else if ((!isset($_REQUEST['field_story_schedule_date_time_value_op'])) && $view->current_display == 'page_1') {
    unset($view->query->where[1]['conditions'][4]);
  }  
  
}

/**
 * Implementation of hook_query_alte
 * @param type $query * 
 */
function itg_workflow_query_alter(QueryAlterableInterface $query) {
  if (isset($query->hasTag) && $query->hasTag('views')) {
    static $count;
    $view =& $query->getMetaData('view');
    if ($view->name == 'view_moderation_history' || $view->current_display == 'block_1') {
      $query->groupBy('node_revision_vid');
    }
  }
}

/**
 * Implements hook_node_access.
 * Check access for forum menu item.
 * @param type $node
 * @param type $op
 * @param type $account
 */
function itg_workflow_node_access($node, $op, $account) {
  global $user;
  
  $arr_source_type = array('issue', 'supplement');
 
  if (isset($node->type) && $node->type == 'story' && $op == 'update' && (isset($node->field_story_source_type[LANGUAGE_NONE]) && !in_array($node->field_story_source_type[LANGUAGE_NONE][0]['value'], $arr_source_type))) {
    $story_expiry_date = strtotime($node->field_story_expiry_date[LANGUAGE_NONE][0]['value']);
    $current_time = time();
    
    if ($node->status == 0 && (($node->field_story_archive[LANGUAGE_NONE][0]['value'] == 'Yes') || $node->workbench_moderation['current']->state == 'rejected'))
      return NODE_ACCESS_DENY;
    else if (($story_expiry_date < $current_time) && (arg(0) != 'issue-listing'))
      return NODE_ACCESS_DENY;
  } else if (isset($node->type) && $op == 'update' && ($node->type == 'photogallery' || $node->type == 'blog')) {
      if ($node->status == 0 && (($node->field_story_archive[LANGUAGE_NONE][0]['value'] == 'Yes') || $node->workbench_moderation['current']->state == 'rejected')) {
        return NODE_ACCESS_DENY;
      }
  }
  
   // code for lock story  
   if (isset($node->type) && $node->type == 'story' && $node->status == 1) {    
     if (!array_key_exists(COPY_EDITOR, $user->roles) && !array_key_exists(SECTION_EDITOR, $user->roles) && !array_key_exists(EDITOR, $user->roles)){
       foreach ($node->field_story_configurations[LANGUAGE_NONE] as $key => $val) {
         if ($val['value'] == 'display_lock') {
           return NODE_ACCESS_DENY;
         }
       }       
     }
   }  

  return NODE_ACCESS_IGNORE;
}

/**
 * Implements hook_node_view.
 * @param type $node
 * @param type $view_mode
 * @param type $langcode
 */
function itg_workflow_node_view($node, $view_mode, $langcode) {
  if ($node->type == 'story' || $node->type == 'photogallery' || $node->type == 'blog') {  
    $node->moderation_history_block = views_embed_view('view_moderation_history', 'block_2');
  }
}


/**
 * Implements hook_node_validate().
 * @param type $form
 * @param type $form
 * @param type $form   
 */
function itg_workflow_node_validate($node, $form, &$form_state) {
  // Code for check remarks field is empty or not
   if ($node->type == 'story' || $node->type == 'photogallery' || $node->type == 'blog') {     
    if (empty($node->log) && (($node->workbench_moderation_state_new == 'needs_modification') || ($node->workbench_moderation_state_new == 'rejected'))) {
      form_set_error('log', t("Remarks field is required."));
    }
  }
}


/**
 * Bulk opration related work
 * @param type $field1:edit-bundle-blog-appendfield-story-archive
 * @param type $field2:edit-bundle-blog-field-story-archive-und    
 */
function itg_workflow_bulk_opration_related($field1, $field2) {
  drupal_add_js('jQuery(document).ready(function() {
                jQuery("#edit-actionviews-bulk-operations-modify-action").val("Archive");
                var myInputBoxID = '.$field1.';
                jQuery("label[for=" + myInputBoxID + "]").hide();
                jQuery("#"+myInputBoxID).hide();
                jQuery("#edit-tokens").hide();
                jQuery("#edit-actions-submit").val("Archive");
                var fieldId = '.$field2.';
                jQuery("#"+fieldId+"-yes").attr("checked", true);
                jQuery("#"+fieldId).hide();               
             });', array('type' => 'inline', 'scope' => 'footer'));
}
