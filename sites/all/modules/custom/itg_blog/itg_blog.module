<?php

/**
 * @file
 * The ITG Blog module.
 *
 * Contains functionality related to Blog.
 *
 */

/**
 * Implementation of hook_node_presave().
 * {@inheritdoc}
 */
function itg_blog_node_presave($node) {
  if ($node->type == 'blog') {
    $node->title = trim($node->title);
  }
}

/**
 * Implement hook_views_pre_render
 * {@inheritdoc}
 */
function itg_blog_views_pre_render(&$view) {

  if ($view->name == "manage_blogs") {
    $header_content_blog = '<span class="count">Count (' . $view->total_rows . ') </span>';
    $header_content_blog .= l(t('Post new Blog'), 'node/add/blog', array('query' => array('destination' => 'manage-blogs')));
    $view->attachment_before = $header_content_blog;
  }

  if ($view->name == "blogs_management") {
    $header_content_blog = '<span class="count">Count (' . $view->total_rows . ') </span>';
    $view->attachment_before = $header_content_blog;
  }
}

/**
 * Implements hook_form_alter().
 * {@inheritdoc}
 */
function itg_blog_form_alter(&$form, &$form_state, $form_id) {

  switch ($form_id) {
    case 'blog_node_form':
      if (!isset($_REQUEST['destination'])) {
        $destination = '';
      }
      else {
        $destination_array = explode('?', $_REQUEST['destination']);
        $destination = $destination_array[0];
      }

      $form['actions']['cancel'] = array(
        '#markup' => l(t('Cancel'), $destination, array('attributes' => array('class' => 'button'))),
        '#weight' => 20,
      );

      $form['#after_build'][] = 'itg_blog_after_build';
      $form['actions']['submit']['#submit'][] = 'itg_blog_form_custom_callback';

      break;
  }
}

/**
 * Custom submit callback for redirecting Blog form.
 * @param array $form
 * @param array $form_state
 */
function itg_blog_form_custom_callback($form, &$form_state) {

  $workbench_current_state = $form_state['node']->workbench_moderation_state_new;
  $node_type = ucfirst($form_state['node']->type);
  $node_type = str_replace("_", " ", $node_type);
  $title = ucfirst($form_state['node']->title);

  if (isset($_SESSION['messages']['status'])) {
    unset($_SESSION['messages']['status']);
  }

  itg_custom_message($node_type, $workbench_current_state, arg(1), $title, $_REQUEST['destination']);
}

/**
 * After build for Blog form.
 * @param array $form
 * @param array $form_state
 * @return array $form
 */
function itg_blog_after_build($form, &$form_state) {

  global $user, $base_url;
  
  $settings = array();
  $settings['base_url'] = $base_url;
  $settings['uid'] = $user->uid;

  drupal_add_js(array('itg_blog' => array('settings' => $settings)), array('type' => 'setting'));
  drupal_add_js(drupal_get_path('module', 'itg_blog') . '/js/itg_blog.js', array('weight' => 1));

  return $form;
}

/**
 * Implements hook_theme()
 * {@inheritdoc}
 */
function itg_blog_theme($existing, $type, $theme, $path) {
  $themes = array(
    'blog_node_form' => array(
      'arguments' => array('form' => NULL),
      'template' => 'blog-node-form',
      'path' => drupal_get_path('module', 'itg_blog') . '/templates',
      'render element' => 'form',
    ),
    'itg_blog_tab_form_display_block' => array(
      'template' => 'itg-blog-form-tab-template',
      'path' => drupal_get_path('module', 'itg_blog') . '/templates',
      'variables' => array('data' => NULL),
    ),
  );

  return $themes;
}

/**
 * Implement hook_form_views_exposed_form_alter
 * {@inheritdoc}
 */
function itg_blog_form_views_exposed_form_alter(&$form, &$form_state, $form_id) {
  if ($form["#id"] == 'views-exposed-form-manage-blogs-page' || $form["#id"] == 'views-exposed-form-blogs-management-page' || $form['#id'] == 'views-exposed-form-blogs-management-page-1' || $form['#id'] == 'views-exposed-form-blogs-management-page-2' || $form['#id'] == 'views-exposed-form-blogs-management-page-3' || $form['#id'] == 'views-exposed-form-blogs-management-page-5' || $form['#id'] == 'views-exposed-form-blogs-management-page-6' || $form['#id'] == 'views-exposed-form-blogs-management-page-7' || $form['#id'] == 'views-exposed-form-blogs-management-page-4' || $form['#id'] == 'views-exposed-form-blogs-management-page-10') {
    $form['title']['#autocomplete_path'] = 'content-title-list/blog/autocomplete';
    $form['title']['#attributes'] = array('placeholder' => t('Title'));
    $form['nid']['#autocomplete_path'] = 'content-nid-list/blog/autocomplete';
    $form['nid']['#attributes'] = array('placeholder' => t('Blogs ID'));
  }
}

/**
 * Implements hook_block_info().
 * @return array $blocks
 */
function itg_blog_block_info() {
  $blocks['blog_tab_form_block'] = array(
    'info' => t('Blog Form Tab Block'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 * {@inheritdoc}
 */
function itg_blog_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'blog_tab_form_block':
      $block['content'] = theme('itg_blog_tab_form_display_block', array('data' => ''));
      break;
  }

  return $block;
}

