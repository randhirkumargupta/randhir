<?php

function itg_rapid_api_resource() {
    /**
     * custom resource for sprit1
     */
    $api = array(
        // testing custom resource declaration.....
        'testing' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves testing schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_testing',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                    ),
                ),
            ),
        ),
        // hamburger_menu custom resource declaration.....
        'hamburger_menu' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves hamburger_menu schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_hamburger_menu',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                    ),
                ),
            ),
        ),
        // horizontal_menu custom resource declaration.....
        'horizontal_menu' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves horizontal_menu schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_horizontal_menu',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            //'source' => array('param' => 'token'),
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                    ),
                ),
            ),
        ),
        // config_update_status custom resource declaration.....
        'config_update_status' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves config_update_status schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_config_update_status',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                    ),
                ),
            ),
        ),
        // master_config custom resource declaration.....
        'master_config' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves master_config schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_master_config',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                    ),
                ),
            ),
        ),
        // server_error_master custom resource declaration.....
        'server_error_master' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves server_error_master schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_server_error_master',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                    ),
                ),
            ),
        ),
        // photolist custom resource declaration.....
        'photolist' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves photolist schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_photolist',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                    ),
                ),
            ),
        ),
        // photodetail custom resource declaration.....
        'photodetail' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves photodetail schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_photodetail',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                    ),
                ),
            ),
        ),
        // videolist custom resource declaration.....
        'videolist' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves videolist schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_videolist',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                    ),
                ),
            ),
        ),
        // programlist custom resource declaration.....
        'programlist' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves programlist schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_programlist',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                    ),
                ),
            ),
        ),
        // newslist custom resource declaration.....
        'newslist' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves newslist schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_newslist',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                    ),
                ),
            ),
        ),
        // datanotexist_api custom resource declaration.....
        'datanotexist_api' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves datanotexist_api schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_datanotexist_api',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                    ),
                ),
            ),
        ),
        // sprint 2 api start
        // photostorydetail custom resource declaration.....
        'photostorydetail' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves photostorydetail schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_photostorydetail',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                    ),
                ),
            ),
        ),
        // program_category_list custom resource declaration.....
        'program_category_list' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves program_category_list schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_program_category_list',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                    ),
                ),
            ),
        ),
        // ad_config_json custom resource declaration.....
        'ad_config_json' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves ad_config_json schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_ad_config_json',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                    ),
                ),
            ),
        ),
        // livetv_channellist_json custom resource declaration.....
        'livetv_channellist' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves livetv_channellist_json schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_livetv_channellist_json',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                    ),
                ),
            ),
        ),
        // livetv_json custom resource declaration.....
        'livetv' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves livetv_json schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_livetv_json',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                    ),
                ),
            ),
        ),
        // livetv_indiatoday_json custom resource declaration.....
        'livetv_indiatoday' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves livetv_json schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_livetv_indiatoday',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                    ),
                ),
            ),
        ),
        // livetv_aajtak_json custom resource declaration.....
        'livetv_aajtak' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves livetv_json schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_livetv_aajtak',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                    ),
                ),
            ),
        ),
        // livetv_delhiaajtak_json custom resource declaration.....
        'livetv_delhiaajtak' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves livetv_json schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_livetv_delhiaajtak',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                    ),
                ),
            ),
        ),
        // livetv_tej_json custom resource declaration.....
        'livetv_tej' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves livetv_json schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_livetv_tej',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                    ),
                ),
            ),
        ),
        // otherapps_ios_json custom resource declaration.....
        'otherapps_ios' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves otherapps_ios_json schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_otherapps_ios_json',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                    ),
                ),
            ),
        ),
        // otherapps_android_json custom resource declaration.....
        'otherapps_android' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves otherapps_android_json schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_otherapps_android_json',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                    ),
                ),
            ),
        ),
        // magazine section start
        // magazine_edition custom resource declaration.....
        'magazine_edition' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves magazine_edition schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_magazine_edition',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                    ),
                ),
            ),
        ),
        // magazine_coverstories custom resource declaration.....
        'magazine_coverstories' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves magazine_coverstories schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_magazine_coverstories',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                    ),
                ),
            ),
        ),
        // magazine_editionlist custom resource declaration.....
        'magazine_editionlist' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves magazine_editionlist schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_magazine_editionlist',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                    ),
                ),
            ),
        ),
        // magazine section end
        // storydetail custom resource declaration.....
        'storydetail' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves storydetail schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_storydetail',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                    ),
                ),
            ),
        ),
        // homePage custom resource declaration.....
        'home' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves storydetail schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_homePage',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                    ),
                ),
            ),
        ),
        // login_request custom resource declaration.....
        'login_request' => array(
            'operations' => array(
                'create' => array(
                    'help' => 'Retrieves storydetail schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_login_request',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
//                        array(
//                            'name' => 'token',
//                            'type' => 'array',
//                            'description' => 'Function to perform',
//                            'source' => array('path' => 0),
//                            'optional' => TRUE,
//                            'default' => '*',
//                        ),
                        array(
                            'name' => 'user_id',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'user_id'),
                            'source' => array('data'),
                            'description' => 'user email or mobile',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'password',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'password'),
                            'source' => array('data'),
                            'description' => 'user password',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'device_id',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'login_type'),
                            'source' => array('data'),
                            'description' => 'device_id ',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'device_type',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'token_id'),
                            'source' => array('data'),
                            'description' => 'device_type',
                            'type' => 'array',
                        ),
                    ),
                ),
            ),
        ),
        // signup custom resource declaration.....
        'signup' => array(
            'operations' => array(
                'create' => array(
                    'help' => 'Retrieves storydetail schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_signup',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
//                        array(
//                            'name' => 'token',
//                            'type' => 'string',
//                            'description' => 'Function to perform',
//                            'source' => array('path' => 0),
//                            'optional' => TRUE,
//                            'default' => '*',
//                        ),
                        array(
                            'name' => 'first_name',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'first_name'),
                            'source' => array('data'),
                            'description' => 'First Name',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'last_name',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'last_name'),
                            'source' => array('data'),
                            'description' => 'Last Name',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'user_id',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'user_id'),
                            'source' => array('data'),
                            'description' => 'User email or mobile number',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'password',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'password'),
                            'source' => array('data'),
                            'description' => 'Password',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'confirm_password',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'password'),
                            'source' => array('data'),
                            'description' => 'Confirm Password',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'login_type',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'login_type'),
                            'source' => array('data'),
                            'description' => '0=for traditional, 1=socail media',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'email_id',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'password'),
                            'source' => array('data'),
                            'description' => 'Email Id',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'phone_number',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'password'),
                            'source' => array('data'),
                            'description' => 'Phone Number',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'location',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'password'),
                            'source' => array('data'),
                            'description' => 'Location',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'profile_image',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'password'),
                            'source' => array('data'),
                            'description' => 'Profile image',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'gender',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'password'),
                            'source' => array('data'),
                            'description' => 'Gender',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'date_of_birth',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'password'),
                            'source' => array('data'),
                            'description' => 'Date of birth',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'device_id',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'password'),
                            'source' => array('data'),
                            'description' => 'Device id',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'device_type',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'password'),
                            'source' => array('data'),
                            'description' => 'Device type',
                            'type' => 'array',
                        )
                    ),
                ),
            ),
        ),
        // fblogin custom resource declaration.....
        'fblogin' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves fblogin schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_fblogin',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                        array(
                            'name' => 'app_id',
                            'optional' => FALSE,
                            'source' => 'data',
                            //'source' => array('data' => 'user_id'),
                            'description' => 'application master id',
                            'type' => 'string',
                        ),
                        array(
                            'name' => 'uname',
                            'optional' => FALSE,
                            'source' => 'data',
                            //'source' => array('data' => 'password'),
                            'description' => 'username (in socail login)',
                            'type' => 'string',
                        ),
                        array(
                            'name' => 'uid',
                            'optional' => FALSE,
                            'source' => 'data',
                            //'source' => array('data' => 'login_type'),
                            'description' => 'uid (in socail login)',
                            'type' => 'int',
                        ),
                        array(
                            'name' => 'issued_at',
                            'optional' => FALSE,
                            'source' => 'data',
                            //'source' => array('data' => 'token_id'),
                            'description' => 'in timestamp',
                            'type' => 'int',
                        ),
                        array(
                            'name' => 'expires_at',
                            'optional' => FALSE,
                            'source' => 'data',
                            //'source' => array('data' => 'token_id'),
                            'description' => 'in timestamp',
                            'type' => 'int',
                        ),
                    ),
                ),
            ),
        ),
        // twtlogin custom resource declaration.....
        'twtlogin' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves twtlogin schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_twtlogin',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                        array(
                            'name' => 'app_id',
                            'optional' => FALSE,
                            'source' => 'data',
                            //'source' => array('data' => 'user_id'),
                            'description' => 'application master id',
                            'type' => 'string',
                        ),
                        array(
                            'name' => 'uname',
                            'optional' => FALSE,
                            'source' => 'data',
                            //'source' => array('data' => 'password'),
                            'description' => 'username (in socail login)',
                            'type' => 'string',
                        ),
                        array(
                            'name' => 'uid',
                            'optional' => FALSE,
                            'source' => 'data',
                            //'source' => array('data' => 'login_type'),
                            'description' => 'uid (in socail login)',
                            'type' => 'int',
                        ),
                        array(
                            'name' => 'issued_at',
                            'optional' => FALSE,
                            'source' => 'data',
                            //'source' => array('data' => 'token_id'),
                            'description' => 'in timestamp',
                            'type' => 'int',
                        ),
                        array(
                            'name' => 'expires_at',
                            'optional' => FALSE,
                            'source' => 'data',
                            //'source' => array('data' => 'token_id'),
                            'description' => 'in timestamp',
                            'type' => 'int',
                        ),
                    ),
                ),
            ),
        ),
        // forgot_password custom resource declaration.....
        'forgot_password' => array(
            'operations' => array(
                'create' => array(
                    'help' => 'Retrieves forgot_password schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_forgot_password',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
//                        array(
//                            'name' => 'token',
//                            'type' => 'string',
//                            'description' => 'Function to perform',
//                            'source' => array('path' => 0),
//                            'optional' => TRUE,
//                            'default' => '*',
//                        ),
                        array(
                            'name' => 'user_id',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'user_id'),
                            'source' => array('data'),
                            'description' => 'user mobile or email',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'device_id',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'user_id'),
                            'source' => array('data'),
                            'description' => 'device_id',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'device_type',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'user_id'),
                            'source' => array('data'),
                            'description' => 'device_type',
                            'type' => 'array',
                        ),
                    ),
                ),
            ),
        ),
        // otp_verification custom resource declaration.....
        'otp_verification' => array(
            'operations' => array(
                'create' => array(
                    'help' => 'Retrieves otp_verification schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_otp_verification',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
//                        array(
//                            'name' => 'token',
//                            'type' => 'string',
//                            'description' => 'Function to perform',
//                            'source' => array('path' => 0),
//                            'optional' => TRUE,
//                            'default' => '*',
//                        ),
                        array(
                            'name' => 'user_id',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'user_id'),
                            'source' => array('data'),
                            'description' => 'user mobile or email',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'otp_code',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'user_id'),
                            'source' => array('data'),
                            'description' => 'otp_code',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'device_id',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'user_id'),
                            'source' => array('data'),
                            'description' => 'device_id',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'device_type',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'user_id'),
                            'source' => array('data'),
                            'description' => 'device_type',
                            'type' => 'array',
                        ),
                    ),
                ),
            ),
        ),
        // resend_otp custom resource declaration.....
        'resend_otp' => array(
            'operations' => array(
                'create' => array(
                    'help' => 'Retrieves resend_otp schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_resend_otp',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
//                        array(
//                            'name' => 'token',
//                            'type' => 'string',
//                            'description' => 'Function to perform',
//                            'source' => array('path' => 0),
//                            'optional' => TRUE,
//                            'default' => '*',
//                        ),
                        array(
                            'name' => 'user_id',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'user_id'),
                            'source' => array('data'),
                            'description' => 'user mobile or email',
                            'type' => 'array',
                        ),
                    ),
                ),
            ),
        ),
        // change_password custom resource declaration.....
        'change_password' => array(
            'operations' => array(
                'create' => array(
                    'help' => 'Retrieves change_password schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_change_password',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
//                        array(
//                            'name' => 'token',
//                            'type' => 'string',
//                            'description' => 'Function to perform',
//                            'source' => array('path' => 0),
//                            'optional' => TRUE,
//                            'default' => '*',
//                        ),
                        array(
                            'name' => 'user_id',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'user_id'),
                            'source' => array('data'),
                            'description' => 'user mobile or email',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'auth_token',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'user_id'),
                            'source' => array('data'),
                            'description' => 'auth token',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'old_password',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'user_id'),
                            'source' => array('data'),
                            'description' => 'old password',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'new_password',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'user_id'),
                            'source' => array('data'),
                            'description' => 'new password',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'confirm_password',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'user_id'),
                            'source' => array('data'),
                            'description' => 'confirm password',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'device_id',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'user_id'),
                            'source' => array('data'),
                            'description' => 'device id',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'device_type',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'user_id'),
                            'source' => array('data'),
                            'description' => 'device type',
                            'type' => 'array',
                        ),
                    ),
                ),
            ),
        ),
        // sprint 3 : Author latest story list @ dhmendra
        'author_story_list' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves latest story list of a particular author.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'author_latest_story',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                    ),
                ),
            ),
        ),
        // sprint 3 open poll
        'polls_open' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves All the open poll in the system.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'polls_open',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                    ),
                ),
            ),
        ),
        //Sprint 3 close poll
        'polls_close' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves All the close/expire poll in the system.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'polls_close',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                    ),
                ),
            ),
        ),
        //Sprint 3 close poll
        'poll_detail' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves poll data based on poll id in the system.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'poll_detail',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                        array(
                            'name' => 'poll_id',
                            'optional' => FALSE,
                            'source' => 'data',
                            //'source' => array('data' => 'first_name'),
                            'description' => 'Poll id',
                            'type' => 'string',
                        ),
                    ),
                ),
            ),
        ),
        //sprint 3 cast poll id
        'cast_polls' => array(
            'operations' => array(
                'create' => array(
                    'help' => 'Cast poll on the basis of poll id & option id',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_poll_cast',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
//                        array(
//                            'name' => 'token',
//                            'type' => 'array',
//                            'description' => 'Function to perform',
//                            'source' => array('path' => 0),
//                            'optional' => TRUE,
//                            'default' => '*',
//                        ),
                        array(
                            'name' => 'poll_id',
                            'optional' => TRUE,
                            'source' => array('data'),
                            'description' => 'First Name',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'option_id',
                            'optional' => TRUE,
                            'source' => array('data'),
                            'description' => 'Last Name',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'user_id',
                            'optional' => TRUE,
                            'source' => array('data'),
                            'description' => 'User email or mobile number',
                            'type' => 'array',
                        ),
                    ),
                ),
            ),
        ),
        // edit_profile custom resource declaration.....
        'edit_profile' => array(
            'operations' => array(
                'create' => array(
                    'help' => 'Retrieves edit_profile schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_edit_profile',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
//                        array(
//                            'name' => 'token',
//                            'type' => 'string',
//                            'description' => 'Function to perform',
//                            'source' => array('path' => 0),
//                            'optional' => TRUE,
//                            'default' => '*',
//                        ),
                        array(
                            'name' => 'authtoken_id',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'first_name'),
                            'source' => array('data'),
                            'description' => 'authtoken_id',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'user_id',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'first_name'),
                            'source' => array('data'),
                            'description' => 'user_id',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'first_name',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'first_name'),
                            'source' => array('data'),
                            'description' => 'first_name',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'last_name',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'first_name'),
                            'source' => array('data'),
                            'description' => 'last_name',
                            'type' => 'array',
                        ),
//                        array(
//                            'name' => 'email_id',
//                            'optional' => FALSE,
//                            'source' => 'data',
//                            //'source' => array('data' => 'first_name'),
//                            'description' => 'email_id',
//                            'type' => 'string',
//                        ),
//                        array(
//                            'name' => 'phone_number',
//                            'optional' => FALSE,
//                            'source' => 'data',
//                            //'source' => array('data' => 'first_name'),
//                            'description' => 'phone_number',
//                            'type' => 'string',
//                        ),
                        /* array(
                          'name' => 'country',
                          'optional' => TRUE,
                          //'source' => 'data',
                          //'source' => array('data' => 'first_name'),
                          'source' => array('data'),
                          'description' => 'country',
                          'type' => 'array',
                          ),
                          array(
                          'name' => 'state',
                          'optional' => TRUE,
                          //'source' => 'data',
                          //'source' => array('data' => 'first_name'),
                          'source' => array('data'),
                          'description' => 'state',
                          'type' => 'array',
                          ),
                          array(
                          'name' => 'city',
                          'optional' => TRUE,
                          //'source' => 'data',
                          //'source' => array('data' => 'first_name'),
                          'source' => array('data'),
                          'description' => 'city',
                          'type' => 'array',
                          ), */
                        array(
                            'name' => 'zipcode',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'first_name'),
                            'source' => array('data'),
                            'description' => 'zipcode',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'address',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'first_name'),
                            'source' => array('data'),
                            'description' => 'address',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'profile_image',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'first_name'),
                            'source' => array('data'),
                            'description' => 'profile_image',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'gender',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'first_name'),
                            'source' => array('data'),
                            'description' => 'gender',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'date_of_birth',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'first_name'),
                            'source' => array('data'),
                            'description' => 'date_of_birth',
                            'type' => 'array',
                        ),
                    ),
                ),
            ),
        ),
        // edit_user_image custom resource declaration.....
        'edit_user_image' => array(
            'operations' => array(
                'create' => array(
                    'help' => 'Retrieves edit_user_image schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_edit_user_image',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
//                        array(
//                            'name' => 'token',
//                            'type' => 'string',
//                            'description' => 'Function to perform',
//                            'source' => array('path' => 0),
//                            'optional' => TRUE,
//                            'default' => '*',
//                        ),
                        array(
                            'name' => 'authtoken_id',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'first_name'),
                            'source' => array('data'),
                            'description' => 'authtoken_id',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'user_id',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'first_name'),
                            'source' => array('data'),
                            'description' => 'user_id',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'profile_image',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'first_name'),
                            'source' => array('data'),
                            'description' => 'profile_image',
                            'type' => 'array',
                        ),
                    ),
                ),
            ),
        ),
        // get_login_user_detail custom resource declaration.....
        'get_login_user_detail' => array(
            'operations' => array(
                'create' => array(
                    'help' => 'Retrieves get_login_user_detail schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_get_login_user_detail',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
//                        array(
//                            'name' => 'token',
//                            'type' => 'array',
//                            'description' => 'Function to perform',
//                            'source' => array('path' => 0),
//                            'optional' => TRUE,
//                            'default' => '*',
//                        ),
                        array(
                            'name' => 'authtoken_id',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'first_name'),
                            'source' => array('data'),
                            'description' => 'authtoken_id',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'user_id',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'first_name'),
                            'source' => array('data'),
                            'description' => 'user_id',
                            'type' => 'array',
                        ),
                    ),
                ),
            ),
        ),
        // log_out custom resource declaration.....
        'log_out' => array(
            'operations' => array(
                'create' => array(
                    'help' => 'Retrieves log_out schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_log_out',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
//                        array(
//                            'name' => 'token',
//                            'type' => 'array',
//                            'description' => 'Function to perform',
//                            'source' => array('path' => 0),
//                            'optional' => TRUE,
//                            'default' => '*',
//                        ),
                        array(
                            'name' => 'user_id',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'first_name'),
                            'source' => array('data'),
                            'description' => 'user_id',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'auth_token',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'first_name'),
                            'source' => array('data'),
                            'description' => 'auth_token',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'device_id',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'first_name'),
                            'source' => array('data'),
                            'description' => 'device_id',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'device_type',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'first_name'),
                            'source' => array('data'),
                            'description' => 'device_type',
                            'type' => 'array',
                        ),
                    ),
                ),
            ),
        ),
        // get_preference custom resource declaration.....
        'get_preference' => array(
            'operations' => array(
                'create' => array(
                    'help' => 'Retrieves get_preference schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_get_preference',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
//                        array(
//                            'name' => 'token',
//                            'type' => 'string',
//                            'description' => 'Function to perform',
//                            'source' => array('path' => 0),
//                            'optional' => TRUE,
//                            'default' => '*',
//                        ),
                        array(
                            'name' => 'authtoken_id',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'first_name'),
                            'source' => array('data'),
                            'description' => 'authtoken_id',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'user_id',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'first_name'),
                            'source' => array('data'),
                            'description' => 'user_id',
                            'type' => 'array',
                        ),
                    ),
                ),
            ),
        ),
        // update_preference custom resource declaration.....
        'update_preference' => array(
            'operations' => array(
                'create' => array(
                    'help' => 'Retrieves update_preference schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_update_preference',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
//                        array(
//                            'name' => 'token',
//                            'type' => 'string',
//                            'description' => 'Function to perform',
//                            'source' => array('path' => 0),
//                            'optional' => TRUE,
//                            'default' => '*',
//                        ),
                        array(
                            'name' => 'authtoken_id',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'first_name'),
                            'source' => array('data'),
                            'description' => 'authtoken_id',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'user_id',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'first_name'),
                            'source' => array('data'),
                            'description' => 'user_id',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'preference',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'first_name'),
                            'source' => array('data'),
                            'description' => 'node_id',
                            'type' => 'array',
                        ),
                    ),
                ),
            ),
        ),
        // Sprint 4 Read Later
        'bookmark_get' => array(
            'operations' => array(
                'create' => array(
                    'help' => 'Bookmark Get Responce based on userid.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'bookmark_get_responce',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
//                        array(
//                            'name' => 'token',
//                            'type' => 'string',
//                            'description' => 'Function to perform',
//                            'source' => array('path' => 0),
//                            'optional' => TRUE,
//                            'default' => '*',
//                        ),
                        array(
                            'name' => 'user_id',
                            'optional' => TRUE,
                            'source' => 'data',
                            //'source' => array('data' => 'first_name'),
                            'description' => 'Loged in user id',
                            'type' => 'string',
                        ),
                        array(
                            'name' => 'authtoken_id',
                            'optional' => TRUE,
                            'source' => 'data',
                            'description' => 'Loged user token id',
                            'type' => 'string',
                        ),
                    ),
                ),
            ),
        ),
        // Sprint 4 Read Later
        'bookmark_set' => array(
            'operations' => array(
                'create' => array(
                    'help' => 'Bookmark Set and return Responce based on userid.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'bookmark_set_responce',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
//                        array(
//                            'name' => 'token',
//                            'type' => 'array',
//                            'description' => 'Function to perform',
//                            'source' => array('path' => 0),
//                            'optional' => TRUE,
//                            'default' => '*',
//                        ),
                        array(
                            'name' => 'user_id',
                            'optional' => TRUE,
                            'source' => array('data'),
                            'description' => 'User id',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'node_id',
                            'optional' => TRUE,
                            'source' => array('data'),
                            'description' => 'Node Id',
                            'type' => 'array',
                        ),
                    ),
                ),
            ),
        ),
        // Sprint 4 Read Later
        'bookmark_delete' => array(
            'operations' => array(
                'create' => array(
                    'help' => 'Bookmark delete and return Responce based on userid.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'bookmark_delete_responce',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
//                        array(
//                            'name' => 'token',
//                            'type' => 'array',
//                            'description' => 'Function to perform',
//                            'source' => array('path' => 0),
//                            'optional' => TRUE,
//                            'default' => '*',
//                        ),
                        array(
                            'name' => 'user_id',
                            'optional' => TRUE,
                            'source' => array('data'),
                            'description' => 'User id',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'node_id',
                            'optional' => TRUE,
                            'source' => array('data'),
                            'description' => 'Node Id',
                            'type' => 'array',
                        ),
                    ),
                ),
            ),
        ),
        //sprint 4 Author detail
        'author_detail' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves Author detail data based on Author id.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'author_detail',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                        array(
                            'name' => 'author_id',
                            'optional' => FALSE,
                            'source' => 'data',
                            //'source' => array('data' => 'first_name'),
                            'description' => 'Author id',
                            'type' => 'string',
                        ),
                    ),
                ),
            ),
        ),
        //sprint 4 anchor detail
        'anchor_detail' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves Anchor detail data based on Anchor id in the system.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'anchor_detail',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                        array(
                            'name' => 'anchor_id',
                            'optional' => FALSE,
                            'source' => 'data',
                            //'source' => array('data' => 'first_name'),
                            'description' => 'Anchor User id',
                            'type' => 'string',
                        ),
                    ),
                ),
            ),
        ),
        //sprint 4 Newswrap (Briefly.json)
        'newswrap' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves last stories which have heightights',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'news_wrap',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                    ),
                ),
            ),
        ),
        // sprint 3 : Anchor Programm list
        'anchor_programm_list' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves programm list of a particular anchor.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'anchor_programm_list',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                        array(
                            'name' => 'anchor_id',
                            'optional' => FALSE,
                            'source' => 'data',
                            'description' => 'Anchor id',
                            'type' => 'string',
                        ),
                        array(
                            'name' => 'type',
                            'optional' => FALSE,
                            'source' => 'data',
                            'description' => 'Type 0 or 1 , 0 for latest and 1 for popular',
                            'type' => 'string',
                        ),
                    ),
                ),
            ),
        ),
        // for static other device start
        // adconfig_android custom resource declaration.....
        'adconfig_android' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves adconfig_android schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_adconfig_android',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                    ),
                ),
            ),
        ),
        // adconfig_ipad custom resource declaration.....
        'adconfig_ipad' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves adconfig_ipad schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_adconfig_ipad',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                    ),
                ),
            ),
        ),
        // adconfig_iphone custom resource declaration.....
        'adconfig_iphone' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves adconfig_iphone schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_adconfig_iphone',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                    ),
                ),
            ),
        ),
        // adconfig_tab custom resource declaration.....
        'adconfig_tab' => array(
            'operations' => array(
                'retrieve' => array(
                    'help' => 'Retrieves adconfig_tab schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_adconfig_tab',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'token',
                            'type' => 'string',
                            'description' => 'Function to perform',
                            'source' => array('path' => 0),
                            'optional' => TRUE,
                            'default' => '*',
                        ),
                    ),
                ),
            ),
        ),
        // for static other device end
        // reset_password custom resource declaration.....
        'reset_password' => array(
            'operations' => array(
                'create' => array(
                    'help' => 'Retrieves change_password schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_reset_password',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
//                        array(
//                            'name' => 'token',
//                            'type' => 'string',
//                            'description' => 'Function to perform',
//                            'source' => array('path' => 0),
//                            'optional' => TRUE,
//                            'default' => '*',
//                        ),
                        array(
                            'name' => 'user_id',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'user_id'),
                            'source' => array('data'),
                            'description' => 'user mobile or email',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'new_password',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'user_id'),
                            'source' => array('data'),
                            'description' => 'new password',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'confirm_password',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'user_id'),
                            'source' => array('data'),
                            'description' => 'confirm password',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'device_id',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'user_id'),
                            'source' => array('data'),
                            'description' => 'device id',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'device_type',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'user_id'),
                            'source' => array('data'),
                            'description' => 'device type',
                            'type' => 'array',
                        ),
                    ),
                ),
            ),
        ),
        // authtoken_verification custom resource declaration.....
        'authtoken_verification' => array(
            'operations' => array(
                'create' => array(
                    'help' => 'Retrieves authtoken_verification schemes info.',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'itg_rapid_api',
                        'name' => 'itg_rapid_api.services',
                    ),
                    'callback' => 'itg_rapid_api_authtoken_verification',
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => FALSE,
                    'args' => array(
                        array(
                            'name' => 'user_id',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'user_id'),
                            'source' => array('data'),
                            'description' => 'user mobile or email',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'auth_token',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'user_id'),
                            'source' => array('data'),
                            'description' => 'auth token',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'device_id',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'user_id'),
                            'source' => array('data'),
                            'description' => 'device id',
                            'type' => 'array',
                        ),
                        array(
                            'name' => 'device_type',
                            'optional' => TRUE,
                            //'source' => 'data',
                            //'source' => array('data' => 'user_id'),
                            'source' => array('data'),
                            'description' => 'device type',
                            'type' => 'array',
                        ),
                    ),
                ),
            ),
        ),
    );

    return $api;
}

/**
 * resource callback function for sprit1
 */

/**
 * [itg_rapid_api_datanotexist_api] definition.
 * Returns the information about a itg_rapid_api_datanotexist_api.
 * @param $nid
 *   The nid of the housing_scheme node.
 * @return array
 * 	The node processed information array.
 */
//return services_error(t('Node type cannot be changed'), 406);
function itg_rapid_api_datanotexist_api($token) {
    $get_token = variable_get('mobile_service_token');
    if ($get_token != $token) {
        return services_error(t('Please enter valid token'), 406);
    } else {

        $redis_key = "itgd_rapid_datanotexist_api_json";
        $result_get = getRedis($redis_key);

        if ($result_get['key_value'] != "") {
            $jsondata = $result_get['key_value'];
        } else {
            $jsondata = variable_get('datanotexist_api_json');
            $ttl = DEFAULT_REDIS_EXPIRE_TIME;
            $result_set = setRedis($redis_key, $jsondata, $ttl);
        }


        $obj = json_decode($jsondata, true);
        $return_obj = $obj;

        return $return_obj;
    }
}

/**
 * [itg_rapid_api_newslist] definition.
 * Returns the information about a itg_rapid_api_newslist.
 * @param $nid
 *   The nid of the housing_scheme node.
 * @return array
 * 	The node processed information array.
 */
function itg_rapid_api_newslist($token) {
    //valid tid & pageno
    $realtime = 0;
    $id = $_GET['id'];
    $cpageno = $_GET['cpageno'];
    $suffix = $id . "_" . $cpageno;
    if (!is_numeric($id)) {
        $id = 0;
    }
    if (!is_numeric($cpageno)) {
        $cpageno = 0;
    }

    $redis_key = "itgd_rapid_api_newslist_" . $suffix;
    $result_get = getRedis($redis_key);

    if ($result_get['key_value'] != "") {
        $jsondata = $result_get['key_value'];
    } else {
        // call function from return data..
        $realtime = 1;
        $jsondata_realtime = $jsondata = newscategoryPageRerourceValue($id, $cpageno);
        $jsondata = json_encode($jsondata);
        $ttl = RAPID_API_NEWSLIST_REDIS_EXPIRE_TIME;
        $result_set = setRedis($redis_key, $jsondata, $ttl);
    }
    if ($realtime) {
        return $jsondata_realtime;
    } else {
        $jsondata = json_decode($jsondata);
        return $jsondata;
    }
}

/**
 * [itg_rapid_api_programlist] definition.
 * Returns the information about a itg_rapid_api_programlist.
 * @param $nid
 *   The nid of the housing_scheme node.
 * @return array
 * 	The node processed information array.
 */
function itg_rapid_api_programlist($token) {
    //valid tid & pageno
    $id = $_GET['id'];
    $cpageno = $_GET['cpageno'];
    $suffix = $id . "_" . $cpageno;
    if (!is_numeric($id)) {
        $id = 0;
    }
    if (!is_numeric($cpageno)) {
        $cpageno = 0;
    }

    $redis_key = "itgd_rapid_api_programlist_" . $suffix;
    $result_get = getRedis($redis_key);

    if ($result_get['key_value'] != "") {
        $jsondata = $result_get['key_value'];
    } else {
        // call function from return data..
        $jsondata = programcategoryPageRerourceValue($id, $cpageno);
        $jsondata = json_encode($jsondata);
        $ttl = DEFAULT_REDIS_EXPIRE_TIME;
        $result_set = setRedis($redis_key, $jsondata, $ttl);
    }

    $jsondata = json_decode($jsondata, true);
    return $jsondata;
}

/**
 * [itg_rapid_api_videolist] definition.
 * Returns the information about a itg_rapid_api_videolist.
 * @param $nid
 *   The nid of the housing_scheme node.
 * @return array
 * 	The node processed information array.
 */
function itg_rapid_api_videolist($token) {
    //valid tid & pageno
    $id = $_GET['id'];
    $cpageno = $_GET['cpageno'];
    $suffix = $id . "_" . $cpageno;
    if (!is_numeric($id)) {
        $id = 0;
    }
    if (!is_numeric($cpageno)) {
        $cpageno = 0;
    }

    $redis_key = "itgd_rapid_api_videolist_" . $suffix;
    $result_get = getRedis($redis_key);

    if ($result_get['key_value'] != "") {
        $jsondata = $result_get['key_value'];
    } else {
        // call function from return data..
        $jsondata = videocategoryPageRerourceValue($id, $cpageno);
        $jsondata = json_encode($jsondata);
        $ttl = DEFAULT_REDIS_EXPIRE_TIME;
        $result_set = setRedis($redis_key, $jsondata, $ttl);
    }

    $jsondata = json_decode($jsondata, true);
    return $jsondata;
}

/**
 * [itg_rapid_api_photodetail] definition.
 * Returns the information about a itg_rapid_api_photodetail.
 * @param $nid
 *   The nid of the housing_scheme node.
 * @return array
 * 	The node processed information array.
 */
function itg_rapid_api_photodetail($token) {
    //valid id
    $id = $_GET['id'];
    //$cpageno = $_GET['cpageno'];
    $suffix = $id;
    if (!is_numeric($id)) {
        $id = 0;
    }

    $redis_key = "itgd_rapid_api_photodetail_" . $suffix;
    $result_get = getRedis($redis_key);

    if ($result_get['key_value'] != "") {
        $jsondata = $result_get['key_value'];
    } else {
        // call function from return data..
        $jsondata = photoDetailPageRerourceValue($id);
        $jsondata = json_encode($jsondata);
        $ttl = DEFAULT_REDIS_EXPIRE_TIME;
        $result_set = setRedis($redis_key, $jsondata, $ttl);
    }
    $jsondata = json_decode($jsondata, true);
    return $jsondata;
}

/**
 * [itg_rapid_api_photolist] definition.
 * Returns the information about a itg_rapid_api_photolist.
 * @param $nid
 *   The nid of the housing_scheme node.
 * @return array
 * 	The node processed information array.
 */
function itg_rapid_api_photolist($token) {
    $id = $_GET['id'];
    $cpageno = $_GET['cpageno'];
    //valid tid & pageno
    $suffix = $id . "_" . $cpageno;
    if (!is_numeric($id)) {
        $id = 0;
    }
    if (!is_numeric($cpageno)) {
        $cpageno = 0;
    }

    $redis_key = "itgd_rapid_api_photolist_" . $suffix;
    $result_get = getRedis($redis_key);

    if ($result_get['key_value'] != "") {
        $jsondata = $result_get['key_value'];
    } else {
        // call function from return data..
        $jsondata = photocategoryPageRerourceValue($id, $cpageno);
        $jsondata = json_encode($jsondata);
        $ttl = DEFAULT_REDIS_EXPIRE_TIME;
        $result_set = setRedis($redis_key, $jsondata, $ttl);
    }

    $jsondata = json_decode($jsondata, true);
    return $jsondata;
}

/**
 * [itg_rapid_api_server_error_master] definition.
 * Returns the information about a itg_rapid_api_server_error_master.
 * @param $nid
 *   The nid of the housing_scheme node.
 * @return array
 * 	The node processed information array.
 */
function itg_rapid_api_server_error_master($token) {
    $redis_key = "itgd_rapid_server_error_master_json";
    $result_get = getRedis($redis_key);

    if ($result_get['key_value'] != "") {
        $jsondata = $result_get['key_value'];
    } else {
        $jsondata = variable_get('server_error_master_json');
        $ttl = DEFAULT_REDIS_EXPIRE_TIME;
        $result_set = setRedis($redis_key, $jsondata, $ttl);
    }

    $obj = json_decode($jsondata, true);
    $return_obj = $obj;
    return $return_obj;
}

/**
 * [itg_rapid_api_master_config] definition.
 * Returns the information about a config_update_status.
 * @param $nid
 *   The nid of the housing_scheme node.
 * @return array
 * 	The node processed information array.
 */
function itg_rapid_api_master_config($token) {
    $redis_key = "itgd_rapid_master_config_json";
    $result_get = getRedis($redis_key);

    if ($result_get['key_value'] != "") {
        $jsondata = $result_get['key_value'];
    } else {
        $jsondata = variable_get('master_config_json');
        $ttl = DEFAULT_REDIS_EXPIRE_TIME;
        $result_set = setRedis($redis_key, $jsondata, $ttl);
    }

    $obj = json_decode($jsondata, true);
    $return_obj = $obj;
    return $return_obj;
}

/**
 * [itg_rapid_api_config_update_status] definition.
 * Returns the information about a config_update_status.
 * @param $nid
 *   The nid of the housing_scheme node.
 * @return array
 * 	The node processed information array.
 */
function itg_rapid_api_config_update_status($token) {
    $redis_key = "itgd_rapid_config_update_status_json";
    $result_get = getRedis($redis_key);

    if ($result_get['key_value'] != "") {
        $jsondata = $result_get['key_value'];
    } else {
        $jsondata = variable_get('config_update_status_json');
        $ttl = DEFAULT_REDIS_EXPIRE_TIME;
        $result_set = setRedis($redis_key, $jsondata, $ttl);
    }

    $obj = json_decode($jsondata, true);
    $return_obj = $obj;

    return $return_obj;
}

/**
 * [itg_rapid_api_hamburger_menu] definition.
 * Returns the information about a hamburger_menu.
 * @param $nid
 *   The nid of the housing_scheme node.
 * @return array
 * 	The node processed information array.
 */
function itg_rapid_api_hamburger_menu($token) {
    $redis_key = "itgd_rapid_hamburger_menu_json";
    $result_get = getRedis($redis_key);

    if ($result_get['key_value'] != "") {
        $jsondata = $result_get['key_value'];
    } else {
        $jsondata = variable_get('hamburger_menu_json');
        $ttl = DEFAULT_REDIS_EXPIRE_TIME;
        $result_set = setRedis($redis_key, $jsondata, $ttl);
    }

    $obj = json_decode($jsondata, true);
    $return_obj = $obj;

    return $return_obj;
}

/**
 * [itg_rapid_api_horizontal_menu] definition.
 * Returns the information about a horizontal_menu.
 * @param $nid
 *   The nid of the housing_scheme node.
 * @return array
 * 	The node processed information array.
 */
function itg_rapid_api_horizontal_menu($token) {
    $redis_key = "itgd_rapid_horizontal_menu_json";
    $result_get = getRedis($redis_key);

    if ($result_get['key_value'] != "") {
        $jsondata = $result_get['key_value'];
    } else {
        $jsondata = variable_get('horizontal_menu_json');
        $ttl = DEFAULT_REDIS_EXPIRE_TIME;
        $result_set = setRedis($redis_key, $jsondata, $ttl);
    }

    $obj = json_decode($jsondata, true);
    $return_obj = $obj;

    return $return_obj;
}

/**
 * function for check valid resource & return type
 * @return $type
 */
function checkValidResource() {

    $error_flag = "";
    $flag_code = 0;
    //declare valid resource
    $valid_resurce = array('hamburger_menu');
    // declare valid operation
    $valid_operation = array('retrieve');
    // declare valid return type
    $valid_return_type = array('json', 'xml');
    //check validity
    $resource = arg(1);
    $resurce_arg = explode('.', arg(2));
    $resurce_opt = $resurce_arg[0];
    $resurce_ext = $resurce_arg[1];
    //validate resource
    if (!in_array($resource, $valid_resurce)) {
        $error_flag .= "\nInvalid resource";
        $flag_code = 1;
    }
    //validate operation
    if (!in_array($resurce_opt, $valid_operation)) {
        $error_flag .= "\nInvalid operation";
        $flag_code = 1;
    }
    //validate return type
    if (!in_array($resurce_ext, $valid_return_type)) {
        $error_flag .= "\nInvalid return type";
        $flag_code = 1;
    }

    // die if $flag_code is 1
    if ($flag_code == 1) {
        print $error_flag;
        die();
    }
    return;
}

// sprint2 function start

/**
 * [itg_rapid_api_photostorydetail] definition.
 * Returns the information about a itg_rapid_api_photostorydetail.
 * @param $nid
 *   The nid of the housing_scheme node.
 * @return array
 * 	The node processed information array.
 */
function itg_rapid_api_photostorydetail($token) {
    //valid id
    $id = $_GET['id'];
    if (!is_numeric($id)) {
        $id = 0;
    }

    // call function for return data..

    $suffix = $id;
    $redis_key = "itg_rapid_api_photostorydetail_" . $suffix;
    $result_get = getRedis($redis_key);

    if ($result_get['key_value'] != "") {
        $jsondata = $result_get['key_value'];
    } else {
        // call function from return data..
        $jsondata = photoStoryDetailPageRerourceValue($id);
        $jsondata = json_encode($jsondata);
        $ttl = DEFAULT_REDIS_EXPIRE_TIME;
        $result_set = setRedis($redis_key, $jsondata, $ttl);
    }

    $jsondata = json_decode($jsondata, true);
    return $jsondata;
}

/**
 * [itg_rapid_api_program_category_list] definition.
 * Returns the information about a itg_rapid_api_program_category_list.
 * @param $nid
 *   The nid of the housing_scheme node.
 * @return array
 * 	The node processed information array.
 */
function itg_rapid_api_program_category_list($token) {


    $redis_key = "itg_rapid_api_program_category_list";
    $result_get = getRedis($redis_key);

    if ($result_get['key_value'] != "") {
        $jsondata = $result_get['key_value'];
    } else {
        $jsondata = programCategoryListlPageRerourceValue();
        $jsondata = json_encode($jsondata);
        $ttl = DEFAULT_REDIS_EXPIRE_TIME;
        $result_set = setRedis($redis_key, $jsondata, $ttl);
    }

    $obj = json_decode($jsondata, true);
    $return_obj = $obj;
    return $return_obj;
}

/**
 * [itg_rapid_api_ad_config_json] definition.
 * Returns the information about a horizontal_menu.
 * @param $nid
 *   The nid of the housing_scheme node.
 * @return array
 * 	The node processed information array.
 */
function itg_rapid_api_ad_config_json($token) {

    $redis_key = "itg_rapid_api_ad_config_json";
    $result_get = getRedis($redis_key);

    if ($result_get['key_value'] != "") {
        $jsondata = $result_get['key_value'];
    } else {
        $jsondata = variable_get('ad_config_json');
        $ttl = DEFAULT_REDIS_EXPIRE_TIME;
        $result_set = setRedis($redis_key, $jsondata, $ttl);
    }

    $obj = json_decode($jsondata, true);
    $return_obj = $obj;
    return $return_obj;
}

/**
 * [itg_rapid_api_livetv_channellist_json] definition.
 * Returns the information about a horizontal_menu.
 * @param $nid
 *   The nid of the housing_scheme node.
 * @return array
 * 	The node processed information array.
 */
function itg_rapid_api_livetv_channellist_json($token) {


    $redis_key = "itg_rapid_api_livetv_channellist_json";
    $result_get = getRedis($redis_key);

    if ($result_get['key_value'] != "") {
        $jsondata = $result_get['key_value'];
    } else {
        $jsondata = variable_get('livetv_channellist_json');
        $ttl = DEFAULT_REDIS_EXPIRE_TIME;
        $result_set = setRedis($redis_key, $jsondata, $ttl);
    }

    $obj = json_decode($jsondata, true);
    $return_obj = $obj;

    return $return_obj;
}

/**
 * [itg_rapid_api_livetv_aajtak] definition.
 * Returns the information about a itg_rapid_api_livetv_aajtak.
 * @param $nid
 *   The nid of the housing_scheme node.
 * @return array
 * 	The node processed information array.
 */
function itg_rapid_api_livetv_aajtak($token) {


    $redis_key = "itg_rapid_api_livetv_aajtak";
    $result_get = getRedis($redis_key);

    if ($result_get['key_value'] != "") {
        $jsondata = $result_get['key_value'];
    } else {
        $jsondata = variable_get('livetv_aajtak');
        $ttl = DEFAULT_REDIS_EXPIRE_TIME;
        $result_set = setRedis($redis_key, $jsondata, $ttl);
    }

    $obj = json_decode($jsondata, true);
    $return_obj = $obj;
    return $return_obj;
}

/**
 * [itg_rapid_api_livetv_indiatoday] definition.
 * Returns the information about a itg_rapid_api_livetv_indiatoday.
 * @param $nid
 *   The nid of the housing_scheme node.
 * @return array
 * 	The node processed information array.
 */
function itg_rapid_api_livetv_indiatoday($token) {


    $redis_key = "itg_rapid_api_livetv_indiatoday";
    $result_get = getRedis($redis_key);

    if ($result_get['key_value'] != "") {
        $jsondata = $result_get['key_value'];
    } else {
        $jsondata = variable_get('livetv_indiatoday');
        $ttl = DEFAULT_REDIS_EXPIRE_TIME;
        $result_set = setRedis($redis_key, $jsondata, $ttl);
    }

    $obj = json_decode($jsondata, true);
    $return_obj = $obj;
    return $return_obj;
}

/**
 * [itg_rapid_api_livetv_delhiaajtak] definition.
 * Returns the information about a itg_rapid_api_livetv_delhiaajtak.
 * @param $nid
 *   The nid of the housing_scheme node.
 * @return array
 * 	The node processed information array.
 */
function itg_rapid_api_livetv_delhiaajtak($token) {


    $redis_key = "itg_rapid_api_livetv_delhiaajtak";
    $result_get = getRedis($redis_key);

    if ($result_get['key_value'] != "") {
        $jsondata = $result_get['key_value'];
    } else {
        $jsondata = variable_get('livetv_delhiaajtak');
        $ttl = DEFAULT_REDIS_EXPIRE_TIME;
        $result_set = setRedis($redis_key, $jsondata, $ttl);
    }

    $obj = json_decode($jsondata, true);
    $return_obj = $obj;
    return $return_obj;
}

/**
 * [itg_rapid_api_livetv_tej] definition.
 * Returns the information about a itg_rapid_api_livetv_tej.
 * @param $nid
 *   The nid of the housing_scheme node.
 * @return array
 * 	The node processed information array.
 */
function itg_rapid_api_livetv_tej($token) {


    $redis_key = "itg_rapid_api_livetv_tej";
    $result_get = getRedis($redis_key);

    if ($result_get['key_value'] != "") {
        $jsondata = $result_get['key_value'];
    } else {
        $jsondata = variable_get('livetv_tej');
        $ttl = DEFAULT_REDIS_EXPIRE_TIME;
        $result_set = setRedis($redis_key, $jsondata, $ttl);
    }

    $obj = json_decode($jsondata, true);
    $return_obj = $obj;
    return $return_obj;
}

/**
 * [itg_rapid_api_otherapps_ios_json] definition.
 * Returns the information about a horizontal_menu.
 * @param $nid
 *   The nid of the housing_scheme node.
 * @return array
 * 	The node processed information array.
 */
function itg_rapid_api_otherapps_ios_json($token) {


    $redis_key = "itg_rapid_api_otherapps_ios_json";
    $result_get = getRedis($redis_key);

    if ($result_get['key_value'] != "") {
        $jsondata = $result_get['key_value'];
    } else {
        $jsondata = variable_get('otherapps_ios_json');
        $ttl = DEFAULT_REDIS_EXPIRE_TIME;
        $result_set = setRedis($redis_key, $jsondata, $ttl);
    }

    $obj = json_decode($jsondata, true);
    $return_obj = $obj;
    return $return_obj;
}

/**
 * [itg_rapid_api_otherapps_android_json] definition.
 * Returns the information about a horizontal_menu.
 * @param $nid
 *   The nid of the housing_scheme node.
 * @return array
 * 	The node processed information array.
 */
function itg_rapid_api_otherapps_android_json($token) {


    $redis_key = "itg_rapid_api_otherapps_android_json";
    $result_get = getRedis($redis_key);

    if ($result_get['key_value'] != "") {
        $jsondata = $result_get['key_value'];
    } else {
        $jsondata = variable_get('otherapps_android_json');
        $ttl = DEFAULT_REDIS_EXPIRE_TIME;
        $result_set = setRedis($redis_key, $jsondata, $ttl);
    }

    $obj = json_decode($jsondata, true);
    $return_obj = $obj;
    return $return_obj;
}

// magazine section start

/**
 * [itg_rapid_api_magazine_edition] definition.
 * Returns the information about a itg_rapid_api_magazine_edition.
 * @param $nid
 *   The nid of the housing_scheme node.
 * @return array
 * 	The node processed information array.
 */
function itg_rapid_api_magazine_edition($token) {
    $id = $_GET['issueid'];
    $cpageno = $_GET['cpageno'];
    //valid tid & pageno
    if (!is_numeric($id)) {
        $id = 0;
    }
    if (!is_numeric($cpageno)) {
        $cpageno = 0;
    }


    $suffix = $id . "_" . $cpageno;
    $redis_key = "itg_rapid_api_magazine_edition_" . $suffix;
    $result_get = getRedis($redis_key);

    if ($result_get['key_value'] != "") {
        $jsondata = $result_get['key_value'];
    } else {
        // call function from return data..
        $jsondata = magazineEditionPageRerourceValue($id, $cpageno);
        $jsondata = json_encode($jsondata);
        $ttl = DEFAULT_REDIS_EXPIRE_TIME;
        $result_set = setRedis($redis_key, $jsondata, $ttl);
    }

    $jsondata = json_decode($jsondata, true);
    return $jsondata;
}

/**
 * [itg_rapid_api_magazine_coverstories] definition.
 * Returns the information about a itg_rapid_api_magazine_coverstories.
 * @param $nid
 *   The nid of the housing_scheme node.
 * @return array
 * 	The node processed information array.
 */
function itg_rapid_api_magazine_coverstories($token) {

    // call function from return data..

    $redis_key = "itg_rapid_api_magazine_coverstories";
    $result_get = getRedis($redis_key);

    if ($result_get['key_value'] != "") {
        $jsondata = $result_get['key_value'];
    } else {
        $jsondata = magazineCoverstoriesPageRerourceValue();
        $jsondata = json_encode($jsondata);
        $ttl = DEFAULT_REDIS_EXPIRE_TIME;
        $result_set = setRedis($redis_key, $jsondata, $ttl);
    }

    $obj = json_decode($jsondata, true);
    $return_obj = $obj;
    return $return_obj;
}

/**
 * [itg_rapid_api_magazine_editionlist] definition.
 * Returns the information about a itg_rapid_api_magazine_editionlist.
 * @param $nid
 *   The nid of the housing_scheme node.
 * @return array
 * 	The node processed information array.
 */
function itg_rapid_api_magazine_editionlist($token) {
    $sdate = $_GET['sdate'];
    $tdate = $_GET['tdate'];
    $cpageno = $_GET['cpageno'];
    //echo $sdate; echo "<br>"; echo $tdate; exit();
    //valid tid & pageno
//    if (!is_numeric($sdate)) {
//        $sdate = 0;
//    }
//    if (!is_numeric($tdate)) {
//        $tdate = 0;
//    }
    if (!is_numeric($cpageno)) {
        $cpageno = 0;
    }
    // call function from return data..


    $suffix = $sdate . "_" . $tdate . "_" . $cpageno;
    $redis_key = "itg_rapid_api_magazine_editionlist_" . $suffix;
    $result_get = getRedis($redis_key);

    if ($result_get['key_value'] != "") {
        $jsondata = $result_get['key_value'];
    } else {
        // call function from return data..
        $jsondata = magazineEditionListPageRerourceValue($sdate, $tdate, $cpageno);
        $jsondata = json_encode($jsondata);
        $ttl = DEFAULT_REDIS_EXPIRE_TIME;
        $result_set = setRedis($redis_key, $jsondata, $ttl);
    }

    $jsondata = json_decode($jsondata, true);

    return $jsondata;
}

// magazine section end

/**
 * [itg_rapid_api_storydetail] definition.
 * Returns the information about a horizontal_menu.
 * @param $nid
 *   The nid of the housing_scheme node.
 * @return array
 * 	The node processed information array.
 */
function itg_rapid_api_storydetail($token) {
    //valid id
    $id = $_GET['id'];
    if (!is_numeric($id)) {
        $id = 0;
    }

    // call function for return data..


    $suffix = $id;
    $redis_key = "itg_rapid_api_storydetail" . $suffix;
    $result_get = getRedis($redis_key);

    if ($result_get['key_value'] != "") {
        $jsondata = $result_get['key_value'];
    } else {
        // call function from return data..
        $jsondata = StoryDetailPageRerourceValue($id);
        $jsondata = json_encode($jsondata);
        $ttl = DEFAULT_REDIS_EXPIRE_TIME;
        $result_set = setRedis($redis_key, $jsondata, $ttl);
    }

    $jsondata = json_decode($jsondata, true);
    return $jsondata;
}

/**
 * [itg_rapid_api_homePage] definition.
 * Returns the information about a itg_rapid_api_homePage.
 * @param $nid
 *   The nid of the housing_scheme node.
 * @return array
 * 	The node processed information array.
 */
//return services_error(t('Node type cannot be changed'), 406);
function itg_rapid_api_homePage($token) {

    $redis_key = "itg_rapid_api_homePage";
    $result_get = getRedis($redis_key);

    if ($result_get['key_value'] != "") {
        $jsondata = $result_get['key_value'];
    } else {
        // call function from return data..
        $jsondata = homePageJson();
        $jsondata = json_encode($jsondata);
        $ttl = RAPID_API_HOMEPAGE_REDIS_EXPIRE_TIME;
        $result_set = setRedis($redis_key, $jsondata, $ttl);
    }

    $jsondata = json_decode($jsondata, true);
    return $jsondata;
}

function itg_rapid_api_testing($token) {

// code for check POST method only start   
    $user = user_load(1989);
    echo "<pre>";
    print_r($user);
    echo "<pre>";
    exit();
    $req_mth_flag = checkReqMethod();
    if ($req_mth_flag == 0 || $req_mth_flag == "0") {
        $data['status_code'] = "0";
        $data['status_message'] = "Only Post Method Allowed for this API";
        return $data;
    }
    // code for check POST method only end 

    $get_token = variable_get('mobile_service_token');

    $str = '{
	"status_code": "0",
	"status_message": "Customised Message",
	"data": {}
}';


    $jsondata = $str;
    $obj = json_decode($jsondata, true);
    $return_obj = $obj;
    return $return_obj;
}

// login serveice function start from here

/**
 * [itg_rapid_api_login_request] definition.
 * Returns the information about a itg_rapid_api_login_request.
 * @param $nid
 *   The nid of the housing_scheme node.
 * @return array
 * 	The node processed information array.
 */
function itg_rapid_api_login_request($token) {

    $HTTP_RAW_POST_DATA;
    //$params = $_POST;
    $params = (array) json_decode(file_get_contents('php://input'), TRUE);
    //p($params);die();


    $method = "POST";
    $data = $params;
    // login raw input validation
    $validation_error = array();
    $validation_error_str = "";
    $validation_error = loginValidation_rapid($params);
    $validation_error_str = implode(", ", $validation_error['custom_error']);
    if ($validation_error_str) {
        $account_err['status_code'] = "0";
        $account_err['status_message'] = "$validation_error_str";
        return $account_err;
    }
    //check user is block
    $user_data = user_load_by_name($data['user_id']);
    if ($user_data->status == 0) {
        $account_err['status_code'] = "3";
        $account_err['status_message'] = "Accont Locked";
        return $account_err;
    }
    $account = array();
    $url = SSO_SERVER_URL . "/appapi/login_request";
    $result = callAPI($method, $url, $params);
    $result_obj = json_decode($result);
    $uid = 0;
    $uid = $result_obj->uid;
    $auth_token = $result_obj->token;
    $field_logged_in_count = $result_obj->user->field_logged_in_count->und[0]->value;

    if ($uid) {
        //$local_account = localSignup($params);
        $local_account = localLogin($params);
        //p($local_account);echo "andy";die();
        $uid = $local_account->user->uid;
        $name = $local_account->user->name;
        $field_logged_in_count = $local_account->user->field_logged_in_count['und'][0]['value'];
        $auth_token = $local_account->token;
        $is_first_login = 1;
        if ($field_logged_in_count > 0) {
            $is_first_login = 0;
        }
        if ($auth_token) {
            //p($result_obj);die();
            $field_first_name = $local_account->user->field_first_name['und'][0]['value'];
            $field_last_name = $local_account->user->field_last_name['und'][0]['value'];
            $field_short_description = $local_account->user->field_short_description['und'][0]['value'];
            $profile_image = completeFilePath($local_account->user->field_user_picture['und'][0]['fid']);
            $gender = $local_account->user->field_user_gender['und'][0]['value'];
            $date_of_birth = $local_account->user->field_story_issue_date['und'][0]['value'];
            //$mail = $result_obj->mail;
            $phone_number = "";
            $mail = "";
            if (is_numeric($name)) {
                $phone_number = $name;
            } else {
                $mail = $name;
            }
            $account['status_code'] = "1";
            $account['status_message'] = "";
            $account['data']['user_id'] = "$name";
            $account['data']['auth_token'] = "$auth_token";
            $account['data']['is_authenticated'] = "0";

            $account['data']['first_name'] = "$field_first_name";
            $account['data']['last_name'] = "$field_last_name";
            $account['data']['email_id'] = "$mail";
            $account['data']['phone_number'] = "$phone_number";
            $account['data']['location'] = "$field_short_description";
            $account['data']['profile_image'] = "$profile_image";
            $account['data']['gender'] = "$gender";
            $account['data']['date_of_birth'] = "$date_of_birth";

            // query for insert data into itg_app_device - $action $token
            $action = 2;
            $device_id = $params['device_id'];
            $device_type = $params['device_type'];
            db_insert('itg_app_device')
                    ->fields(array(
                        'uid' => $uid,
                        'device_id' => check_plain($device_id),
                        'device_type' => check_plain($device_type),
                        'action' => check_plain($action),
                        'token' => check_plain($auth_token),
                    ))
                    ->execute();
        } else {
            watchdog('user', 'Invalid login attempt for %username.', array('%username' => $username));
            //return services_error(t('Wrong username or password.'), 401);
            $account = array();
            $account['status_code'] = "2";
            $account['status_message'] = "Wrong username or password.";
            return $account;
        }
    } else {
        watchdog('user', 'Invalid login attempt for %username.', array('%username' => $username));
        //return services_error(t('Wrong username or password.'), 401);
        $account = array();
        $account['status_code'] = "2";
        $account['status_message'] = "Wrong username or password.";
        return $account;
    }

    return $account;
}

//itg_rapid_api_signup
/**
 * [itg_rapid_api_signup] definition.
 * Returns the information about a itg_rapid_api_signup.
 * @param $nid
 *   The nid of the housing_scheme node.
 * @return array
 * 	The node processed information array.
 */
function itg_rapid_api_signup($token) {
    $HTTP_RAW_POST_DATA;
    // check duplicate user
    $params = (array) json_decode(file_get_contents('php://input'), TRUE);
    
    $login_type = 0;
    $login_type = $params['login_type'];
    if ($login_type < 0 || $login_type > 2) {
        watchdog('user', 'Invalid login attempt for %username.', array('%username' => $username));
        $account = array();
        $account['status_code'] = "0";
        $account['status_message'] = "Invalid Login Type.";
        return $account;
    }
    
    // signup validation function calling
    $validation_error = array();
    $validation_error_str = "";
    $validation_error = signupValidation_rapid($params);
    $validation_error_str = implode(", ", $validation_error['custom_error']);
    //echo $validation_error_str; die();
    $method = "POST";
    $data = array();
    $account_err = array();
    $data['user_id'] = $params['user_id'];
    $account = array();
   
    if ($login_type == 0){
    //p($data);die();
    $rand = rand();
    $url = SSO_SERVER_URL . "/appapi/check_user/" . $rand;
    $result = callAPI("GET", $url, $data);
    $result_obj = json_decode($result);
    //echo "hi";p($result_obj->uid);die();
    $error_code_flag = 0;
        //if ($validation_error_str = "User already exists") {
         if (strpos($validation_error_str,'User already exists') !== false) {
            $error_code_flag = 2;
        }
    if ($validation_error_str) {
        $account_err['status_code'] = "$error_code_flag";
        $account_err['status_message'] = "$validation_error_str";
        return $account_err;
    } elseif ($result_obj->uid) {
        $account_err['status_code'] = "2";
        $account_err['status_message'] = "User already exists with " . $params['user_id'] . "";
        return $account_err;
    } else {

        $method = "POST";
        $data = $params;
        $account = array();
        $url = SSO_SERVER_URL . "/appapi/signup";
        $result = callAPI($method, $url, $data);
        $result_obj = json_decode($result);
        $uid = $result_obj->uid;
        $uname = $params['user_id'];

        if ($uid) {
            $result = localSignup($params);
            //p($result);die();
            //$url = SSO_SERVER_URL . "/appapi/resend_otp";
            //$result = callAPI($method, $url, $params);
            $result_obj = json_decode($result);
            $account['status_code'] = "1";
            $account['status_message'] = "";
            $account['data']['user_id'] = "$uname";
            $account['data']['auth_token'] = "$result->token";
            //$account['data']['otp_status'] = "1";
        } else {
            watchdog('user', 'Duplicate signup attempt for %username.', array('%username' => $params['user_id']));
            $account['status_code'] = "2";
            $account['status_message'] = "User already exists with  " . $uname . "";
        }

        return $account;
    }
}
elseif ($login_type == 1){
    
        $method = "POST";
        
        //p($params);die();

        $data = array();
        $password = rand(0, 9999);
        //$_GET['password'] = $password;
        $data = $params;
        $uname_fi = $params['user_id'];
        $data['password'] = $password;
        $data['uname'] = $uname_fi;
        $data['uid'] = $uname_fi;
        $data['token'] = $uname_fi;
        $data['app_id'] = $uname_fi;
        $data['issued_at'] = $uname_fi;
        $data['expires_at'] = $uname_fi;
        
    // signup validation function calling
    $validation_error = array();
    $validation_error_str = "";
    $validation_error = fblogin_rapid($params);
    $validation_error_str = implode(", ", $validation_error['custom_error']);
if ($validation_error_str) {
        $account_err['status_code'] = "0";
        $account_err['status_message'] = "$validation_error_str";
        return $account_err;
    }
        
        $rand = rand();
        $account = array();
        $url = SSO_SERVER_URL."/appapi/fblogin/".$rand;
        //echo $url; die();
        $result = callAPI("GET", $url, $data);
        //echo "andy1";p($result);die();
        $result_obj = json_decode($result);
        $uid = 0;
        $uid = $result_obj->user->uid;
        $auth_token = $result_obj->token;
        $field_logged_in_count = $result_obj->user->field_logged_in_count->und[0]->value;


        if ($uid) {
            $local_account = fblogin($data);
            //p($local_account);echo "andy";die();
            $uid = $local_account->user->uid;
            $name = $local_account->user->name;
            $field_logged_in_count = $local_account->user->field_logged_in_count['und'][0]['value'];
            $auth_token = $local_account->token;
            $is_first_login = 1;
            if ($field_logged_in_count > 0) {
                $is_first_login = 0;
            }
            if ($auth_token) {      
                
                $user = updateUsedrProfileAtSignup_rapid($data, 1); 
                $account['status_code'] = "1";
                $account['status_message'] = "";
                $account['data']['user_id'] = "$name";
                $account['data']['auth_token'] = "$auth_token";
                
            } else {
                watchdog('user', 'Invalid login attempt for %username.', array('%username' => $username));
                //return services_error(t('Wrong username or password.'), 401);
                $account = array();
                $account['status_code'] = "0";
                $account['status_message'] = "Wrong username or password.";
                return $account;
            }
        } else {
            watchdog('user', 'Invalid login attempt for %username.', array('%username' => $username));
            //return services_error(t('Wrong username or passwordfb.'), 401);
            $account = array();
            $account['status_code'] = "0";
            $account['status_message'] = "Wrong username or password1.";
            return $account;
        }

        return $account;
}
elseif ($login_type == 2){
    
    
        $method = "POST";
        
        //p($params);die();

        
        
        
        
        $data = array();
        $password = rand(0, 9999);
        //$_GET['password'] = $password;
        $data = $params;
        $uname_fi = $params['user_id'];
        $data['password'] = $password;
        $data['uname'] = $uname_fi;
        $data['uid'] = $uname_fi;
        $data['token'] = $uname_fi;
        $data['app_id'] = $uname_fi;
        $data['issued_at'] = $uname_fi;
        $data['expires_at'] = $uname_fi;
        
    // signup validation function calling
    $validation_error = array();
    $validation_error_str = "";
    $validation_error = twtogin_rapid($params);
    $validation_error_str = implode(", ", $validation_error['custom_error']);
if ($validation_error_str) {
        $account_err['status_code'] = "0";
        $account_err['status_message'] = "$validation_error_str";
        return $account_err;
    }
        
        $rand = rand();
        $account = array();
        $url = SSO_SERVER_URL."/appapi/fblogin/".$rand;
        //echo $url; die();
        $result = callAPI("GET", $url, $data);
        //echo "andy1";p($result);die();
        $result_obj = json_decode($result);
        $uid = 0;
        $uid = $result_obj->user->uid;
        $auth_token = $result_obj->token;
        $field_logged_in_count = $result_obj->user->field_logged_in_count->und[0]->value;


        if ($uid) {
            $local_account = fblogin($data);
            //p($local_account);echo "andy";die();
            $uid = $local_account->user->uid;
            $name = $local_account->user->name;
            $field_logged_in_count = $local_account->user->field_logged_in_count['und'][0]['value'];
            $auth_token = $local_account->token;
            $is_first_login = 1;
            if ($field_logged_in_count > 0) {
                $is_first_login = 0;
            }
            if ($auth_token) {
                $user = updateUsedrProfileAtSignup_rapid($data, 1); 
                $account['status_code'] = "1";
                $account['status_message'] = "";
                $account['data']['user_id'] = "$name";
                $account['data']['auth_token'] = "$auth_token";
            } else {
                watchdog('user', 'Invalid login attempt for %username.', array('%username' => $username));
                //return services_error(t('Wrong username or password.'), 401);
                $account = array();
                $account['status_code'] = "0";
                $account['status_message'] = "Wrong username or password.";
                return $account;
            }
        } else {
            watchdog('user', 'Invalid login attempt for %username.', array('%username' => $username));
            //return services_error(t('Wrong username or passwordtwt.'), 401);
            $account = array();
            $account['status_code'] = "0";
            $account['status_message'] = "Wrong username or password.";
            return $account;
        }

        return $account;
    
}
}

//itg_rapid_api_signup
/**
 * [itg_rapid_api_signup] definition.
 * Returns the information about a itg_rapid_api_signup.
 * @param $nid
 *   The nid of the housing_scheme node.
 * @return array
 * 	The node processed information array.
 */
function itg_rapid_api_signup_old($token, $first_name, $last_name, $user_id, $password, $login_type, $token_id) {
    $HTTP_RAW_POST_DATA;
    // check duplicate user
    $params = (array) json_decode(file_get_contents('php://input'), TRUE);
    //$params = $_POST;
    //p($_POST);die();
    $method = "POST";
    $data = array();
    $account_err = array();
    $data['user_id'] = $params['user_id'];
    $account = array();
    //p($data);die();
    $rand = rand();
    $url = SSO_SERVER_URL . "/appapi/check_user/" . $rand;
    $result = callAPI("GET", $url, $data);
    $result_obj = json_decode($result);
    //echo "hi";p($result_obj->uid);die();
    if ($result_obj->uid) {
        $account_err['status_code'] = "0";
        $account_err['status_message'] = "Duplicate sign up request";
        return $account_err;
    } else {

        $method = "POST";
        $data = $params;
        $account = array();
        $url = SSO_SERVER_URL . "/appapi/signup";
        $result = callAPI($method, $url, $data);
        $result_obj = json_decode($result);
        $uid = $result_obj->uid;
        $uname = $params['user_id'];

        if ($uid) {
            localSignup($params);
            $url = SSO_SERVER_URL . "/appapi/resend_otp";
            $result = callAPI($method, $url, $params);
            $result_obj = json_decode($result);
            $account['status_code'] = "1";
            $account['status_message'] = "";
            $account['data']['user_id'] = "$uname";
            $account['data']['is_authenticated'] = "0";
            $account['data']['otp_status'] = "1";
        } else {
            watchdog('user', 'Duplicate signup attempt for %username.', array('%username' => $params['user_id']));
            $account['status_code'] = "0";
            $account['status_message'] = "Duplicate sign up request.";
        }

        return $account;
    }
}

//itg_rapid_api_fblogin
/**
 * [itg_rapid_api_fblogin] definition.
 * Returns the information about a itg_rapid_api_fblogin.
 * @param $nid
 *   The nid of the housing_scheme node.
 * @return array
 * 	The node processed information array.
 */
function itg_rapid_api_fblogin($token, $app_id, $uname, $uid, $issued_at, $expires_at) {
    //return fblogin($_GET);
    $method = "POST";

    $data = array();
    $data['token'] = $_GET['token'];
    $data['app_id'] = $_GET['app_id'];
    $data['uname'] = $_GET['uname'];
    $data['uid'] = $_GET['uid'];
    $data['issued_at'] = $_GET['issued_at'];
    $data['expires_at'] = $_GET['expires_at'];
    $account = array();
    $url = SSO_SERVER_URL . "/appapi/fblogin";
    $result = callAPI($method, $url, $data);
    $result_obj = json_decode($result);
    $uid = $result_obj->uid;
    $uname = $_GET['uname'];
    $is_authenticated = $account['status_code'] = "1";
    $account['status_message'] = "customised_message";
    $account['data']['user_id'] = "$uname";
    $account['data']['is_authenticated'] = "1";
    $account['data']['otp_status'] = "0";

    return $account;
}

//itg_rapid_api_twtlogin
/**
 * [itg_rapid_api_twtlogin] definition.
 * Returns the information about a itg_rapid_api_twtlogin.
 * @param $nid
 *   The nid of the housing_scheme node.
 * @return array
 * 	The node processed information array.
 */
function itg_rapid_api_twtlogin($token, $app_id, $uname, $uid, $issued_at, $expires_at) {
    //return twtlogin($_GET);

    $method = "POST";

    $data = array();
    $data['token'] = $_GET['token'];
    $data['app_id'] = $_GET['app_id'];
    $data['uname'] = $_GET['uname'];
    $data['uid'] = $_GET['uid'];
    $data['issued_at'] = $_GET['issued_at'];
    $data['expires_at'] = $_GET['expires_at'];

    $account = array();
    $url = SSO_SERVER_URL . "/appapi/twtlogin";
    $result = callAPI($method, $url, $_GET);
    $result_obj = json_decode($result);
    $uid = $result_obj->uid;
    $is_authenticated = $account['status_code'] = "1";
    $uname = $_GET['uname'];
    $account['status_message'] = "customised_message";
    $account['data']['user_id'] = "$uname";
    $account['data']['is_authenticated'] = "1";
    $account['data']['otp_status'] = "0";

    return $account;
}

/**
 * [itg_rapid_api_forgot_password] definition.
 * Returns the information about a itg_rapid_api_forgot_password.
 * @param $nid
 *   The nid of the housing_scheme node.
 * @return array
 * 	The node processed information array.
 */
function itg_rapid_api_forgot_password($token) {
    $HTTP_RAW_POST_DATA;
    $method = "POST";
    $params = (array) json_decode(file_get_contents('php://input'), TRUE);
    //$params = $_POST;
    // login raw input validation
    $validation_error = array();
    $validation_error_str = "";
    $validation_error = forgotPasswordValidation_rapid($params);
    $validation_error_str = implode(", ", $validation_error['custom_error']);
    $error_code_flag = 0;
    //if ($error_code_flag = "This phone number/ email is not registered") {
    if (strpos($validation_error_str,'This phone number/ email is not registered') !== false) {
        $error_code_flag = 2;
    }
    if ($validation_error_str) {
        $account_err['status_code'] = "$error_code_flag";
        $account_err['status_message'] = "$validation_error_str";
        return $account_err;
    }

    // check valid user_id
    $rand = rand();
    $url = SSO_SERVER_URL . "/appapi/check_user/" . $rand;
    $result = callAPI("GET", $url, $params);
    $result_obj = json_decode($result);
    //echo "hi";p($result_obj->uid);die();
    if (!$result_obj->uid) {
        $account_err['status_code'] = "2";
        $account_err['status_message'] = "This phone number/ email is not registered";
        return $account_err;
    }

    $url = SSO_SERVER_URL . "/appapi/forgot_password";
    //itg_otp_device_info_insert_rapid($params);
    $result = callAPI($method, $url, $params);
    $result_obj = json_decode($result);

    // get_otp & insert into itg_otp_device_info
    $rand = rand();
    $url = SSO_SERVER_URL . "/appapi/get_otp/" . $rand;
    $result = callAPI("GET", $url, $params);
    $result_obj_otp = json_decode($result);
    //p($result_obj_otp);die();
    if ($result_obj_otp[0]->otp) {
        itg_otp_device_info_insert_rapid($params, $result_obj_otp[0]->otp, 1, $result_obj_otp[0]->created);
    }
    cleanToken_Rapid($params);
    $data['status_code'] = "1";
    $data['status_message'] = "";

    return $data;
}

/**
 * [itg_rapid_api_otp_verification] definition.
 * Returns the information about a itg_rapid_api_otp_verification.
 * @param $nid
 *   The nid of the housing_scheme node.
 * @return array
 * 	The node processed information array.
 */
function itg_rapid_api_otp_verification($token) {
    $HTTP_RAW_POST_DATA;
    $method = "POST";
    $params = (array) json_decode(file_get_contents('php://input'), TRUE);
    // login raw input validation
    $validation_error = array();
    $validation_error_str = "";
    $validation_error = forgotPasswordValidation_rapid($params);
    $validation_error_str = implode(", ", $validation_error['custom_error']);
    $error_code_flag = 0;
    //if ($error_code_flag = "This phone number/ email is not registered") {
    if (strpos($validation_error_str,'This phone number/ email is not registered') !== false) {
        $error_code_flag = 2;
    }
    if ($validation_error_str) {
        $account_err['status_code'] = "$error_code_flag";
        $account_err['status_message'] = "$validation_error_str";
        return $account_err;
    }
    //$params = $_POST;
    $url = SSO_SERVER_URL . "/appapi/otp_verification";
    $result = callAPI($method, $url, $params);
    $result_obj = json_decode($result);
    //echo $result_obj[0]->otp; die();
    if ($result_obj[0]->otp) {
        //login scritp start
        $user_name = $params['user_id'];
        $user = user_load_by_name($user_name);
        //p($user);die();
        if ($user->uid) {
            //user_login_finalize($user);

            $return = new stdClass();
            $return->sessid = session_id();
            $return->session_name = session_name();
            $return->token = drupal_get_token('services');

            $account = clone $user;

            services_remove_user_data($account);

            $return->user = $account;

            //return $return;
        }
        //login scritp end
        $uname = $params['user_id'];
        $data['status_code'] = "1";
        $data['status_message'] = "";
        $data['data']['user_id'] = "$uname";
        $data['data']['is_authenticated'] = "1";
        //$data['data']['auth_token'] = "$return->token";
    } else {
        $data['status_code'] = "0";
        $data['status_message'] = "Please enter the correct OTP";
    }


    return $data;
}

/**
 * [itg_rapid_api_resend_otp] definition.
 * Returns the information about a itg_rapid_api_resend_otp.
 * @param $nid
 *   The nid of the housing_scheme node.
 * @return array
 * 	The node processed information array.
 */
function itg_rapid_api_resend_otp($token, $user_id) {
    $HTTP_RAW_POST_DATA;
    $method = "POST";
    $params = (array) json_decode(file_get_contents('php://input'), TRUE);
      // raw input validation
    $validation_error = array();
    $validation_error_str = "";
    $validation_error = resentotpValidation_rapid($params);
    $validation_error_str = implode(", ", $validation_error['custom_error']);
    if ($validation_error_str) {
        $account_err['status_code'] = "0";
        $account_err['status_message'] = "$validation_error_str";
        return $account_err;
    }
    //$params = $_POST;
     $rand = rand();
    $url = SSO_SERVER_URL . "/appapi/check_user/" . $rand;
        $result = callAPI("GET", $url, $params);
        $result_obj = json_decode($result);
        //echo "hi";p($result_obj->uid);die();
        if (!$result_obj->uid) {
            $account_err['status_code'] = "0";
            $account_err['status_message'] = "Invalid User_ID";
            return $account_err;
        }
    
    $url = SSO_SERVER_URL . "/appapi/resend_otp";
    $result = callAPI($method, $url, $params);
    $result_obj = json_decode($result);

    $data['status_code'] = "1";
    $data['status_message'] = "";

    return $data;
}

/**
 * [itg_rapid_api_change_password] definition.
 * Returns the information about a itg_rapid_api_change_password.
 * @param $nid
 *   The nid of the housing_scheme node.
 * @return array
 * 	The node processed information array.
 */
function itg_rapid_api_change_password($token) {
    $HTTP_RAW_POST_DATA;
    $method = "POST";
    $params = (array) json_decode(file_get_contents('php://input'), TRUE);
    $params['old_pass'] = trim($params['old_password']);
    $params['new_pass'] = trim($params['new_password']);

    // raw input validation
    $validation_error = array();
    $validation_error_str = "";
    $validation_error = validateChangePass($params);
    $validation_error_str = implode(", ", $validation_error['custom_error']);
    if ($validation_error_str) {
        $account_err['status_code'] = "0";
        $account_err['status_message'] = "$validation_error_str";
        return $account_err;
    }
    
    $url = SSO_SERVER_URL . "/appapi/check_user/" . $rand;
        $result = callAPI("GET", $url, $params);
        $result_obj = json_decode($result);
        //echo "hi";p($result_obj->uid);die();
        if (!$result_obj->uid) {
            $account_err['status_code'] = "0";
            $account_err['status_message'] = "Invalid User_ID";
            return $account_err;
        }
        $token = $params['auth_token']; 
if (!drupal_valid_token($token, 'services')) {
            $res['status_code'] = "0";
            $res['status_message'] = "invalid token";
            return $res;
        }
    
    $url = SSO_SERVER_URL . "/appapi/change_password";
    $result = callAPI($method, $url, $params);
    $result_obj = json_decode($result);

    if ($result_obj->uid) {
        $local_obj = localChangePass($params, $result_obj->uid);
        itg_reset_pass_info_insert_rapid($params, 2);
        cleanToken_Rapid($params);
        $user_name = $params['user_id'];
        $user = user_load_by_name($user_name);

        watchdog('user', 'Session closed for %name.', array('%name' => $user->name));

        $original_session_state = drupal_save_session();
        drupal_save_session(TRUE);

        // Destroy the current session.
        module_invoke_all('user_logout', $user);
        session_destroy();

        // Load the anonymous user.
        $user = drupal_anonymous_user();

        drupal_save_session($original_session_state);
        deviceTokenReset_Rapid($params);
        $data['status_code'] = "1";
        $data['status_message'] = "Password has changed";
    } else {
        $data['status_code'] = "2";
        $data['status_message'] = "Password has not changed";
    }



    return $data;
}

/**
 * [author_latest_story_list] definition.
 * Returns all the stories which is filled by particular author.
 * @param $nid
 *   The Author id
 *   Type [0/1 where 0 can be for Latest and 1 for Popular]
 * @return array
 * 	array of stories.
 */
function author_latest_story($token) {
    //valid id
    $author_id = $_GET['author_id'];
    $story_type = $_GET['type'];
    $cpageno = $_GET['cpageno'];


    if (!is_numeric($author_id)) {
        $id = 0;
    }
    if (!is_numeric($cpageno)) {
        $cpageno = 0;
    }
    // call function for return data..
    if ($_GET['type'] == '0') {
        $type = 'latest';
    } elseif ($_GET['type'] == '1') {
        $type = 'popular';
    }

    $suffix = $author_id . '_' . $cpageno;
    $redis_key = "itg_rapid_api_author_" . $type . "_storylist" . $suffix;
    $result_get = getRedis($redis_key);

    if ($result_get['key_value'] != "") {
        $jsondata = $result_get['key_value'];
    } else {
        // call function from return data..
        $jsondata = author_story_list($author_id, $story_type, $cpageno);
        $jsondata = json_encode($jsondata);
        $ttl = '10';
        $result_set = setRedis($redis_key, $jsondata, $ttl);
    }

    $jsondata = json_decode($jsondata, true);
    return $jsondata;
}

/**
 * Returns all the open poll in the system
 * @param
 * @return array
 * 	array of open polls.
 */
function polls_open($token) {
    $cpageno = $_GET['cpageno'];
    if (!is_numeric($cpageno)) {
        $cpageno = 0;
    }

    $redis_key = "itg_rapid_api_open_polls_" . $cpageno;
    $result_get = getRedis($redis_key);

    if ($result_get['key_value'] != "") {
        $jsondata = $result_get['key_value'];
    } else {
        // call function from return data..
        $jsondata = polls_open_list($cpageno);
        $jsondata = json_encode($jsondata);
        $ttl = DEFAULT_REDIS_EXPIRE_TIME;
        $result_set = setRedis($redis_key, $jsondata, $ttl);
    }

    $jsondata = json_decode($jsondata, true);
    return $jsondata;
}

/**
 * Returns all the open poll in the system
 * @param
 * @return array
 * 	array of open polls.
 */
function polls_close($token) {
    $cpageno = $_GET['cpageno'];
    if (!is_numeric($cpageno)) {
        $cpageno = 0;
    }
    $redis_key = "itg_rapid_api_close_polls_" . $cpageno;
    $result_get = getRedis($redis_key);

    if ($result_get['key_value'] != "") {
        $jsondata = $result_get['key_value'];
    } else {
        // call function from return data..
        $jsondata = polls_close_list($cpageno);
        $jsondata = json_encode($jsondata);
        $ttl = DEFAULT_REDIS_EXPIRE_TIME;
        $result_set = setRedis($redis_key, $jsondata, $ttl);
    }

    $jsondata = json_decode($jsondata, true);
    return $jsondata;
}

/**
 * Returns all the open poll from the system
 * @param
 * @return array
 * 	array of open polls.
 */
function itg_rapid_api_poll_cast($poll_id, $option_id, $user_id, $args) {
    $HTTP_RAW_POST_DATA;
    $params = (array) json_decode(file_get_contents('php://input'), TRUE);

    $poll_id = $params['poll_id'];
    $option_id = isset($params['option_id']) ? $params['option_id'] : "";
    $device_id = $params['device_id'];
    $device = isset($params['device_type']) ? $params['device_type'] : "";
    $user_name = $params['user_id']; //user name of the logend in user
    $user_load = user_load_by_name($user_name);
    $user_id = isset($user_load->uid) ? $user_load->uid : "";

    $message_array = array();
    $args = '0';
    //Check args is exist
    if ($poll_id != '' && $device_id != '') {
        $args = '1';
    } else {
        $message_array['status_code'] = '0';
        $message_array['status_message'] = "Argument are missing";
        $message_array['data'] = array();
    }

    $node_load = node_load($poll_id);

    if (!$node_load) {
        $args = '0';
        $message_array['status_code'] = '0';
        $message_array['status_message'] = "This is not a valid poll id";
        $message_array['data'] = array();
    } else {
        if ($node_load->type != 'poll') {
            $args = '0';
            $message_array['status_code'] = '0';
            $message_array['status_message'] = "This is not a valid poll id";
            $message_array['data'] = array();
        } else {
            if ($option_id != '') {
                $polls = array();
                foreach ($node_load->field_poll_answer['und'] as $data) {
                    $polls[] = $data['value'];
                }
                if (!in_array($option_id, $polls)) {
                    $args = '0';
                    $message_array['status_code'] = '0';
                    $message_array['status_message'] = "Option id does not match with poll id";
                    $message_array['data'] = array();
                }
            }
        }
    }

    // check args
    if ($args != '0') {
        // if status is 0 then poll is already closed , 
        $poll_status = check_poll_status($poll_id);
        if ($poll_status != '0') {
            $jsondata = poll_cast_list($poll_id, $option_id, $device_id, $ip_address, $device);
        } else {
            $message_array['status_code'] = '0';
            $message_array['status_message'] = "Poll is already closed";
            $message_array['data'] = array();
            $jsondata = $message_array;
        }
    } else {
        $jsondata = $message_array;
    }
    return $jsondata;
}

/*
 * Common function for checking poll is open or close
 * @param $poll_id
 * return 0|1 , if return 0 then poll is closed , if return 1 then poll is open , 
 */

function check_poll_status($poll_id) {

    $current_time = date('Y-m-d H:i:s', time());

    $query = db_select('node', 'n');
    $query->leftJoin('field_data_field_poll_start_date', 'st', 'st.entity_id = n.nid');
    $query->leftJoin('field_data_field_poll_end_date', 'ed', 'ed.entity_id = n.nid');
    $query->fields('n', array('nid', 'title', 'type', 'changed'));
    $query->fields('st', array('field_poll_start_date_value'));
    $query->fields('ed', array('field_poll_end_date_value'));
    $query->condition('n.type', 'poll');
    $query->condition('st.field_poll_start_date_value', $current_time, '<');
    $query->condition('n.status', '1');
    $query->condition('n.nid', $poll_id);
    $result = $query->execute()->fetchAll(PDO::FETCH_ASSOC);

    $poll_status = '0';
    foreach ($result as $k => $res) {
        if ($res['field_poll_end_date_value'] != '' && $res['field_poll_end_date_value'] > $current_time) {
            $poll_status = '1';
        } else if ($res['field_poll_end_date_value'] == '') {//&& $res['field_poll_start_date_value'] >= $current_time
            $poll_status = '1';
        }
    }
    //if status is 1 then poll is open otherwise poll is closed

    return $poll_status;
}

/**
 * Returns poll detail in an array based on poll id args
 * @param poll_id
 * @return array
 * 	array of open polls.
 */
function poll_detail($token, $poll_id) {

    $poll_id = $_GET['poll_id'];
    $redis_key = "itg_rapid_poll_details_" . $poll_id;
    $result_get = getRedis($redis_key);

    if ($result_get['key_value'] != "") {
        $jsondata = $result_get['key_value'];
    } else {
        // call function from return data..
        $jsondata = poll_detail_data($poll_id);
        $jsondata = json_encode($jsondata);
        $ttl = DEFAULT_REDIS_EXPIRE_TIME;
        $result_set = setRedis($redis_key, $jsondata, $ttl);
    }

    $jsondata = json_decode($jsondata, true);
    return $jsondata;
}

/**
 * function for itg_rapid_api_edit_profile
 * @param array
 * @return array
 *
 */
function itg_rapid_api_edit_profile($token) {

    $HTTP_RAW_POST_DATA;
    $method = "POST";
    $params = (array) json_decode(file_get_contents('php://input'), TRUE);
    $rand = rand();
    $url = SSO_SERVER_URL . "/appapi/check_user/" . $rand;
    $result = callAPI("GET", $url, $params);
    $result_obj = json_decode($result);
    //echo "hi";p($result_obj->uid);die();
      // raw input validation
    $validation_error = array();
    $validation_error_str = "";
    $validation_error = authtokenValidation_rapid($params);
    $validation_error_str = implode(", ", $validation_error['custom_error']);
    if ($validation_error_str) {
        $account_err['status_code'] = "0";
        $account_err['status_message'] = "$validation_error_str";
        return $account_err;
    }
    if (!$result_obj->uid) {
        $account_err['status_code'] = "0";
        $account_err['status_message'] = "Invalid User_ID";
        return $account_err;
    }
    //$params = $_POST;
    $token = $params['authtoken_id'];
    if (!drupal_valid_token($token, 'services')) {
        $responce_object['status_code'] = "0";
        $responce_object['status_message'] = "invalid token";
    } else {
        $url = SSO_SERVER_URL . "/appapi/edit_profile";
        $result = callAPI($method, $url, $params);
        $result_obj = json_decode($result);

        //if ($result_obj->uid) {
        $responce_object_rs = saveUpdatedProfile($params);
        $responce_object['status_code'] = "1";
        $responce_object['status_message'] = "";
        //}
    }
    return $responce_object;
}

/**
 * function for itg_rapid_api_edit_user_image
 * @param array
 * @return array
 *
 */
function itg_rapid_api_edit_user_image($token) {
    $HTTP_RAW_POST_DATA;
    $data = array();
    $params = (array) json_decode(file_get_contents('php://input'), TRUE);
    $rand = rand();
    $url = SSO_SERVER_URL . "/appapi/check_user/" . $rand;
    $result = callAPI("GET", $url, $params);
    $result_obj = json_decode($result);
    //echo "hi";p($result_obj->uid);die();
    if (!$result_obj->uid) {
        $account_err['status_code'] = "0";
        $account_err['status_message'] = "Invalid User_ID";
        //return $account_err;
    }
    $authtoken_id = $token = $params['authtoken_id'];
    //p($params);die();
    if (!drupal_valid_token($token, 'services')) {
        $data['status_code'] = "0";
        $data['status_message'] = "invalid token";
    } else {

        global $user;
        $user_id = $params['user_id'];
        $profile_image = $params['profile_image'];
        $user_detail = user_load_by_name($user_id);
        $uid = $user_detail->uid;

        // call sso server api
        $method = "POST";
        $url = SSO_SERVER_URL . "/appapi/edit_user_image";
        $result = callAPI($method, $url, $params);

        // check mime-type
        $profile_img = base64_decode($profile_image);
        $f = finfo_open();
        $mime_type = finfo_buffer($f, $profile_img, FILEINFO_MIME_TYPE);
        $mime_type_ar = explode("/", $mime_type);
        $mime_type_ext = $mime_type_ar[1];


        //echo  mime_content_type ($profile_image );die();
        $profile_img_tmp = '/tmp/profileimage_' . $uid . "." . $mime_type_ext;

        $image_name = 'profileimage_' . $uid . "." . $mime_type_ext;
        // crate profile img tmp file
        file_put_contents($profile_img_tmp, $profile_img);
        $imagedata = file_get_contents($profile_img_tmp);
        //$file_data_temp = file_save_data($imagedata, file_default_scheme() . '://' . $image_url);
        $file_data = file_save_data($imagedata, file_default_scheme() . '://' . $image_name);


        // Update profile pic
        if (!empty($file_data->fid)) {
            $user_detail->field_user_picture['und'][0]['fid'] = $file_data->fid;
        }

        // Save user object.
        $resp = user_save($user_detail);
        if ($resp->uid) {
            $data['status_code'] = "1";
            $data['status_message'] = "";
        } else {
            $data['status_code'] = "0";
            $data['status_message'] = "Technical Error.";
        }
    }
    return $data;
}

/**
 * function for itg_rapid_api_get_login_user_detail
 * @param array
 * @return array
 *
 */
function itg_rapid_api_get_login_user_detail($token) {
    $HTTP_RAW_POST_DATA;
    $data = array();
    $params = (array) json_decode(file_get_contents('php://input'), TRUE);
    $rand = rand();
    $url = SSO_SERVER_URL . "/appapi/check_user/" . $rand;
    $result = callAPI("GET", $url, $params);
    $result_obj = json_decode($result);
    //echo "hi";p($result_obj->uid);die();
    if (!$result_obj->uid) {
        $account_err['status_code'] = "0";
        $account_err['status_message'] = "Invalid User_ID";
        return $account_err;
    }
    //$params = $_POST;
    $authtoken_id = $params['authtoken_id'];
    $user_id = $params['user_id'];
    $token = $params['authtoken_id'];
    if (!drupal_valid_token($token, 'services')) {
        $data['status_code'] = "0";
        $data['status_message'] = "invalid token";
    } else {
        $account = user_load_by_name($user_id);
        //$user_id = $account->uid;
        $first_name = $account->field_first_name['und'][0]['value'];
        $last_name = $account->field_last_name['und'][0]['value'];
        $email_id = $account->mail;
        $phone_number = $account->field_mobile_number['und'][0]['value'];
        $location = "";
        //$profile_style_img = theme('user_picture', array('account' =>$account));


        /* if ($account->field_user_counrty['und'][0]['tid']) {
          //$location .= $account->field_user_counrty['und'][0]['tid'];
          $term = taxonomy_term_load($account->field_user_counrty['und'][0]['tid']);
          $name = $term->name;
          $location .= ", " . $name;
          }
          if ($account->field_personalization_state['und'][0]['tid']) {
          $term = taxonomy_term_load($account->field_personalization_state['und'][0]['tid']);
          $name = $term->name;
          $location .= ", " . $name;
          }
          if ($account->field_personalization_city['und'][0]['tid']) {
          //$location .= ", " . $account->field_personalization_city['und'][0]['tid'];
          $term = taxonomy_term_load($account->field_personalization_city['und'][0]['tid']);
          $name = $term->name;
          $location .= ", " . $name;
          }
          if ($account->field_short_description['und'][0]['value']) {
          $location .= ", " . $account->field_short_description['und'][0]['value'];
          } */
        $location = $account->field_short_description['und'][0]['value'];

        $profile_image = completeFilePath($account->field_user_picture['und'][0]['fid']);
        //$profile_image = $account->field_user_picture['und'][0]['fid'];
        $gender = $account->field_user_gender['und'][0]['value'];
        $date_of_birth = $account->field_story_issue_date['und'][0]['value'];
        $login_type = "0";
        if (strpos($email_id, '@facebook.com') !== false) {
            $login_type = 1;
        } elseif (strpos($email_id, '@twitter.com') !== false) {
            $login_type = 2;
        }

        $data['status_code'] = "1";
        $data['status_message'] = "";

        $data['data']['user_profile_detail']['token_id'] = "$authtoken_id";
        $data['data']['user_profile_detail']['login_type'] = "$login_type";
        $data['data']['user_profile_detail']['user_id'] = "$user_id";
        $data['data']['user_profile_detail']['first_name'] = "$first_name";
        $data['data']['user_profile_detail']['last_name'] = "$last_name";
        $data['data']['user_profile_detail']['email_id'] = "$email_id";
        $data['data']['user_profile_detail']['phone_number'] = "$phone_number";
        $data['data']['user_profile_detail']['location'] = "$location";
        $data['data']['user_profile_detail']['profile_image'] = "$profile_image";
        $data['data']['user_profile_detail']['gender'] = "$gender";
        $data['data']['user_profile_detail']['date_of_birth'] = "$date_of_birth";
    }

    return $data;
}

/**
 * function for itg_rapid_api_log_out
 * @param array
 * @return array
 *
 */
function itg_rapid_api_log_out($token) {
    $HTTP_RAW_POST_DATA;
    global $base_url;
    $params = (array) json_decode(file_get_contents('php://input'), TRUE);
    // check valid user_id
    $rand = rand();
    $url = SSO_SERVER_URL . "/appapi/check_user/" . $rand;
    $result = callAPI("GET", $url, $params);
    $token = $params['auth_token'];
    $result_obj = json_decode($result);
    //echo "hi";p($result_obj->uid);die();
    if (!$result_obj->uid) {
        $account_err['status_code'] = "0";
        $account_err['status_message'] = "Invalid User_ID";
        return $account_err;
    }
    
    if (!drupal_valid_token($token, 'services')) {
            $res['status_code'] = "0";
            $res['status_message'] = "invalid token";
            return $res;
        }
    
    //$params = $_POST;
    {
        // call sso server api
        $method = "POST";
        $url = SSO_SERVER_URL . "/appapi/log_out";
        $result = callAPI($method, $url, $params);
        $user_id = $params['user_id'];
        $user = user_load_by_name($user_id);

        watchdog('user', 'Session closed for %name.', array('%name' => $user->name));

        $original_session_state = drupal_save_session();
        drupal_save_session(TRUE);

        // Destroy the current session.
        module_invoke_all('user_logout', $user);
        session_destroy();

        // Load the anonymous user.
        $user = drupal_anonymous_user();

        drupal_save_session($original_session_state);
        // call custom function to clean token in custom table
        cleanToken_Rapid($params);
    }
    $data['status_code'] = "1";
    $data['status_message'] = "";

    return $data;
}

/**
 * function for itg_rapid_api_get_preference
 * @param array
 * @return array
 *
 */
function itg_rapid_api_get_preference($token) {
    $HTTP_RAW_POST_DATA;
    global $base_url;
    $params = (array) json_decode(file_get_contents('php://input'), TRUE);
    $user_id = $params['user_id'];
    $authtoken_id = $params['authtoken_id'];
    $rand = rand();
    $url = SSO_SERVER_URL . "/appapi/check_user/" . $rand;
    $result = callAPI("GET", $url, $params);
    $result_obj = json_decode($result);
    //echo "hi";p($result_obj->uid);die();
    if (!$result_obj->uid) {
        $account_err['status_code'] = "0";
        $account_err['status_message'] = "Invalid User_ID";
        return $account_err;
    }
    if (!drupal_valid_token($authtoken_id, 'services')) {
        $data['status_code'] = "0";
        $data['status_message'] = "invalid token";
        return $data;
    } else {
        $account = user_load_by_name($user_id);

        $preference_tid = get_personalization_saved_value_service($account->uid);


        // return data of personalization-preferences value
        $data['status_code'] = "1";
        $data['status_message'] = "";
        $data['data']['updated_datetime'] = "$last_access_date";
        //$data['data']['preference_type'] = "default/implicit/explicit";
        $data['data']['preference_type'] = "explicit";
        $loop_count = 0;
        //get personalization-preferences value
        foreach ($preference_tid as $key => $value) {
            $pdata = $value;
            $tid = $pdata['nid'];
            $prefeance = $pdata['weight'];
            $term = taxonomy_term_load($tid);
            $term_name = $term->name;
            $data['data']['preference'][$loop_count]['id'] = "$tid";
            $data['data']['preference'][$loop_count]['title'] = "$term_name";
            $data['data']['preference'][$loop_count]['is_preffered'] = "$prefeance";
            $loop_count++;
        }
    }
    return $data;
}

/**
 *
 * @param int $tid
 * @return array
 */
function itg_rapid_api_get_personalization_saved_value($tid, $uid) {
    $query = db_select('itg_widget_order', 'iwo');
    $query->addField('iwo', 'weight');
    $query->condition('iwo.nid', $tid);
    $query->condition('iwo.extra', $uid);
    return $query->execute()->fetch();
}

/**
 * function for itg_rapid_api_update_preference
 * @param array
 * @return array
 *
 */
function itg_rapid_api_update_preference($token) {
    global $base_url;
    global $user;
    $HTTP_RAW_POST_DATA;
    $data = array();

    $params = (array) json_decode(file_get_contents('php://input'), TRUE);
    $user_id = $params['user_id'];
    $authtoken_id = $params['authtoken_id'];
    $preference = $params['preference'];
    $updates = array();
    foreach ($preference as $key => $val) {
        $tid = (int) $val['id'];
        $value = (int) $val['is_preffered'];
        if ($value) {
            $is_preffered = 100;
        } else {
            $is_preffered = 0;
        }
        $updates[$tid]['value'] = $is_preffered;
    }

    $rand = rand();
    $url = SSO_SERVER_URL . "/appapi/check_user/" . $rand;
    $result = callAPI("GET", $url, $params);
    $result_obj = json_decode($result);
    //echo "hi";p($result_obj->uid);die();
    if (!$result_obj->uid) {
        $account_err['status_code'] = "0";
        $account_err['status_message'] = "Invalid User_ID";
        return $account_err;
    }
    if (!drupal_valid_token($authtoken_id, 'services')) {
        $data['status_code'] = "0";
        $data['status_message'] = "invalid token";
        return $data;
    } else {

        $result = callAPI($method, $url, $params);

        $user = user_load_by_name($user_id);
        $widget_name = "personalization_widget";

        $nids = array_keys($updates);
        // Delete all the tids from table if they are not in $updates variable
        // unsued tid should be delete
        db_delete('itg_widget_order')
                ->condition('widget', $widget_name)
                ->condition('nid', $nids, "NOT IN")
                ->condition('extra', $user->uid)
                ->execute();
        // Update the weight of tids if exists or insert if dont exists.
        foreach ($updates as $term_id => $weight) {
            $weight_val = $weight['value'];
            db_merge('itg_widget_order')
                    ->key(array('nid' => $term_id, 'widget' => $widget_name, 'extra' => $user->uid))
                    ->fields(array(
                        'nid' => $term_id,
                        'widget' => $widget_name,
                        'weight' => $weight_val,
                        'extra' => $user->uid,
                    ))
                    ->execute();
        }
    }
    $data['status_code'] = "1";
    $data['status_message'] = "";
    return $data;
}

/**
 *
 * @param array $updates
 */
function rapid_save_itg_widget_personalization_data($updates, $user_id) {

    $widget_name = "personalization_widget";
    $responce = FALSE;
    $nids = array_keys($updates);
    // Delete all the tids from table if they are not in $updates variable
    // unsued tid should be delete
//  db_delete('itg_widget_order')
//      ->condition('widget', $widget_name)
//      ->condition('nid', $nids, "NOT IN")
//      ->condition('extra', $user_id)
//      ->execute();
    // Update the weight of tids if exists or insert if dont exists.
    foreach ($updates as $term_id => $weight) {
        $qry = db_merge('itg_widget_order')
                ->key(array('nid' => $term_id, 'widget' => $widget_name, 'extra' => $user_id))
                ->fields(array(
                    'nid' => $term_id,
                    'widget' => $widget_name,
                    'weight' => $weight,
                    'extra' => $user_id,
                ))
                ->execute();
        if ($qry) {
            $responce = TRUE;
        } else {
            $responce = FALSE;
        }
    }

    return $responce;
}

/**
 *
 * @param int $tid
 * @return array
 */
function update_preference($user_id, $tid) {
    global $user;
    $widget_name = "personalization_widget";

    $nids = array_keys($updates);
    // Delete all the tids from table if they are not in $updates variable
    // unsued tid should be delete
    db_delete('itg_widget_order')
            ->condition('widget', $widget_name)
            ->condition('nid', $nids, "NOT IN")
            ->condition('extra', $user->uid)
            ->execute();
    // Update the weight of tids if exists or insert if dont exists.
    foreach ($updates as $term_id => $weight) {
        db_merge('itg_widget_order')
                ->key(array('nid' => $term_id, 'widget' => $widget_name, 'extra' => $user->uid))
                ->fields(array(
                    'nid' => $term_id,
                    'widget' => $widget_name,
                    'weight' => $weight,
                    'extra' => $user->uid,
                ))
                ->execute();
    }
    drupal_set_message(t("My Preferences Has Been Save."));
}

/*
 * Ge All the Bookmark stories based on user id
 * @param $user_id
 * @return array of node stories
 */

function bookmark_get_responce($token, $user_id, $authtoken_id) {
    $HTTP_RAW_POST_DATA;
    $params = (array) json_decode(file_get_contents('php://input'), TRUE);

    $user_name = $params['user_id']; //user name of the logend in user
    $user_load = user_load_by_name($user_name);
    $user_id = $user_load->uid;
    $authtoken_id = $params['authtoken_id'];

    $message_array = array();

    $args = '0';
    if ($user_id != '0' && isset($authtoken_id)) {
        $args = '1';
    } else {
        $message_array['status_code'] = '0';
        $message_array['status_message'] = "Argument are missing";
        $message_array['data'] = array('news' => array());
    }

    if ($user_id == '') {
        $args = '0';
        $message_array['status_code'] = "0";
        $message_array['status_message'] = "User does not exist";
        $message_array['data'] = array('news' => array());
    }

    if (!drupal_valid_token($authtoken_id, 'services')) {
        $args = '0';
        $message_array['status_code'] = "0";
        $message_array['status_message'] = "invalid token";
        $message_array['data'] = array('news' => array());
    }


    if ($args != '0') {
        $jsondata = bookmark_responce_data($user_id);
    } else {
        $jsondata = $message_array;
    }

    return $jsondata;
}

/*
 * Set bookmark stories for a specific user_id and return all
 *
 */

function bookmark_set_responce($token, $user_id, $node_id) {
    $HTTP_RAW_POST_DATA;
    $params = (array) json_decode(file_get_contents('php://input'), TRUE);

    $user_name = $params['user_id']; //user name of the logend in user
    $user_load = user_load_by_name($user_name);
    $user_id = $user_load->uid;
    $authtoken_id = $params['authtoken_id'];
    $node_ids = $params['data']['content'];

    $message_array = array();

    $args = '0';
    if ($user_id != '0' && isset($authtoken_id) && is_array($node_ids)) {
        $args = '1';
    } else {
        $message_array['status_code'] = '0';
        $message_array['status_message'] = "Argument are missing";
        $message_array['data'] = array('news' => array());
    }

    if ($user_id == '') {
        $args = '0';
        $message_array['status_code'] = "0";
        $message_array['status_message'] = "User does not exist";
        $message_array['data'] = array('news' => array());
    }

    if (!drupal_valid_token($authtoken_id, 'services')) {
        $args = '0';
        $message_array['status_code'] = "0";
        $message_array['status_message'] = "invalid token";
        $message_array['data'] = array('news' => array());
    }

    // check args
    if ($args != '0') {
        $jsondata = bookmark_set_data_responce($user_id, $node_ids);
    } else {
        $jsondata = $message_array;
    }

    return $jsondata;
}

function bookmark_delete_responce($token, $user_id, $node_id) {
    $HTTP_RAW_POST_DATA;
    $params = (array) json_decode(file_get_contents('php://input'), TRUE);

    $user_name = $params['user_id']; //user name of the logend in user
    $user_load = user_load_by_name($user_name);
    $authtoken_id = $params['authtoken_id'];

    $user_id = $user_load->uid;
    $node_ids = $params['data']['bookmark_content'];
    $message_array = array();
    $args = '0';
    if ($user_id != '0' && isset($authtoken_id) && is_array($node_ids)) {
        $args = '1';
    } else {
        $message_array['status_code'] = '0';
        $message_array['status_message'] = "Argument are missing";
        $message_array['data'] = array('bookmark_content' => array());
    }

    if ($user_id == '') {
        $args = '0';
        $message_array['status_code'] = "0";
        $message_array['status_message'] = "User does not exist";
        $message_array['data'] = array('bookmark_content' => array());
    }

    if (!drupal_valid_token($authtoken_id, 'services')) {
        $args = '0';
        $message_array['status_code'] = "0";
        $message_array['status_message'] = "invalid token";
        $message_array['data'] = array('bookmark_content' => array());
    }

    if ($args != '0') {
        $jsondata = bookmark_del_data_responce($user_id, $node_ids);
    } else {
        $jsondata = $message_array;
    }

    return $jsondata;
}

/**
 * Returns Author user detail in an array based on author id args
 * @param author_id
 * @return array
 * 	array of Author detail fields.
 */
function author_detail($token, $author_id) {

    $author_id = $_GET['author_id'];
    $redis_key = "itg_rapid_api_author_" . $author_id . "_detail";
    $result_get = getRedis($redis_key);

    if ($result_get['key_value'] != "") {
        $jsondata = $result_get['key_value'];
    } else {
        // call function from return data..
        $jsondata = author_detail_data($author_id);
        $jsondata = json_encode($jsondata);
        $ttl = DEFAULT_REDIS_EXPIRE_TIME;
        $result_set = setRedis($redis_key, $jsondata, $ttl);
    }

    $jsondata = json_decode($jsondata, true);
    return $jsondata;
}

/**
 * Returns Newswrap i.e recent stories which has Highlights
 * @return array
 * array of stories.
 */
function news_wrap($token) {

    $redis_key = "itg_rapid_newswrap";
    $result_get = getRedis($redis_key);

    if ($result_get['key_value'] != "") {
        $jsondata = $result_get['key_value'];
    } else {
        // call function from return data..
        $jsondata = news_wrap_list();
        $jsondata = json_encode($jsondata);
        $ttl = DEFAULT_REDIS_EXPIRE_TIME;
        $result_set = setRedis($redis_key, $jsondata, $ttl);
    }

    $jsondata = json_decode($jsondata, true);
    return $jsondata;
}

/**
 * Returns Anchor user detail in an array based on anchor id args
 * @param anchor_id
 * @return array
 * 	array of Anchor detail fields.
 */
function anchor_detail($token, $anchor_id) {

    $anchor_id = $_GET['anchor_id'];
    $redis_key = "itg_rapid_api_anchor_" . $anchor_id . "_detail";
    $result_get = getRedis($redis_key);

    if ($result_get['key_value'] != "") {
        $jsondata = $result_get['key_value'];
    } else {
        // call function from return data..
        $jsondata = anchor_detail_data($anchor_id);
        $jsondata = json_encode($jsondata);
        $ttl = DEFAULT_REDIS_EXPIRE_TIME;
        $result_set = setRedis($redis_key, $jsondata, $ttl);
    }

    $jsondata = json_decode($jsondata, true);
    return $jsondata;
}

/**
 * Returns all the programm which is filled by particular anchor.
 * @param $anchor_id
 *   The Anchor id
 *   Type [0/1 where 0 can be for Latest and 1 for Popular]
 * @return array
 * 	array of programms.
 */
function anchor_programm_list($token, $anchor_id, $type) {

    //valid id
    $anchor_id = $_GET['anchor_id'];
    $story_type = $_GET['type'];
    $cpageno = $_GET['cpageno'];

    if (!is_numeric($anchor_id)) {
        $id = 0;
    }
    if (!is_numeric($cpageno)) {
        $cpageno = 0;
    }

    // call function for return data..
    if ($_GET['type'] == '0') {
        $redis_type = 'latest';
        $type = '0';
    } elseif ($_GET['type'] == '1') {
        $redis_type = 'popular';
        $type = '1';
    } else {
        $type = '';
    }
    $suffix = $anchor_id . '_' . $cpageno;
    $redis_key = "itg_rapid_api_anchor_" . $redis_type . "_programmlist" . $suffix;

    $result_get = getRedis($redis_key);

//    if ($result_get['key_value'] != "") {
//        $jsondata = $result_get['key_value'];
//    } else {
    // call function from return data..
    $jsondata = anchor_programm_data_list($anchor_id, $type, $cpageno);
    $jsondata = json_encode($jsondata);
//        $ttl = '15';//DEFAULT_REDIS_EXPIRE_TIME;
//        $result_set = setRedis($redis_key, $jsondata, $ttl);
//    }

    $jsondata = json_decode($jsondata, true);
    return $jsondata;
}

// for static other device

/**
 * [itg_rapid_api_adconfig_android] definition.
 * Returns the information about a itg_rapid_api_adconfig_android.
 * @param $token 
 * @return array 
 */
function itg_rapid_api_adconfig_android($token) {
    $redis_key = "itgd_rapid_adconfig_android";
    $result_get = getRedis($redis_key);

    if ($result_get['key_value'] != "") {
        $jsondata = $result_get['key_value'];
    } else {
        $jsondata = variable_get('adconfig_android');
        $ttl = DEFAULT_REDIS_EXPIRE_TIME;
        $result_set = setRedis($redis_key, $jsondata, $ttl);
    }

    $obj = json_decode($jsondata, true);
    $return_obj = $obj;

    return $return_obj;
}

/**
 * [itg_rapid_api_adconfig_ipad] definition.
 * Returns the information about a itg_rapid_api_adconfig_ipad.
 * @param $token 
 * @return array 
 */
function itg_rapid_api_adconfig_ipad($token) {
    $redis_key = "itgd_rapid_adconfig_ipad";
    $result_get = getRedis($redis_key);

    if ($result_get['key_value'] != "") {
        $jsondata = $result_get['key_value'];
    } else {
        $jsondata = variable_get('adconfig_ipad');
        $ttl = DEFAULT_REDIS_EXPIRE_TIME;
        $result_set = setRedis($redis_key, $jsondata, $ttl);
    }

    $obj = json_decode($jsondata, true);
    $return_obj = $obj;

    return $return_obj;
}

/**
 * [itg_rapid_api_adconfig_iphone] definition.
 * Returns the information about a itg_rapid_api_adconfig_iphone.
 * @param $token 
 * @return array 
 */
function itg_rapid_api_adconfig_iphone($token) {
    $redis_key = "itgd_rapid_adconfig_iphone";
    $result_get = getRedis($redis_key);

    if ($result_get['key_value'] != "") {
        $jsondata = $result_get['key_value'];
    } else {
        $jsondata = variable_get('adconfig_iphone');
        $ttl = DEFAULT_REDIS_EXPIRE_TIME;
        $result_set = setRedis($redis_key, $jsondata, $ttl);
    }

    $obj = json_decode($jsondata, true);
    $return_obj = $obj;

    return $return_obj;
}

/**
 * [itg_rapid_api_adconfig_tab] definition.
 * Returns the information about a itg_rapid_api_adconfig_tab.
 * @param $token 
 * @return array 
 */
function itg_rapid_api_adconfig_tab($token) {
    $redis_key = "itgd_rapid_aadconfig_tab";
    $result_get = getRedis($redis_key);

    if ($result_get['key_value'] != "") {
        $jsondata = $result_get['key_value'];
    } else {
        $jsondata = variable_get('adconfig_tab');
        $ttl = DEFAULT_REDIS_EXPIRE_TIME;
        $result_set = setRedis($redis_key, $jsondata, $ttl);
    }

    $obj = json_decode($jsondata, true);
    $return_obj = $obj;

    return $return_obj;
}

/**
 * [itg_rapid_api_reset_password] definition.
 * Returns the information about a itg_rapid_api_reset_password.
 * @param $nid
 *   The nid of the housing_scheme node.
 * @return array
 * 	The node processed information array.
 */
function itg_rapid_api_reset_password($token) {
    $HTTP_RAW_POST_DATA;
    $method = "POST";
    $params = (array) json_decode(file_get_contents('php://input'), TRUE);
    // raw input validation
    $validation_error = array();
    $validation_error_str = "";
    $validation_error = validateResetPass($params);
    $validation_error_str = implode(", ", $validation_error['custom_error']);
    if ($validation_error_str) {
        $account_err['status_code'] = "0";
        $account_err['status_message'] = "$validation_error_str";
        return $account_err;
    }
    
    $url = SSO_SERVER_URL . "/appapi/check_user/" . $rand;
        $result = callAPI("GET", $url, $params);
        $result_obj = json_decode($result);
        //echo "hi";p($result_obj->uid);die();
        if (!$result_obj->uid) {
            $account_err['status_code'] = "0";
            $account_err['status_message'] = "Invalid User_ID";
            return $account_err;
        }
    
    $url = SSO_SERVER_URL . "/appapi/reset_password";
    $result = callAPI($method, $url, $params);
    $result_obj = json_decode($result);

    if ($result_obj->uid) {
        $local_obj = localResetPass($params, $result_obj->uid);
        itg_reset_pass_info_insert_rapid($params, 1);
        cleanToken_Rapid($params);
        $user_name = $params['user_id'];
        $user = user_load_by_name($user_name);

        watchdog('user', 'Session closed for %name.', array('%name' => $user->name));

        $original_session_state = drupal_save_session();
        drupal_save_session(TRUE);

        // Destroy the current session.
        module_invoke_all('user_logout', $user);
        session_destroy();

        // Load the anonymous user.
        $user = drupal_anonymous_user();

        drupal_save_session($original_session_state);
        deviceTokenReset_Rapid($params);
        $data['status_code'] = "1";
        $data['status_message'] = "password has been changed";
    } else {
        $data['status_code'] = "2";
        $data['status_message'] = "password has not been changed";
    }



    return $data;
}

// login serveice function start from here

/**
 * [itg_rapid_api_authtoken_verification] definition.
 * Returns the information about a itg_rapid_api_authtoken_verification.
 * @param $nid
 *   The nid of the housing_scheme node.
 * @return array
 * 	The node processed information array.
 */
function itg_rapid_api_authtoken_verification($token) {

    $HTTP_RAW_POST_DATA;
    //$params = $_POST;
    $params = (array) json_decode(file_get_contents('php://input'), TRUE);
    //p($params);die();

    $token = $params['auth_token'];
    $data = array();
    $method = "POST";
    $res = array();
    // login raw input validation
    $validation_error = array();
    $validation_error_str = "";
    $validation_error = authtokenValidation_rapid($params);
    $validation_error_str = implode(", ", $validation_error['custom_error']);
    if ($validation_error_str) {
        $account_err['status_code'] = "0";
        $account_err['status_message'] = "$validation_error_str";
        return $account_err;
    } else {
        $rand = rand();
        $url = SSO_SERVER_URL . "/appapi/check_user/" . $rand;
        $result = callAPI("GET", $url, $params);
        $result_obj = json_decode($result);
        //echo "hi";p($result_obj->uid);die();
        if (!$result_obj->uid) {
            $account_err['status_code'] = "0";
            $account_err['status_message'] = "Invalid User_ID";
            return $account_err;
        }
        if (!drupal_valid_token($token, 'services')) {
            $res['status_code'] = "0";
            $res['status_message'] = "invalid token";
        } else {
            $res['status_code'] = "1";
            $res['status_message'] = "";
        }
    }

    return $res;
}
