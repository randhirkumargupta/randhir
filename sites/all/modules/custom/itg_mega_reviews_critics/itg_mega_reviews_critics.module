<?php

/**
 * @file
 * The ITG Mega Reviews & Critics module.
 * Provides Mega Reviews & Critics functionality and customizations.
 */

/**
 * Implements hook_views_pre_render().
 *
 * {@inheritdoc}.
 */
function itg_mega_reviews_critics_views_pre_render(&$view) {
  switch ($view->name) {
    case 'movies_master':
      $header_content_mr = '<span class="count">Count(' . $view->total_rows . ')&nbsp;</span>';
      $header_content_mr .= l(t('Create Movie'), 'admin/structure/taxonomy/movies/add', array('query' => array('destination' => arg(0))));
      $view->attachment_before = $header_content_mr;

      break;

    case 'movie_review_list':
      $header_content = '<span class="count">Count (' . $view->total_rows . ') </span>';
      $header_content .= l(t('Create Mega Review & Critic'), 'node/add/mega-review-critic', array('query' => array('destination' => arg(0))));
      $view->attachment_before = $header_content;
      
      break;

    case 'celebrity_profile_list':
      $header_content = '<span class="count">Count (' . $view->total_rows . ') </span>';
      $header_content .= l(t('Create profile'), 'node/add/itg-celebrity-profile', array('query' => array('destination' => 'celebrity-profile-list')));
      $view->attachment_before = $header_content;
  }
}

/**
 * Implements hook_form_FORMID_alter().
 * {@inheritdoc}
 */
function itg_mega_reviews_critics_form_mega_review_critic_node_form_alter(&$form, &$form_state, $form_id) {
  $form['#after_build'][] = 'itg_mega_reviews_critics_form_after_build';
  $form['#validate'][] = 'itg_mega_reviews_node_form_custom_validate';
  $form['actions']['submit']['#submit'][] = 'itg_mega_reviews_critics_form_custom_callback';
  $form['actions']['itg_custom_button']['#submit'][] = 'itg_mega_reviews_critics_form_draft_callback';
}


/**
 * Implements hook_form_validate().
 * {@inheritdoc} 
 */
function itg_mega_reviews_node_form_custom_validate($form, &$form_state) {
  $lang = isset($form_state['values']['language']) ? $form_state['values']['language'] : LANGUAGE_NONE;
  foreach ($form_state['values']['field_mega_review_review'][$lang] as $key_time => $val_time) {
    if ($key_time === 'add_more')
      continue; // skip loop if key is add_more
    if (empty($val_time['field_story_reporter'][$lang][0]['target_id']) || !is_numeric($val_time['field_story_reporter'][$lang][0]['target_id'])) {
      form_set_error('field_mega_review_review][' . $lang . '][' . $key_time . '][field_story_reporter', t('Please enter valid Reviewer for row[' . ($key_time + 1) . ']'));
    }
  }
}

/**
 * After build for mega_review_critic_node_form form.
 * @param array $form
 * @param array $form_state
 * @return array
 */
function itg_mega_reviews_critics_form_after_build($form, &$form_state) {

  for ($i = 0; $i <= $form['field_mega_review_review']['und']['#max_delta']; $i++) {
    $count = $i + 1;
    $form['field_mega_review_review']['und'][$i]['#title'] = t('Review ') . $count;
  }
  
  $settings['storyid'] = isset($form['#node']->nid) ? $form['#node']->nid : 0;
  
  
  drupal_add_js(drupal_get_path('module', 'itg_mega_reviews_critics') . '/js/itg_mega_reviews_critics.js', array('weight' => 1, 'scope' => 'footer'));
  drupal_add_js(array('itg_mega_reviews_critics' => array('settings' => $settings)) , array('type' => 'setting'));

  return $form;
}

/**
 * Implements hook_form_FORMID_alter().
 * {@inheritdoc}
 */
function itg_mega_reviews_critics_form_views_exposed_form_alter(&$form, &$form_state, $form_id) {

  if ($form['#id'] == 'views-exposed-form-movie-review-list-page' || $form['#id'] == 'views-exposed-form-movie-review-list-page-1') {
    $form['title']['#autocomplete_path'] = 'content-title-list/mega_review_critic/autocomplete';
    $form['title']['#attributes'] = array('placeholder' => t('Title'));
    $form['nid']['#autocomplete_path'] = 'content-nid-list/mega_review_critic/autocomplete';
    $form['nid']['#attributes'] = array('placeholder' => t('Review ID'));
  }
  elseif ($form['#id'] == 'views-exposed-form-celebrity-profile-list-page') {
    $form['title']['#autocomplete_path'] = 'content-title-list/itg_celebrity_profile/autocomplete';
    $form['title']['#attributes'] = array('placeholder' => t('Name'));
    $form['nid']['#autocomplete_path'] = 'content-nid-list/itg_celebrity_profile/autocomplete';
    $form['nid']['#attributes'] = array('placeholder' => t('Profile ID'));
  }
}

/**
 * Custom submit callback for Mega reviews form.
 * @param array $form
 * @param array $form_state
 */
function itg_mega_reviews_critics_form_custom_callback($form, &$form_state) {
  if (isset($_SESSION['messages'])) {
    unset($_SESSION['messages']);
  }
  if (isset($_GET['destination'])) {
    unset($_GET['destination']);
  }

  if (arg(0) == 'node' && arg(1) == 'add' && arg(2) == 'mega-review-critic') {
    $op = 'created';
  }
  else {
    $op = 'updated';
  }

  $mega_title = $form_state['node']->title;

  drupal_set_message(t('Mega review <b>' . $mega_title . '</b> has been ' . $op . '.'));

  if ($form_state['node']->status == 0) {
    $form_state['redirect'] = 'movie-review-draft-list';
  }
  if ($form_state['node']->status == 1) {
    $form_state['redirect'] = 'movie-review-list';
  }
}

/**
 * Custom submit callback for Mega reviews form.
 * @param array $form
 * @param array $form_state
 */
function itg_mega_reviews_critics_form_draft_callback($form, &$form_state) {
  if (isset($_GET['destination'])) {
    unset($_GET['destination']);
  }
  
  $redirect_path = 'node/' . $form_state['values']['nid'] . '/edit?destination='.$_GET['destination'];   
  $_GET['destination'] = $redirect_path;
  
}

/**
 * Implements hook_block_info().
 * @return array
 */
function itg_mega_reviews_critics_block_info() {
  $blocks['mega_reviews_tab_form_block'] = array(
    'info' => t('Mega Reviews Form Tab Block'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  
  $blocks['mega_review_mobile_header'] = array(
    'info' => t('Mega review mobile header'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  return $blocks;
}

/**
 * Implements hook_block_view()
 * {@inheritdoc}
 */
function itg_mega_reviews_critics_block_view($delta = '') {
  $arg = arg();
  $block = array();
  switch ($delta) {
    case 'mega_reviews_tab_form_block':
      $block['content'] = theme('mega_reviews_tab_form_display_block', array('data' => ''));
      break;
    case 'mega_review_mobile_header':
      if(!empty($arg[1])) {
      $data = node_load($arg[1]);
      }
      $block['content'] = theme('mega_reviews_mobile_header_block', array('data' => array('node' => $data)));
      break;
  }
  return $block;
}

/**
 * Implements hook_theme().
 * {@inheritdoc}
 */
function itg_mega_reviews_critics_theme($existing, $type, $theme, $path) {
  $themes = array(
    'mega_reviews_tab_form_display_block' => array(
      'template' => 'mega-reviews-form-tab-template',
      'path' => drupal_get_path('module', 'itg_mega_reviews_critics') . '/templates',
      'variables' => array('data' => NULL),
    ),
    'mega_reviews_mobile_header_block' => array(
      'template' => 'mega-reviews-mobile-header-block-template',
      'path' => drupal_get_path('module', 'itg_mega_reviews_critics') . '/templates',
      'variables' => array('data' => NULL),
    ),
  );

  return $themes;
}

/**
 * Implements hook_views_api().
 *
 * {@inheritdoc}.
 */
function itg_mega_reviews_critics_views_api() {
  return array(
    'api' => 3,
  );
}

/**
 * Implements itg_get_megareview_company().
 * @param int $byline_id
 */
function itg_get_megareview_company($byline_id) {
  $company = '';
  if(!empty($byline_id) && function_exists('get_term_name_from_tid_for_report')) {
    $type_query = db_select('field_data_field_byline_company', 'bc');
    $type_query->fields('bc', array('field_byline_company_tid'));
    $type_query->condition('bc.entity_id', $byline_id, '=');
    $byline = $type_query->execute()->fetchField();
    if(function_exists('get_term_name_from_tid_for_report')) {
    $company = get_term_name_from_tid_for_report($byline);
    }
    return $company;
  }
}
