<?php

module_load_include('inc', 'itg_sso_reg', 'includes/itg_sso_mail');
module_load_include('inc', 'itg_sso_reg', 'includes/common_fn');
module_load_include('inc', 'itg_sso_reg', 'includes/sso_user_form');
module_load_include('inc', 'itg_common', 'includes/itg_common.helper');

/*
 * Implement hook_init
 */

function itg_sso_reg_init() {

  global $user;
  if (array_key_exists(FRONT_USER, $user->roles)) {
    $settings = array();
    if ($user->uid > 0) {

      $arg = arg(2);
    }

    if (!empty($arg)) {
      $fin = $arg;
    }
    else {
      $fin = arg(2);
    }


    $settings['uid'] = $user->uid ? $user->uid : 0;
    $settings['check_sso_url'] = $fin;
    drupal_add_js(array('itg_sso_login' => array('settings' => $settings)), array('type' => 'setting'));
    drupal_add_js(drupal_get_path('module', 'itg_sso_reg') . '/js/itg_sso_login.js');
  }
  drupal_add_js(drupal_get_path('module', 'itg_sso_reg') . '/js/itg_sso_popup.js');
}

/**
 * Implements hook_menu
 * 
 * {@inheritdoc}
 */
function itg_sso_reg_menu() {

  $items['signup'] = array(
    'title' => 'Sign up',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('itg_sso_reg_multistep_form'),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  $items['otpajaxcallback'] = array(
    'title' => 'Test form',
    'page callback' => 'itg_sso_reg_otp_callback',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  $items['user-activate/%'] = array(
    'title' => 'Activattion Form',
    'page callback' => 'itg_sso_user_activate_callback',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_theme().
 * {@inheritdoc}
 */
function itg_sso_reg_theme($existing, $type, $theme, $path) {
  $themes = array(
    'itg_sso_notification_mail' => array(
      'variables' => array('account' => NULL),
      'template' => 'templates/sso-notification-mail',
    )
  );

  return $themes;
}

/**
 * Implements hook_mail
 * @param string $key
 * @param string $message
 * @param array $params
 */
function itg_sso_reg_user_mail($key, &$message, $params) {
  switch ($key) {
    case 'send_mail_to_sso_user':
      $headers = array(
        'MIME-Version' => '1.0',
        'Content-Type' => 'text/html; charset=UTF-8; format=flowed; delsp=yes',
        'Content-Transfer-Encoding' => '8Bit',
        'X-Mailer' => 'Drupal'
      );
      $message['subject'] = $params['subject'];
      $message['body'][] = $params['body'];
      foreach ($headers as $key => $value) {
        $message['headers'][$key] = $value;
      }
      break;
  }
}

/**
 * Implements hook_form_alter().
 * {@inheritdoc}
 */
function itg_sso_reg_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'user_login' && !empty($_GET['ReturnTo'])) {
    array_unshift($form['#validate'], 'itg_sso_user_login_form_validate');
  }
}

/**
 * Implements itg_sso_user_login_form_validate().
 */
function itg_sso_user_login_form_validate(&$form, &$form_state) {
  $sso_role_id = itg_sso_get_user_id(trim($form_state['values']['name']));
  $sso_user = user_load($sso_role_id);
  if (!array_key_exists(FRONT_USER, $sso_user->roles)) {
    form_set_error('name', 'Invalid credentials !');
  }
}

/**
 * Get uid by name
 * @param sring $name
 */
function itg_sso_get_user_id($name) {
  $itg_query = db_select('users', 'su')
      ->fields('su', array('uid'))
      ->condition('name', $name, '=');
  $itg_result = $itg_query->execute()->fetchField();

  return $itg_result;
}
