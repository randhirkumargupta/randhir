<?php

/**
 * @file
 * The ITG miscellaneousn module.
 *
 * Provides common functionality and customizations.
 *
 */

/**
 * Implements hook_init.
 * {@inheritdoc}
 */
//function itg_miscellaneous_init() {
//  global $user;
//  //p(node_load(2540));
//}

/**
 * Implements hook_menu().
 * @return array $items
 */
function itg_miscellaneous_menu() {

  $items['itg-admin-layout-list'] = array(
      'page callback' => 'itg_layout_list_delete',
      'access arguments' => array('access administrator'),
      'type' => MENU_CALLBACK,
      'file' => 'includes/itg_miscellaneous.inc',
  );

  /*$items['itg-delete-layout/%'] = array(
      'page callback' => 'itg_layout_delete',
      'access arguments' => array('access administrator'),
      'type' => MENU_CALLBACK,
      'file' => 'includes/itg_miscellaneous.inc',
  );*/

  $items['section-widgets-list-delete'] = array(
      'page callback' => 'itg_section_widgets_list_delete',
      'access arguments' => array('access administrator'),
      'type' => MENU_CALLBACK,
      'file' => 'includes/itg_miscellaneous.inc',
  );

  $items['create-poll-table'] = array(
      'page callback' => 'create_poll_table',
      'access arguments' => array('access administrator'),
      'type' => MENU_CALLBACK,
      'file' => 'includes/itg_miscellaneous.inc',
  );

  $items['create-section-category-in-mongo'] = array(
      'page callback' => 'drupal_get_form',
      'page arguments' => array('create_section_category_in_mongo'),
      'access arguments' => array('access administrator'),
      'type' => MENU_CALLBACK,
      'file' => 'includes/itg_miscellaneous.inc',
  );
  $items['create-index-for-story-migration'] = array(
      'page callback' => 'create_index_xml',
      'access arguments' => array('access administrator'),
      'type' => MENU_CALLBACK,
      'file' => 'includes/itg_story_clean.inc',
  );
   $items['create-story-xml-clean'] = array(
      'page callback' => 'create_story_xml_clean',
      'access arguments' => array('access administrator'),
      'type' => MENU_CALLBACK,
      'file' => 'includes/itg_story_clean.inc',
  );
 
  $items['create-video-xml-clean'] = array(
      'page callback' => 'create_video_xml_clean',
      'access arguments' => array('access administrator'),
      'type' => MENU_CALLBACK,
      'file' => 'includes/itg_video_clean.inc',
  );
  
  $items['itg-related-content-migrate'] = array(
    'title' => 'api callback menu',
    'page callback' => 'itg_db_migrate_related_content',
    'access callback' => TRUE,
  );
  

  
  return $items;
}


function itg_db_migrate_related_content() {
  
  //code for XML read  
  $xml_dir = 'test-related-story/';
  
  $path_xml = 'sites/default/files/migrate/xml_file/'.$xml_dir;
  
  
  foreach (new RecursiveIteratorIterator(new RecursiveDirectoryIterator($path_xml)) as $filename) {
    
    $file_name = $filename->getFilename();
    
    if ($file_name == '.' || $file_name == '..') {
      continue;
    }
    
    $xml_data = simplexml_load_file($path_xml . $file_name, 'SimpleXMLElement');
    
    $c_type = '';
    
    foreach ($xml_data->relatedcontents as $xml) {      
      $content_id = get_itg_destination_id('migrate_map_itgstorylist', (int) $xml->id);
      if (!empty($content_id)) {
        $related_content_with_title_val = '';
        $related_content_val = '';
        $content_revision_id = get_node_revision_id($content_id);
        
        foreach ($xml->relatedcontent as $relatedcontent_data) {

          $relatedcontent_type = (string) $relatedcontent_data->relatedcontenttype;

          if ($relatedcontent_type == 'text') {
            $relatedcontentid = get_itg_destination_id('migrate_map_itgstorylist', (int) $relatedcontent_data->relatedcontentid);
            $c_type = 'Story';
          } else if ($relatedcontent_type == 'photo') {
              $relatedcontentid = get_itg_destination_id('migrate_map_itgphotogallery', (int) $relatedcontent_data->relatedcontentid);
              $c_type = 'photogallery';
          } else if ($relatedcontent_type == 'video') {
              $relatedcontentid = get_itg_destination_id('migrate_map_itgvideogallery', (int) $relatedcontent_data->relatedcontentid);
              $c_type = 'Video';
          }        

          //$ordering = (string) $relatedcontent_data->ordering;
          //$featured_content = (string) $relatedcontent_data->featuredcontent;
          if (!empty($relatedcontentid)) {            
            $relatedcontenttitle = (string) $relatedcontent_data->relatedcontenttitle;
            $related_content_val .= 'IT_'.$relatedcontentid.',';
            //$related_content_with_title_val .= 'IT_'.$relatedcontentid.'@'.$c_type.'@'.$relatedcontenttitle.'!#!';
            $related_content_with_title_val .= 'IT_'.$relatedcontentid.'@'.$c_type.'@'.$relatedcontenttitle.',';
          } else {
              //failed related content
              db_insert('itg_not_migrated_content')->fields(array(
                'xml_content_id' => $content_id ,
                'related_content_xml_id' => (int) $relatedcontent_data->relatedcontentid ,
                'xml_name' => $file_name ,
                'c_type' => $c_type))->execute();
          }
          
        }
        if (!empty($related_content_val)) {
          $related_content_insert_val =  rtrim($related_content_val,',');
          $related_content_insert_title_val =  rtrim($related_content_with_title_val,',');

          //insert data in Related Content field
          itg_data_insert_in_field($content_id, $content_revision_id, 'field_common_related_content', 'story', $related_content_insert_val);
          itg_data_insert_in_field($content_id, $content_revision_id, 'field_cm_related_content_detail', 'story', $related_content_insert_title_val);
          echo $content_id.'</br>';//update content id 
        }
        
      } else {
         //not update related content
         db_insert('itg_not_update_related_content')->fields(array(
          'xml_content_id' => $content_id ,
          'xml_name' => $file_name ,
          'c_type' => 'story'))->execute();
      }
      
      
    }
    
  }
  
    
}

function itg_data_insert_in_field($nid, $revision_id, $field_name, $bundle, $data) {

  /*db_insert('field_data_'.$field_name)->fields(array(
    'entity_type' => 'node' ,
    'bundle' => $bundle ,
    'deleted' => 0 ,
    'entity_id' => $nid ,
    'revision_id' => $revision_id,
    'language' => 'und',
    'delta' => 0,
    $field_name.'_value' => $data))->execute();
  
  db_insert('field_revision_'.$field_name)->fields(array(
    'entity_type' => 'node' ,
    'bundle' => 'story' ,
    'deleted' => 0 ,
    'entity_id' => $nid ,
    'revision_id' => $revision_id,
    'language' => 'und',
    'delta' => 0,
    $field_name.'_value' => $data))->execute();*/
  
 // db_delete('field_data_'.$field_name)->condition('entity_id', $nid)->execute();
 // db_delete('field_revision_'.$field_name)->condition('entity_id', $nid)->execute();
}


/**
 * get new content id of itg by old content id
 * @param int $sourceid
 * @return int destination id
 */
function get_node_revision_id($nid) {
  $query = db_select('node', 'n');
  $query->fields('n', array('vid'));  
  $query->condition('nid', $nid);
  
  return $query->execute()->fetchField();
}
