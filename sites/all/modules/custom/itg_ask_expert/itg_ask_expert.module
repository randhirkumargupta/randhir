<?php

/**
 * @file
 * The ITG Ask an Expert module.
 *
 * Contains functionality related to Ask an Expert.
 *
 */

/**
 * Implements hook_theme().
 */
function itg_ask_expert_theme($existing, $type, $theme, $path) {
  $themes = array(
      'ask_an_expert_node_form' => array(
      'arguments' => array('form' => NULL),
      'template' => 'ask-an-expert-node-form',
      'path' => drupal_get_path('module', 'itg_ask_expert') . '/templates',
      'render element' => 'form',
    ),
  );

  return $themes;
}

/**
 * Implement hook_form_alter
 * @param Array $form
 * @param Array $form_state
 * @param string $form_id
 */
function itg_ask_expert_form_alter(&$form, &$form_state, $form_id){
     global $user;
  $user_fields = user_load($user->uid);
  if ($form_id == 'ask_an_expert_node_form') {
    
   //code to hide source field
   if ($user->uid != '1') {
      $form['field_user_source_term_id']['#access'] = FALSE;
    }
    // hide message box in add condition
    if(empty($form['nid']['#value']) && $user->uid != '1') {
      $form['field_user_message']['#access'] = FALSE;
    }
    // check if user is logged in auto fill email
    if ($user->uid && $form['#node']->nid == '') {
     $form['field_user_email'][LANGUAGE_NONE][0]['value']['#value'] = $user->mail;
     $form['field_user_name'][LANGUAGE_NONE][0]['value']['#value'] = $user_fields->field_first_name['und']['0']['value'];
    }
    
    if (!empty($form['nid']['#value'])) {
     $form['title']['#attributes']['disabled'] = TRUE;
     $form['field_user_name'][LANGUAGE_NONE]['0']['value']['#attributes']['disabled'] = TRUE;
     $form['field_user_email'][LANGUAGE_NONE]['0']['value']['#attributes']['disabled'] = TRUE;
     $form['field_user_city'][LANGUAGE_NONE]['0']['value']['#attributes']['disabled'] = TRUE;
     $form['field_user_state'][LANGUAGE_NONE]['0']['value']['#attributes']['disabled'] = TRUE;
     //$form['field_disclose_your_identity'][LANGUAGE_NONE]['1']['#attributes']['disabled'] = TRUE;
     $form['field_disclose_your_identity']['#disabled'] = TRUE;
        }
    
   // set term_id from url in hidden field 
    $form['field_user_source_term_id'][LANGUAGE_NONE][0]['value']['#value'] = 130; //147
    $form['actions']['submit']['#value'] = 'Submit';
    $form['#after_build'][] = 'itg_ask_expert_after_build';
    $form['actions']['submit']['#submit'][] = 'itg_ask_expert_form_custom_callback';
    $destination = 'ask-an-expert';
    if (!empty($node->nid)) {
      $form['actions']['cancel'] = array(
        '#markup' => l(t('Cancel'), $destination, array('attributes' => array('class' => 'button'))),
        '#weight' => 21,
        '#value' => t('Cancel'),
      );
    }
  } 
      
      
}


/**
 * Implements hook_node_access.
 * Check access for forum menu item.
 * @param type $node
 * @param type $op
 * @param type $account
 */
function itg_ask_expert_node_access($node, $op, $account) { 
  if (isset($node->type) && $node->type == 'ask_an_expert' && $node->field_user_message[LANGUAGE_NONE][0]['value'] != '') {
   if ($op == 'update') {
     return NODE_ACCESS_DENY; 
   }        
  }
  return NODE_ACCESS_IGNORE;
}

/**
 * Implement hook_after_build
 * @param Array $form
 * @param Array $form_state
 */
function itg_ask_expert_after_build($form, &$form_state) {
  
  global $user, $base_url;
  // update automatic alias name
  $form['path']['pathauto']['#title'] = 'Generate automatic Sef URL';
  //Unset metatag description
  unset($form['metatags']['intro_text']['#markup']);
  unset($form['metatags']['#description']);
  $settings = array();
  $settings['base_url'] = $base_url;
  $settings['uid'] = $user->uid;
  drupal_add_js(array('itg_ask_expert' => array('settings' => $settings)), array('type' => 'setting'));
  drupal_add_js(drupal_get_path('module','itg_ask_expert').'/js/itg_ask_expert.js');
  return $form;
}

/**
 * Custom submit callback for redirecting breaking news form.
 */
function itg_ask_expert_form_custom_callback($form, &$form_state) {
  global $user, $base_url;

  if ($user->uid != '1') {
    $redirect_url = end(explode('/', $form['#action']));
    $final_url = 'content/' . $redirect_url;

    if (isset($_SESSION['messages'])) {
      unset($_SESSION['messages']);
    }
    if (empty($form['nid']['#value'])) {
      $_SESSION['ask_an_expert_message'] = 'Your query has been successfully submitted, our expert will reply you back soon.';
    }
    else {
      drupal_set_message(t('Message updated successfully.'));
    }


    $form_state['redirect'] = $final_url;
  }
}

/**
 * Implement hook_views_pre_render
 * @param Array $view
 */
function itg_ask_expert_views_pre_render(&$view) {

  // add link for in queue and history
  if ($view->name == "ask_an_expert" && $view->current_display != 'page_1') {
    $header_content_ask_an_expert = '<span class="count">Count('.$view->total_rows.')&nbsp;</span>';
    $view->attachment_before = $header_content_ask_an_expert;
  }
    
  // check condition for ask an expert view display
  if ($view->name == 'ask_an_expert' && $view->current_display == 'page_1') {

    foreach ($view->result as $chkvalue) {
      
      if (!array_filter($chkvalue->field_field_disclose_your_identity)) {

        $chkvalue->field_field_user_name[0]['rendered']['#access'] = FALSE;
        $chkvalue->field_field_user_email[0]['rendered']['#access'] = FALSE;
      }
    }
  }
}


/**
 * Implement hook_form_views_exposed_form_alter
 * @param Array $form
 * @param Array $form_state
 */
function itg_ask_expert_form_views_exposed_form_alter(&$form, &$form_state, $form_id)
{
//Get the Form Id
    if ($form["#id"] == 'views-exposed-form-ask-an-expert-page' || $form['#id'] == 'views-exposed-form-ask-an-expert-page-2') {
        $form['#after_build'][] = 'itg_breaking_news_views_exposed_after_build';
        $form['title']['#autocomplete_path'] = 'content-title-list/ask_an_expert/autocomplete';
        $form['title']['#attributes'] = array('placeholder' => t('Question'));
    }
}

/**
 * Implements hook_node_insert
 * @param Array $node
 */
function itg_ask_expert_node_insert($node) {

  if ($node->type == 'ask_an_expert') {

    // get term id to fetch all role related to term id
    $term_id = $node->field_user_source_term_id[LANGUAGE_NONE][0]['value'];
    
    $expert_arr = itg_expert_mail($term_id);

    $mail_content = itg_ask_expert_get_mail_content($node);
    $params = array(
      'body' => $mail_content,
      'subject' => 'India Today | New Query Received!',
    );

    $to = implode(',', $expert_arr);

    $mail = drupal_mail('itg_ask_expert', 'send_mail_to_expert', $to, language_default(), $params, 'no-reply@kelltontech.com', TRUE);
    if ($mail['result']) {
      return TRUE;
    }
    else {
      $error_msg = 'Failed to send the email!';
      watchdog('canvas-email', $error_msg, array(), WATCHDOG_ALERT);
      return FALSE;
    }
  }
}

/**
 * Send mail to expert, when query is received
 * @global String $base_url
 * @param String $key
 * @param String $message
 * @param Array $entity
 */
function itg_ask_expert_mail($key, &$message, $params) {
  switch ($key) {
    case 'send_mail_to_expert':
      $headers = array(
        'MIME-Version' => '1.0',
        'Content-Type' => 'text/plain; charset=UTF-8; format=flowed; delsp=yes',
        'Content-Transfer-Encoding' => '8Bit',
        'X-Mailer' => 'Drupal'
      );
      $message['subject'] = $params['subject'];
      $message['body'][] = $params['body'];
      foreach ($headers as $key => $value) {
        $message['headers'][$key] = $value;
      }
      break;
  }
}

/**
 * Get Mail content
 * @global String $base_url
 * @param Array $node
 * @return string
 */
function itg_ask_expert_get_mail_content($node) {
  
  global $base_url;
  
  $uname = $node->field_user_name[LANGUAGE_NONE][0]['value'];
  $uemail = $node->field_user_email[LANGUAGE_NONE][0]['value'];
  $ucity = $node->field_user_city[LANGUAGE_NONE][0]['value'];
  $ustate = $node->field_user_state[LANGUAGE_NONE][0]['value'];
  $question = $node->title;

  $content = '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"> 
<html xmlns:v="urn:schemas-microsoft-com:vml">
<head>
    <title></title>
</head>
<body style="margin:0; padding:0;">
      <table cellpadding="0" cellspacing="0" width="760" align="center"><tr><td>Hi Team,</td></tr>
      <tr><td></td></tr>
      <tr><td>New Query has been received, please find below detail.</td></tr>
      <tr><td></td></tr>
      <tr><td>Question: ' . $question . '</td></tr>
      <tr><td>Name: ' . $uname . '</td></tr>
      <tr><td>Email: ' . $uemail . '</td></tr>
      <tr><td>City: ' . $ucity . '</td></tr>
      <tr><td>State: ' . $ustate . '</td></tr>
      <tr><td></td></tr>
      <tr><td>Thanks,</td></tr>
      <tr><td>India Today Team</td></tr></table>
</body></html>';

  return $content;
}

/**
 * Fetch expert mail based on term id
 */
function itg_expert_mail($get_term_id) {

  $itg_query = db_select('field_data_field_user_section', 's');
  $itg_query->fields('s', array('entity_id', 'field_user_section_tid'));
  $itg_query->fields('u', array('mail', 'name'));
  $itg_query->condition('s.field_user_section_tid', $get_term_id, '=');
  $itg_query->join('users', 'u', 's.entity_id = u.uid');
  $itg_expert_role_arr = $itg_query->execute()->fetchAll();

  foreach ($itg_expert_role_arr as $expert_mail_arr) {
    $itg_final_mail[] = $expert_mail_arr->mail;
  }
  return $itg_final_mail;
}


/**
 * Implements function to fetch node body based on nid
 * @param $nid
 * $return 
 */
function itg_ask_expert_description_check($nid) {
  $result = db_select('field_data_field_user_message', 'fdm')
          ->fields('fdm', array('field_user_message_value','entity_id'))
          ->condition('entity_id', $nid, '=')
          ->execute()->fetchAssoc();

  return $result['entity_id'];
}