<?php
/**
 * @file
 *
 * Purpose: ITG social media integration module.
 */
// Load form.inc file

require "vendor/autoload.php";
use Abraham\TwitterOAuth\TwitterOAuth;

module_load_include('inc', 'itg_social_media', 'includes/itg_social_media.form');



/**
 * Implement hook_permissions()
 */
function itg_social_media_permission() {
  return array(
    'administer itg_social_media edit_content settings' => array(
      'title' => t('Edit social media section'),
      'description' => t('Using this permission user can edit social media part of any node.'),
    ),
  );
}

/**
 * Implements hook_form_alter()
 * {@inheritdoc}
 */
function itg_social_media_form_views_exposed_form_alter(&$form, &$form_state, $form_id) {
  if (isset($form['created']['min'])) {
    $form['created']['min'] = array(
      '#title' => t('Start Date'),
      '#type' => 'date_popup',
      '#date_format' => 'd/m/Y',
      '#date_year_range' => '-3:+3',
    );
    $form['created']['max'] = array(
      '#title' => t('End Date'),
      '#type' => 'date_popup',
      '#date_format' => 'd/m/Y',
      '#date_year_range' => '-3:+3',
    );
  }
}

/**
 * Implements hook_block_info()
 *
 * {@inheritdoc}
 */
function itg_social_media_block_info() {
  $block = array();
  $block['social_media_form'] = array(
    'info' => t('Social Media Integration'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  return $block;
}

/**
 * Implements hook_block_view()
 * {@inheritdoc}
 */
function itg_social_media_block_view($delta = '') {  
  $block = array();
  $arg = arg();
  $c_type = itg_social_media_node_type(check_plain($arg[1]));
  $nid = check_plain($arg[1]);
  switch ($delta) {
    case 'social_media_form':
      $block = array(
        'subject' => t('Social media Integration'),
        'content' => drupal_get_form('itg_social_media_form', $c_type, $nid),
      );

      break;
  }
  
  return $block;
}

/**
 * get type of the node from nid.
 *
 * @param int $nid
 * @return string
 */
function itg_social_media_node_type($nid) {
  $itg_query = db_select('node', 'n');
  $itg_query->fields('n', array('type'))
      ->condition('nid', $nid);
  $itg_result = $itg_query->execute()->fetchField();

  return $itg_result;
}

/**
 * Set file status to permanant after save.
 * @global stdObject $user
 * @param int $fid
 */
function itg_social_media_perm_file($fid) {
  global $user;
  // Load the file via file.fid.
  $file = file_load($fid);
  // Change status to permanent.
  $file->status = FILE_STATUS_PERMANENT;
  // Save.
  file_save($file);
  // Record that the module (in this example, user module) is using the file. 
  file_usage_add($file, 'user', 'user', $user->uid);
}


/**
 * Implements hook_form_submit()
 *
 * {@inheritdoc}
 */
function itg_social_media_form_submit($form, &$form_state) {
  $node = node_load($form_state['values']['nid']);
  
  // Facebook Image
  if ($form_state['values']['itg_fb_img'] != 0) {
    itg_social_media_perm_file($form_state['values']['itg_fb_img']);
  }
  
  // Facebook video
  if ($form_state['values']['itg_fb_video'] != 0) {
    itg_social_media_perm_file($form_state['values']['itg_fb_video']);
  }
  // field_story_facebook_video  
  if ($form_state['values']['itg_fb_video'] != 0) {
    $node->field_story_facebook_video['und'][0]= array(
      'fid' => $form_state['values']['itg_fb_video'],
      'display' => 1,
      'description' => ''
    );
  }
  else {
    unset($node->field_story_facebook_video['und']);
    $path = file_create_url($node->field_story_facebook_video['und'][0]['uri']);
    if ($path != '') {
      unlink($path);
    }
  }
  
  // Change field value     
  foreach ($form_state['values']['itg_smi'] as $value) {
    if ($value != '0') {
      $data[]['value'][$value] = $value;
    }
  }

  // Social Media integration field
  $node->field_story_social_media_integ['und'] = $data;

  // Facebook narrative field
  if ($form_state['values']['itg_facebook_narrative'] != '') {
    $node->field_story_facebook_narrative['und'][0]['value'] = $form_state['values']['itg_facebook_narrative'];
  }
  else {
    unset($node->field_story_facebook_narrative['und']);
  }

  // Facebook Image field
  if ($form_state['values']['itg_fb_img'] != 0) {
    $node->field_story_facebook_image['und'][0]['fid'] = $form_state['values']['itg_fb_img'];
  }
  else {
    unset($node->field_story_facebook_image['und']);
    $path = file_create_url($node->field_story_facebook_image['und'][0]['uri']);
    if ($path != '') {
      unlink($path);
    }
  }  
  if ($form_state['values']['field_story_posted_by_facebook'] != '') {
    $node->field_story_posted_by_facebook['und'][0]['value'] = $form_state['values']['field_story_posted_by_facebook'];
    $node->field_story_time_facebook['und'][0]['value'] = $form_state['values']['field_story_time_facebook'];
  }
  // Twitter additional fields
  if ($form_state['values']['field_story_posted_by_twitter'] != '') {
    $node->field_story_posted_by_twitter['und'][0]['value'] = $form_state['values']['field_story_posted_by_twitter'];
    $node->field_story_time_twitter['und'][0]['value'] = $form_state['values']['field_story_time_twitter'];
    
    // Call twitter login function
    $CONSUMER_KEY_LOCAL = 'ZrAM49Mh50YKRxRTtLY1mP1jE';
    $CONSUMER_SECRET_LOCAL = 'GBNz25BRuSYcNJiWyTtsBSCrb6mDWNxtZrK4EHm0tmjB54Zpzi';
    $OAUTH_TOKEN_LOCAL = '732461289138585601-yKseoi32vL9UTfoHmRt80cl5awdnLE4';
    $OAUTH_TOKEN_SECRET_LOCAL = 'IBqZLZfohV5yz3xcXTTU8h9X6bZBqg3IRkUV3wiyN1aUI';
    // Include common helper file to get constant values
    $connection = new TwitterOAuth($CONSUMER_KEY_LOCAL, $CONSUMER_SECRET_LOCAL, $OAUTH_TOKEN_LOCAL, $OAUTH_TOKEN_SECRET_LOCAL);
    $content = $connection->get("account/verify_credentials");  
    $file = file_load($form_state['values']['itg_twitter_img']);
    $path = drupal_realpath($file->uri);  
    $media1 = $connection->upload('media/upload', ['media' => $path]);
    $bit_url = shorten_url($node->path['alias'], 'bit.ly');
    watchdog('bit.ly Url', $bit_url);
    $parameters = [
        'status' => $form_state['values']['itg_twitter_narrative'].' '.$bit_url,
        'media_ids' => $media1->media_id_string
    ];
    $result = $connection->post('statuses/update', $parameters);      
    // Twitter code ends here 
    
  }
  // TWITTER IMAGE
  if ($form_state['values']['itg_twitter_img'] != 0) {    
    itg_social_media_perm_file($form_state['values']['itg_twitter_img']);
  }

  // Twitter narrative
  if ($form_state['values']['itg_twitter_narrative'] != '') {
    $node->field_story_tweet['und'][0]['value'] = $form_state['values']['itg_twitter_narrative'];
  }
  else {
    unset($node->field_story_tweet['und']);
  }

  // Twitter Image field
  if ($form_state['values']['itg_twitter_img'] != 0) {
    $node->field_story_tweet_image['und'][0]['fid'] = $form_state['values']['itg_twitter_img'];
  }
  else {
    unset($node->field_story_tweet_image['und']);
    $path = file_create_url($node->field_story_tweet_image['und'][0]['uri']);
    if ($path != '') {
      unlink($path);
    }
  }  
  node_save($node);
}