<?php

/**
 * @file
 * The ITG Flag module.
 *
 * Contains functionality for Flag.
 */

/**
 * Tmplements hook_init()
 */
function itg_flag_init() {
  global $user, $base_url;  
  $settings['base_url'] = $base_url;
  $settings['uid'] = $user->uid;
  if (isset($_GET['referral_key']) && !empty($_GET['referral_key'])) {
    $_SESSION['referral_key'] = check_plain($_GET['referral_key']);
    drupal_add_js('jQuery(document).ready(function() {                  
                 jQuery(".register-icon").trigger("click");             
          });', array('type' => 'inline', 'scope' => 'footer'));
  }
  
  drupal_add_js(array('itg_flag' => array('settings' => $settings)), array('type' => 'setting'));
  drupal_add_js(drupal_get_path('module', 'itg_flag') . '/js/itg_flag.js', array('weight' => 1));
}

/**
 * Implements hook_menu().
 * @return array
 */
function itg_flag_menu() {
  $items['flag-details-ajax'] = array(
    'page callback' => 'itg_flag_details',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements itg_flag_details
 */
function itg_flag_details() {
  global $user;
  $nd_id = $_POST['nd_id'];
  $typ = $_POST['typ'];
  $dtag = $_POST['dtag'];
  if(isset($_COOKIE['likeDislike'."_".$nd_id])) {
    $response = array('error' => 'error', 'nd_id' => $nd_id);
    print json_encode($response);
  }
  else
  {
  $pre_count = itg_flag_get_count($nd_id, $typ);
  $nid = itg_flag_get_nid($nd_id);
  if (!empty($pre_count)) {
    $pre_count = $pre_count + 1;
  }
  else {
    $pre_count = 1;
  }
  if (!empty($nid)) {
    itg_flag_upd_count($nd_id, $typ, $pre_count);
    if (in_array('Front User', $user->roles) && $typ == 'like_count') {
      itg_loyalty_reward_earnpoint($nd_id, 'like', $user->uid);
    }
  }
  if (empty($nid)) {
    itg_flag_insert_count($nd_id, $typ, $pre_count);
    if (in_array('Front User', $user->roles) && $typ == 'like_count') {
      itg_loyalty_reward_earnpoint($nd_id, 'like', $user->uid);
    }
  }
  if ($dtag != 'undefined') {
      if ($dtag == 'sty') {
        $response = array('type' => $typ, 'count' => $pre_count, 'nd_id' => $nd_id, 'chk' => 'sty');
      }
      if ($dtag == 'dsty') {
        $response = array('type' => $typ, 'count' => $pre_count, 'nd_id' => $nd_id, 'chk' => 'dsty');
      }
    }
    else {
      $response = array('type' => $typ, 'count' => $pre_count, 'nd_id' => $nd_id);
    }
    print json_encode($response);
  }
}

/**
 * Get count value by passing nid.
 * @param int $nid
 * @param string $type
 */
function itg_flag_get_count($nid, $type) {
  $flag_check = db_select('itg_custom_flag_count', 'fg')->fields('fg', array($type));
  $flag_check->condition('nid',$nid ,'=');
  $flag_check->orderBy('id', 'DESC');//ORDER BY created
  $flag_check ->range(0,1);  
  $result = $flag_check->execute()->fetchfield();
  return $result;
}

/**
 * insert value of flag count in db.
 * @param int $nid
 * @param string $type
 * @param string $val
 */
function itg_flag_insert_count($nid, $type, $val) {
  $active = db_insert('itg_custom_flag_count')
      ->fields(array(
        'nid' => $nid,
        $type => $val,
        'created' => date('Y-m-d G:i:s'),
      ))
      ->execute();
  $expire=time()+60*60*24*30;
  setcookie("likeDislike"."_".$nid, "likeDislike"."_".$nid, $expire);
}


/**
 * Implement itg_flag_upd_count
 * @param int $nid
 * @param string $type
 * @param string $val
 */
function itg_flag_upd_count($nid, $type, $val) {

    $flag_upd = db_update('itg_custom_flag_count');
    $flag_upd->condition('nid', $nid, '=');
    $flag_upd ->fields(array(
      $type => $val,
      'created' => date('Y-m-d G:i:s'),
    ));
    
    $flag_upd->execute();
    
    $expire=time()+60*60*24*30;
    setcookie("likeDislike"."_".$nid, "likeDislike"."_".$nid, $expire);
}


/**
 * Get nid value by passing id.
 * @param int $nid
 * @param string $type
 */
function itg_flag_get_nid($nid) {
  $nid_check = db_select('itg_custom_flag_count', 'fg')->fields('fg', array('nid'));
  $nid_check->condition('nid',$nid ,'=');
  $nid_check->orderBy('id', 'DESC');//ORDER BY created
  $nid_check ->range(0,1);  
  $result = $nid_check->execute()->fetchfield();
  return $result;
}