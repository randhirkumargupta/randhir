<?php

/**
 * Implementation of hook_menu().
 * 
 * {@inheritdoc}
 */
module_load_include('inc' , 'itg_seo' , 'includes/itg_seo_rich_snippet');
module_load_include('inc' , 'itg_seo' , 'includes/itg_redirect_url');
module_load_include('inc' , 'itg_seo' , 'includes/itg_sef_redirect_url');

function itg_seo_menu() {
  $items['itg-access-denied'] = array(
    'title' => t('Access Denied') ,
    'page callback' => 'itg_access_denied' ,
    'access callback' => TRUE ,
    'type' => MENU_CALLBACK ,
  );
  $items['itg-not-found'] = array(
    'title' => t('Not Found') ,
    'page callback' => 'itg_not_found' ,
    'access callback' => TRUE ,
    'type' => MENU_CALLBACK ,
  );


  return $items;
}

/**
 * Call template file for access denied page
 * 
 * @return array
 */
function itg_access_denied() {
  return theme('itg_access_denied');
}

/**
 * Call template file for not found page
 * 
 * @return array
 */
function itg_not_found() {
  if (function_exists(itg_seo_latest_headlines)) {
    $latest_headlines = itg_seo_latest_headlines();
  }
  return theme('itg_not_found' , array('data' => $latest_headlines));
}

/**
 * Implements hook_theme().
 *
 * {@inheritdoc}.
 */
function itg_seo_theme() {
  $themes = array(
    'itg_access_denied' => array(
      'template' => 'itg-seo-access-denied' ,
      'path' => drupal_get_path('module' , 'itg_seo') . '/templates' ,
    ) ,
    'itg_not_found' => array(
      'template' => 'itg-seo-not-found' ,
      'path' => drupal_get_path('module' , 'itg_seo') . '/templates' ,
      'variables' => array('data' => NULL) ,
    ) ,
  );

  return $themes;
}

/**
 * Implements hook_form_alter().
 * {@inheritdoc}
 */
function itg_seo_form_alter(&$form , &$form_state , $form_id) {
  global $user;

  if ($form_id == 'event_registration_node_form') {
    $form['#after_build'][] = 'event_registration_extra_element_hide';
  }
  // Extra meta tags element hide from form
  if ($form_id == 'mega_review_critic_node_form' || $form_id == 'story_node_form' || $form_id == 'itg_celebrity_profile_node_form' || $form_id == 'blog_node_form' || $form_id == 'podcast_node_form' || $form_id == 'videogallery_node_form' || $form_id == 'photogallery_node_form' || $form_id == 'breaking_news_node_form' || $form_id == 'reporter_node_form' || $form_id == 'recipe_node_form' || $form_id == 'cooking_tips_node_form' || $form_id == 'food_news_node_form' || $form_id == 'astro_node_form' || $form_id == 'live_tv_integration_node_form' || $form_id == 'ask_an_expert_node_form' || $form_id == 'event_configurations_node_form' || $form_id == 'event_backend_node_form' || $form_id == 'issue_node_form' || $form_id == 'supplement_node_form' || $form_id == 'newsletter_node_form' || $form_id == 'magazine_node_form' || $form_id == 'heighlights_node_form' || $form_id == 'survey_node_form' || $form_id == 'quiz_node_form' || $form_id == 'page_node_form' || $form_id == 'poll_node_form' || $form_id == 'sponsor_node_form' || $form_id == 'itg_funalytics_node_form') {
    if (!array_key_exists(ADMINISTRATOR , $user->roles)) {
      $form['#after_build'][] = 'itg_meta_tags_extra_element_hide';
    }
  }
  // Hide extra metatags on taxonomies.
  if ($form_id == 'taxonomy_form_term' &&
      ($form['#vocabulary']->machine_name == 'category_management' ||
      $form['#vocabulary']->machine_name == 'movies')) {
    if (!array_key_exists(ADMINISTRATOR , $user->roles)) {
      $form['#after_build'][] = 'itg_meta_tags_extra_element_hide';
    }
  }

  if ($form_id == 'syndication_client_node_form' || $form_id == 'syndication_rule_node_form' || $form_id == 'syndication_feed_from_pattern_node_form' || $form_id == 'ads_management_node_form' || $form_id == 'task_idea_allocation_tracking_node_form' || $form_id == 'ugc_node_form' || $form_id == 'notification_node_form' || $form_id == 'coupon_node_form') {
    //$form['additional_settings']['#access'] = FALSE;
    $form['#after_build'][] = 'itg_additional_settings_element_hide';
  }
}

function itg_seo_mb_substr($str , $start , $end) {
  return mb_substr($str , $start , $end - $start);
}

/**
 * Extra meta tags element hide from form
 * @param array $form
 * @param array $form_state
 * @return array
 */
function itg_meta_tags_extra_element_hide($form , &$form_state) {
  
  if (isset($form['#vocabulary']->machine_name) && $form['#vocabulary']->machine_name == 'movies') {
    unset($form['relations']['#title']);
    unset($form['metatags']['#title']);
    unset($form['metatags']['#title']);
  }
  drupal_add_js(drupal_get_path('module' , 'itg_common') . '/js/itg_metatags.js' , array('scope' => 'footer'));
  unset($form['additional_settings']['group']['#groups']['additional_settings'][5]['#description']);
  unset($form['metatags']['intro_text']['#markup']);

  // Add code after metatag updation
  unset($form['metatags'][LANGUAGE_NONE]['basic']['#title']);
  unset($form['metatags'][LANGUAGE_NONE]['basic']['#description']);

  $arr_seo_heading_not_req = array('event_backend_node_form' , 'issue_node_form' , 'supplement_node_form' , 'magazine_node_form' , 'survey_node_form' , 'quiz_node_form');
  if (!in_array($form['#form_id'] , $arr_seo_heading_not_req)) {
    $form['path']['#prefix'] = '<h2 class="story-title">' . t('SEO Meta Tags') . '</h2>';
  }

  return $form;
}

/**
 * Implements 
 * itg_seo_latest_headlines()
 */
function itg_seo_latest_headlines() {
  $query = db_select('node' , 'n')
      ->fields('n' , array('title' , 'nid'))
      ->condition('n.status' , 1)
      ->condition('n.type' , 'story')
      ->range(0 , 4)
      ->orderBy('n.created' , 'DESC');
  $result = $query->execute()->fetchAll();
  $headlines = array();
  foreach ($result as $key => $val) {
    $headlines[$val->nid] = $val->title;
  }
  return $headlines;
}

/**
 * Extra meta tags element hide from form
 * @param array $form
 * @param array $form_state
 * @return array
 */
function itg_additional_settings_element_hide($form , &$form_state , $form_id) {
  global $user;
  if ($user->uid != '1') {
    drupal_add_js('jQuery(document).ready(function() {              
              jQuery(".vertical-tabs-list").hide();
              jQuery(".form-item-menu-enabled").hide();
              jQuery(".form-item-path-alias").hide();              
              jQuery(".form-item-path-pathauto").hide();  
            });' , array('type' => 'inline' , 'scope' => 'footer'));
  }
  return $form;
}

/**
 * Returms a front end breadcrumb view 
 * @param int $id
 * @param text $entity_type
 * @param text $type
 * @param object $entity_object
 */
function frontend_breadcrumb_display($id = NULL , $entity_object = NULL , $single_url = NULL) {
  $str_breadcrumb = 'http://data-vocabulary.org/Breadcrumb';
  $title_val = substr(check_plain($entity_object->title) , 0 , 50);
//  if($entity_object->type == 'story' || $entity_object->type == 'photogallery' || $entity_object->type == 'videogallery') {
//  $node_title = '<div itemscope itemtype="' . $str_breadcrumb . '" class="lft pathtwo"><span itemprop="title">' . t($title_val)  . '</span>';  
//  } else {
//  $node_title = '<div itemscope itemtype="' . $str_breadcrumb . '" class="lft pathtwo">' . l('<span itemprop="title">' . t($title_val) , 'node/' . $entity_object->nid , array('html' => TRUE , 'attributes' => array('itemprop' => 'url'))) . '</span>';
//  }

  $node_title = '<div itemscope itemtype="' . $str_breadcrumb . '" class="lft pathtwo"><span itemprop="title">' . t($title_val) . '</span></div>';
  $section_link = '<div itemscope itemtype="' . $str_breadcrumb . '" class="lft pathone">'
      . l('<span itemprop="title">News</span>' , '<front>' , array('html' => TRUE , 'attributes' => array('itemprop' => 'url'))) . '</div>';

  //for Magazine Story
  if (!empty($entity_object->type) && $entity_object->type == 'story' && !empty($entity_object->field_story_select_magazine[LANGUAGE_NONE][0]['target_id'])) {
    $section_link .= ' / ' . l('Magazine' , 'calendar/0/0/magazine.html');
  }

  if (!empty($id)) {
    $section_tids = taxonomy_get_parents_all($id);
    $section_tids = array_reverse($section_tids);
    foreach ($section_tids as $chunks) {
      $section_link .= '<div itemscope itemtype="' . $str_breadcrumb . '" class="lft pathone"> /'
          . l('<span itemprop="title">' . $chunks->name . '</span>' , drupal_get_path_alias('taxonomy/term/' . $chunks->tid) , array('html' => TRUE , 'attributes' => array('itemprop' => 'url'))) . '</div>';
    }
  }
  if (!empty($entity_object->type) && $entity_object->type == 'story') {
    $section_link .= ' / ' . $node_title;
  }
  elseif (!empty($entity_object->type) && $entity_object->type == 'videogallery') {
    $section_link .= ' / Video / ' . $node_title;
  }
  elseif (!empty($entity_object->type) && $entity_object->type == 'photogallery') {
    $section_link .= ' / Gallery / ' . $node_title;
  }
  elseif (!empty($entity_object->type) && $entity_object->type == 'podcast') {
    $section_link .= ' / ' . l("Podcast" , "podcast") . ' / ' . $node_title;
  }
  elseif (!empty($entity_object->type) && $entity_object->type == 'poll') {
    $section_link .= ' / Poll';
  }
  elseif (!empty($entity_object->type) && $entity_object->type == 'blog') {
    $section_link .= ' / ' . l('Blog' , 'blog') . ' / ' . $node_title;
  }
  elseif (!empty($entity_object->type) && $entity_object->type == 'reporter') {
    $section_link .= ' / ' . l("Anchors" , "anchors-list") . ' / ' . $node_title;
  }
  else if (!empty($entity_object->type) && $entity_object->type == 'breaking_news') {
    $section_link .= ' / ' . $entity_object->field_type[LANGUAGE_NONE][0]['value'] . '/' . $node_title;
  }
  elseif (!empty($entity_object->type)) {
    $section_link .= ' / ' . $node_title;
  }
  elseif (!empty($single_url)) {
    $section_link .= ' / ' . t($single_url);
  }
  return $section_link;
}

/*
 * Implements hook_node_view
 */

function itg_seo_node_view($node , $view_mode , $langcode) {
  itg_seo_node_data($node);
}

/**
 * Extra meta tags element hide from form
 * @param array $form
 * @param array $form_state
 * @return array
 */
function event_registration_extra_element_hide($form , &$form_state) {
  drupal_add_js('jQuery(document).ready(function() {              
              jQuery(".vertical-tabs").hide();                
            });' , array('type' => 'inline' , 'scope' => 'footer'));

  return $form;
}

/**
 * Implementation of hook_node_insert().
 * @param object $node
 */
function itg_seo_node_insert($node) {
  if (is_valid_content_type_for_sef_url($node->type)) {
    //set custom path alias

    $ctype_array = content_types_for_sef_url();

    if (in_array($node->type , $ctype_array) && isset($node->field_story_source_type[LANGUAGE_NONE][0]['value']) && $node->field_story_source_type[LANGUAGE_NONE][0]['value'] != 'migrated') {
      $newpath = itg_common_custompath_insert_load($node);
      $node->path['alias'] = $newpath;
    }
    if ($node->type == 'mega_review_critic' || $node->type == 'podcast' || $node->type == 'reporter' || $node->type == 'itg_funalytics' || $node->type == 'page' || $node->type == 'blog') {
      $newpath = itg_common_custompath_insert_load($node);
      $node->path['alias'] = $newpath;
    }
    if ($node->field_story_source_type[LANGUAGE_NONE][0]['value'] == 'migrated' && in_array($node->type , $ctype_array)) {
      itg_common_custompath_migrated_load($node);
    }
  }
}

/**
 * {@inheritdocs}
 */
function itg_seo_node_presave($node) {
  if (is_valid_content_type_for_sef_url($node->type)) {
    //Handel case for fresh created node.
    if (empty($node->nid)) {
      // As if alise is not set from textfield the assign title of node to alise.
      if (empty($node->path['alias'])) {
        $node->path['alias'] = $node->title;
      }
    }
    if ($node->path['pathauto'] == 1) {
      $node->path['alias'] = $node->title;
    }
  }
}

/**
 * Implementation of hook_node_insert().
 * @param object $node
 */
function itg_seo_node_update($node) {
  //set custom path alias  
  if (itg_workflow_stop_node_update_batch_for_widgets()) {
    return;
  }

  if (isset($node->op) && is_valid_content_type_for_sef_url($node->type)) {
    $ctype_array = content_types_for_sef_url();
    if (in_array($node->type , $ctype_array) && isset($node->field_story_source_type[LANGUAGE_NONE][0]['value']) && $node->field_story_source_type[LANGUAGE_NONE][0]['value'] != 'migrated') {
      $newpath = itg_common_custompath_insert_load($node);
      $node->path['alias'] = $newpath;
      $path = array(
        'source' => "node/{$node->nid}" ,
        'alias' => $newpath , // Any alias that you want to set.
      );
      path_save($path);
    }
    if ($node->type == 'reporter' || $node->type == 'podcast') {
      $newpath = itg_common_custompath_insert_load($node);
      $node->path['alias'] = $newpath;
      $path = array(
        'source' => "node/{$node->nid}" ,
        'alias' => $newpath , // Any alias that you want to set.
      );
      path_save($path);
    }

    if ($node->type == 'itg_funalytics' || $node->type == 'mega_review_critic' || $node->type == 'page' || $node->type == 'blog') {
      $newpath = itg_common_custompath_insert_load($node);
      $node->path['alias'] = $newpath;
      $path = array(
        'source' => "node/{$node->nid}" ,
        'alias' => $newpath , // Any alias that you want to set.
      );
      path_save($path);
    }
  }
  // custom alias conditions for migration
  if ($node->field_story_source_type[LANGUAGE_NONE][0]['value'] == 'migrated' && in_array($node->type , $ctype_array)) {
    itg_common_custompath_migrated_load($node , 'update_migrated');
  }
}

function content_types_for_sef_url() {
  return array(
    'photogallery' ,
    'story' ,
    'videogallery' ,
    'podcast' ,
    'food_news' ,
    'cooking_tips' ,
    'recipe' ,
    'blog' ,
    'reporter' ,
    'itg_funalytics' ,
    'page' ,
    'mega_review_critic'
  );
}

/**
 * function which gives boolean value which is handling for sef url.
 */
function is_valid_content_type_for_sef_url($type) {
  if (in_array($type , content_types_for_sef_url())) {
    return TRUE;
  }
  return FALSE;
}
