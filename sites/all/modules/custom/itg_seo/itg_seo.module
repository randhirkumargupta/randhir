<?php

/**
 * Implementation of hook_menu().
 * 
 * {@inheritdoc}
 */
module_load_include('inc', 'itg_seo', 'includes/views_handler_itg_seo');
module_load_include('inc', 'itg_seo', 'includes/itg_seo_rich_snippet');
module_load_include('inc', 'itg_seo', 'includes/itg_redirect_url');
module_load_include('inc', 'itg_seo', 'includes/itg_sef_redirect_url');

function itg_seo_menu() {
  $items['itg-access-denied'] = array(
    'title' => t('Access Denied'),
    'page callback' => 'itg_access_denied',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['itg-not-found'] = array(
    'title' => t('Not Found'),
    'page callback' => 'itg_not_found',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );


  return $items;
}

/**
 * Call template file for access denied page
 * 
 * @return array
 */
function itg_access_denied() {
  return theme('itg_access_denied');
}

/**
 * Call template file for not found page
 * 
 * @return array
 */
function itg_not_found() {
  //$video_id = decryptForEmbed("jthgoy4f1c");
  //p($video_id);
  //var_dump($video_id);

  
  if (function_exists(itg_seo_latest_headlines)) {
    $latest_headlines = itg_seo_latest_headlines();
  }
  return theme('itg_not_found', array('data' => $latest_headlines));
}

/*function decryptForEmbed($string){
  $decrypter = gmp_strval(gmp_init($string, 36));
  $decrypter = gmp_shiftr($decrypter, 5);
  $decrypter = gmp_export($decrypter);
  return $decrypter;
}

function gmp_shiftr($x,$n) { // shift right 
  return(gmp_div($x,gmp_pow(2,$n))); 
}*/

/**
 * Implements hook_theme().
 *
 * {@inheritdoc}.
 */
function itg_seo_theme() {
  $themes = array(
    'itg_access_denied' => array(
      'template' => 'itg-seo-access-denied',
      'path' => drupal_get_path('module', 'itg_seo') . '/templates',
    ),
    'itg_not_found' => array(
      'template' => 'itg-seo-not-found',
      'path' => drupal_get_path('module', 'itg_seo') . '/templates',
      'variables' => array('data' => NULL),
    ),
  );
  return $themes;
}

/**
 * Implements hook_form_alter().
 * {@inheritdoc}
 */
function itg_seo_form_alter(&$form, &$form_state, $form_id) {
  global $user;

  if ($form_id == 'event_registration_node_form') {
    $form['#after_build'][] = 'event_registration_extra_element_hide';
  }
  // Extra meta tags element hide from form
  if ($form_id == 'mega_review_critic_node_form' || $form_id == 'story_node_form' || $form_id == 'itg_celebrity_profile_node_form' || $form_id == 'blog_node_form' || $form_id == 'podcast_node_form' || $form_id == 'videogallery_node_form' || $form_id == 'photogallery_node_form' || $form_id == 'breaking_news_node_form' || $form_id == 'reporter_node_form' || $form_id == 'recipe_node_form' || $form_id == 'cooking_tips_node_form' || $form_id == 'food_news_node_form' || $form_id == 'astro_node_form' || $form_id == 'live_tv_integration_node_form' || $form_id == 'ask_an_expert_node_form' || $form_id == 'event_configurations_node_form' || $form_id == 'event_backend_node_form' || $form_id == 'issue_node_form' || $form_id == 'supplement_node_form' || $form_id == 'newsletter_node_form' || $form_id == 'magazine_node_form' || $form_id == 'heighlights_node_form' || $form_id == 'survey_node_form' || $form_id == 'quiz_node_form' || $form_id == 'page_node_form' || $form_id == 'poll_node_form' || $form_id == 'sponsor_node_form' || $form_id == 'itg_funalytics_node_form') {
    if (!array_key_exists(ADMINISTRATOR, $user->roles)) {
      $form['#after_build'][] = 'itg_meta_tags_extra_element_hide';
    }
  }
  // Hide extra metatags on taxonomies.
  if ($form_id == 'taxonomy_form_term' &&
      ($form['#vocabulary']->machine_name == 'category_management' ||
      $form['#vocabulary']->machine_name == 'movies')) {
    if (!array_key_exists(ADMINISTRATOR, $user->roles)) {
      $form['#after_build'][] = 'itg_meta_tags_extra_element_hide';
    }
  }

  if ($form_id == 'syndication_client_node_form' || $form_id == 'syndication_rule_node_form' || $form_id == 'syndication_feed_from_pattern_node_form' || $form_id == 'ads_management_node_form' || $form_id == 'task_idea_allocation_tracking_node_form' || $form_id == 'ugc_node_form' || $form_id == 'notification_node_form' || $form_id == 'coupon_node_form') {
    $form['#after_build'][] = 'itg_additional_settings_element_hide';
  }

  // code for pathauto
  $node_form_array = array(
    'photogallery_node_form',
    'story_node_form',
    'videogallery_node_form',
    'podcast_node_form',
    'food_news_node_form',
    'cooking_tips_node_form',
    'recipe_node_form',
    'blog_node_form',
    'reporter_node_form',
    'itg_funalytics_node_form',
    'mega_review_critic_node_form',
    'page_node_form',
    'survey_node_form',
    'quiz_node_form',
    'breaking_news_node_form',
    'poll_node_form',
  );
  if (in_array($form['#form_id'], $node_form_array)) {
    $form['#after_build'][] = 'itg_custom_meta_tags_alias_set';
    // Handel case when pathauto checkbox status.
    $form['actions']['submit']['#submit'][] = 'itg_custom_pathauto_save_sef_status';
    $form['#after_build'][] = 'itg_custom_pathauto_sef_checkbox_status';
  }
}

/**
 * Extra meta tags element hide from form
 * @param array $form
 * @param array $form_state
 * @return array
 */
function itg_custom_meta_tags_alias_set($form, &$form_state) {
  $nodeid = arg(1);
  if (isset($form['path']) && !empty($form['path'])) {
    $query = db_select('url_alias', 'ua');
    $query->fields('ua', array('alias'));
    $query->orderBy('pid', 'DESC');
    $query->condition('source', 'node/'.$nodeid, '=');
    $result = $query->execute()->fetchField();
    $edited_sef_url = itg_get_sef_url($result, $nodeid);
    $form['path']['alias']['#value'] = $edited_sef_url;
  }
  return $form;
}

/**
 * itg_custom_pathauto_sef_checkbox_status().
 * {@inheritdoc}.
 */
function itg_custom_pathauto_sef_checkbox_status($form, &$form_state) {
  if (!empty($form['#node']->nid)) {
    $entity_type = $form['#node']->type;
    $entity_id = $form['#node']->nid;
    $state = itg_custom_pathauto_get_sef_url_state($entity_id, $entity_type);
    if (isset($state)) {
      $pathauto_state = $state;
    }
    else {
      $pathauto_state = 0;
    }
  }
  else {
    //Give default sef checked while node/add form.
    $pathauto_state = 1;
  }
  
  // Handel checked unchecked of sef url;
  $form['path']['pathauto']['#title'] = t('Generate automatic Sef URL');
  $form['path']['pathauto']['#default_value'] = $pathauto_state;
  $form['path']['pathauto']['#value'] = $pathauto_state;
  $form['path']['pathauto']['#checked'] = $pathauto_state;
  return $form;
}

/**
 * itg_seo_mb_substr().
 * {@inheritdoc}.
 */
function itg_seo_mb_substr($str, $start, $end) {
  return mb_substr($str, $start, $end - $start);
}

/**
 * Extra meta tags element hide from form
 * @param array $form
 * @param array $form_state
 * @return array
 */
function itg_meta_tags_extra_element_hide($form, &$form_state) {

  if (isset($form['#vocabulary']->machine_name) && $form['#vocabulary']->machine_name == 'movies') {
    unset($form['relations']['#title']);
    unset($form['metatags']['#title']);
    unset($form['metatags']['#title']);
  }

  drupal_add_js(drupal_get_path('module', 'itg_common') . '/js/itg_metatags.js', array('scope' => 'footer'));
  unset($form['additional_settings']['group']['#groups']['additional_settings'][5]['#description']);
  unset($form['metatags']['intro_text']['#markup']);

  // Add code after metatag updation
  unset($form['metatags'][LANGUAGE_NONE]['basic']['#title']);
  unset($form['metatags'][LANGUAGE_NONE]['basic']['#description']);

  $arr_seo_heading_not_req = array('event_backend_node_form', 'issue_node_form', 'supplement_node_form', 'magazine_node_form', 'survey_node_form', 'quiz_node_form');
  if (!in_array($form['#form_id'], $arr_seo_heading_not_req)) {
    $form['path']['#prefix'] = '<h2 class="story-title">' . t('SEO Meta Tags') . '</h2>';
  }

  return $form;
}

/**
 * Implements 
 * itg_seo_latest_headlines()
 */
function itg_seo_latest_headlines() {
  $query = db_select('node', 'n');
  $query->leftJoin('field_data_field_photo_see_pic_link', 'se', 'n.nid = se.entity_id');
      $query->fields('n', array('title', 'nid'));
      $query->fields('se', array('field_photo_see_pic_link_value'));
      $query->condition('n.status', 1);
      //->condition('n.type', 'story')
      $query->condition('n.type', array('story','photogallery','videogallery'),'IN');
      $query->range(0, 4);
      $query->orderBy('n.created', 'DESC');
  $result = $query->execute()->fetchAll();
  $headlines = array();
  foreach ($result as $key => $val) {
    if(!empty($val->field_photo_see_pic_link_value)) {
    $title = '<span class="see_pic_not_found">'.$val->field_photo_see_pic_link_value.' : </span>'.$val->title;
    } else {
    $title =  $val->title;
    }
    $headlines[$val->nid] = $title;
   
  }
  return $headlines;
}

/**
 * Extra meta tags element hide from form
 * @param array $form
 * @param array $form_state
 * @return array
 */
function itg_additional_settings_element_hide($form, &$form_state, $form_id) {
  global $user;
  if ($user->uid != '1') {
    drupal_add_js(drupal_get_path('module', 'itg_seo') . '/js/itg_additional_settings_element_hide.js', array('type' => 'file', 'scope' => 'footer'));
  }
  return $form;
}

/**
 * Returms a front end breadcrumb view 
 * @param int $id
 * @param text $entity_type
 * @param text $type
 * @param object $entity_object
 */
function frontend_breadcrumb_display($id = NULL, $entity_object = NULL, $single_url = NULL) {
  $str_breadcrumb = 'http://data-vocabulary.org/Breadcrumb';
  $title_val = '';
  $arg = arg();
  if (isset($entity_object->title)) {
    $title_val = ucfirst(mb_strimwidth($entity_object->title, 0, 100));
  }

  //$node_title = '<div itemscope itemtype="' . $str_breadcrumb . '" class="lft pathtwo"><span itemprop="title">' . t($title_val) . '</span></div>';
  $node_title = t($title_val);
  $section_link = '<div itemscope itemtype="' . $str_breadcrumb . '" class="lft pathone">'
      . l('<span itemprop="title">News</span>', '<front>', array('html' => TRUE, 'attributes' => array('itemprop' => 'url'))) . '</div>';

  //for Magazine Story
  if (!empty($entity_object->type) && $entity_object->type == 'story' && !empty($entity_object->field_story_select_magazine[LANGUAGE_NONE][0]['target_id'])) {
    $section_link .= ' / ' . l('Magazine', 'magazine');
  }

  if (!empty($id)) {
    $section_tids = taxonomy_get_parents_all($id);
    $section_tids = array_reverse($section_tids);
    
    if($arg[0] == 'taxonomy' && $arg[1] == 'term' && is_numeric($arg[2]) && count($section_tids) == 1) {
      $section_link .= '<div itemscope itemtype="' . $str_breadcrumb . '" class="lft pathone">&nbsp;/'
          .'&nbsp;<span itemprop="title">' . itg_seo_get_term_name_by_tid($arg[2]) . '</span></div>';
    }
    else {
      foreach ($section_tids as $chunks) {
        $section_link .= '<div itemscope itemtype="' . $str_breadcrumb . '" class="lft pathone">&nbsp;/&nbsp;'
            . l('<span itemprop="title">' . $chunks->name . '</span>', drupal_get_path_alias('taxonomy/term/' . $chunks->tid), array('html' => TRUE, 'attributes' => array('itemprop' => 'url'))) . '</div>';
      }
    }
    
  }
  if (!empty($entity_object->type) && $entity_object->type == 'story') {
    $section_link .= ' / ' . $node_title;
  }
  elseif (!empty($entity_object->type) && $entity_object->type == 'videogallery') {
    $section_link .= ' / Video / ' . $node_title;
  }
  elseif (!empty($entity_object->type) && $entity_object->type == 'photogallery') {
    $section_link .= ' / Gallery / ' . $node_title;
  }
  elseif (!empty($entity_object->type) && $entity_object->type == 'podcast') {
    $section_link .= ' / ' . l("Podcast", "podcast") . ' / ' . $node_title;
  }
  elseif (!empty($entity_object->type) && $entity_object->type == 'poll') {
    $section_link .= ' / Polls';
  }
  elseif (!empty($entity_object->type) && $entity_object->type == 'blog') {
    $section_link .= ' / ' . l('Blog', 'blog') . ' / ' . $node_title;
  }
  elseif (!empty($entity_object->type) && $entity_object->type == 'reporter') {
    $section_link .= ' / ' . l("Anchors", "anchors-list") . ' / ' . $node_title;
  }
  else if (!empty($entity_object->type) && $entity_object->type == 'breaking_news') {
    $section_link .= ' / ' . $entity_object->field_type[LANGUAGE_NONE][0]['value'] . '/' . $node_title;
  }
  elseif (!empty($entity_object->type)) {
    $section_link .= ' / ' . $node_title;
  }
  elseif (!empty($single_url)) {
    $section_link .= ' / ' . t($single_url);
  }
  return $section_link;
}

/**
 * This function is used to get term name.
 * @param int $tid
 * @return array
 */
function itg_seo_get_term_name_by_tid($tid) {
    return db_select('taxonomy_term_data', 't')
            ->fields('t', array('name'))
            ->condition('tid', $tid)
            ->execute()
            ->fetchField();
}
/*
 * Implements hook_node_view
 */

function itg_seo_node_view($node, $view_mode, $langcode) {
  global $base_url;
  

  // adding meta description tag if no meta description comes along with node data
   if (!isset($node->metatags[LANGUAGE_NONE]['description'])) {
       $metatag_description1 = array(
         '#type' => 'html_tag',
         '#tag' => 'meta',
         '#attributes' => array(
           'name' => 'description',
           'content' => '',
         ),
         '#weight' => -1000,
       );
       drupal_add_html_head($metatag_description1, 'description');
   }
   
  // adding meta keywords tag if no meta keywords comes along with node data
  if (!isset($node->metatags[LANGUAGE_NONE]['keywords'])) {
      $news_keyword = array(
        '#type' => 'html_tag',
        '#tag' => 'meta',
        '#attributes' => array(
          'name' => 'news_keyword',
          'content' => '',
        ),
        '#weight' => -999,
      );
      drupal_add_html_head($news_keyword, 'news_keyword');
  }
  
  $meta_keywords = isset($node->metatags[LANGUAGE_NONE]['keywords']['value']) ? $node->metatags[LANGUAGE_NONE]['keywords']['value'] : '';
  if (!empty($meta_keywords)) {
    $head_elements['metatag_keywords_0'] = array(
      '#type' => 'html_tag',
      '#tag' => 'meta',
      '#attributes' => array(
        'name' => 'news_keyword',
        'content' => $meta_keywords
      ),
    );
  }

  $is_frontpage = drupal_is_front_page();
  if (empty($is_frontpage)) {
    $field_names = variable_get('itg_nofollow_fields');
    if (isset($field_names) && !empty($field_names)) {
      $each_fields = explode(',', $field_names);
      foreach ($each_fields as $fk => $fv) {
        $field_name = trim($fv);
        $node->{$field_name}[LANGUAGE_NONE][0]['value'] = add_nofollow_in_body($node->{$field_name}[LANGUAGE_NONE][0]['value']);
      }
    }
    itg_seo_node_data($node);
  } 
  else {
    // Adding Rich Snippet Script at home page for search
      $target = $base_url . '/search?q={search_term}';
      $markup = array(
        '#type' => 'markup',
        '#markup' => '<script type="application/ld+json"> {'
        . '    "@context": "http://schema.org",    "@type": "WebSite",    "url": "' . $base_url . '",    '
        . '"potentialAction": {      "@type": "SearchAction",      '
        . '"target": "' . $target . '",      '
        . '"query-input": "required name=search_term"    } } '
        . '</script>',
      );
      drupal_add_html_head($markup, 'sd_json');
      
      // canonical for home page
      $home_canonical = $base_url . '/' . $node->path['alias'];
      $canonical = array(
        '#type' => 'html_tag',
        '#tag' => 'link',
        '#attributes' => array('rel' => 'canonical', 'href' => $home_canonical),
      );
      drupal_add_html_head($canonical, 'canonical');
      // meta name description for home page
      $meta_description = $node->metatags[LANGUAGE_NONE]['description']['value'];
      if (isset($meta_description) && !empty($meta_description)) {
        $metatag_description = array(
          '#type' => 'html_tag',
          '#tag' => 'meta',
          '#attributes' => array(
            'name' => 'description',
            'content' => $meta_description,
          ),
        );
        drupal_add_html_head($metatag_description, 'description');
      }
      
      $meta_keyword = $node->metatags[LANGUAGE_NONE]['keywords']['value'];
      if (isset($meta_keyword) && !empty($meta_keyword)) {
        $meta_keyword = array(
          '#type' => 'html_tag',
          '#tag' => 'meta',
          '#attributes' => array(
            'name' => 'news_keyword',
            'content' => $meta_keyword,
          ),
        );
        drupal_add_html_head($meta_keyword, 'news_keyword');
      }
  }
}

/**
 * Extra meta tags element hide from form
 * @param array $form
 * @param array $form_state
 * @return array
 */
function event_registration_extra_element_hide($form, &$form_state) {
  drupal_add_js(drupal_get_path('module', 'itg_seo') . '/js/event_registration_extra_element_hide.js', array('type' => 'file', 'scope' => 'footer'));
  return $form;
}

/**
 * Implementation of hook_node_insert().
 * @param object $node
 */
function itg_seo_node_insert($node) {
  if (is_valid_content_type_for_sef_url($node->type)) {
    //set custom path alias

    $ctype_array = content_types_for_sef_url();

    
    if ($node->field_story_source_type[LANGUAGE_NONE][0]['value'] == 'migrated' && in_array($node->type, $ctype_array)) {
      $newpath = itg_common_custompath_migrated_load($node, 'update_migrated');
      $node->path['alias'] = $newpath;
      $path = array(
        'source' => "node/{$node->nid}",
        'alias' => $newpath, // Any alias that you want to set.
      );
      path_save($path);
    } else {
      if (in_array($node->type, $ctype_array) && isset($node->field_story_source_type[LANGUAGE_NONE][0]['value']) && $node->field_story_source_type[LANGUAGE_NONE][0]['value'] != 'migrated') {
        $newpath = itg_common_custompath_insert_load($node);
        $node->path['alias'] = $newpath;
      }
      if (($node->type == 'breaking_news') || $node->type == 'poll' || $node->type == 'quiz' || $node->type == 'survey' || $node->type == 'mega_review_critic' || $node->type == 'podcast' || $node->type == 'reporter' || $node->type == 'itg_funalytics' || $node->type == 'page' || $node->type == 'blog') {
        $newpath = itg_common_custompath_insert_load($node);
        $node->path['alias'] = $newpath;
      }
    }
    watchdog("seo_insert1", "<pre> ".print_r($node, true)."</pre>");
  }
}

/**
 * {@inheritdocs}
 */
function itg_seo_node_presave($node) {

  //set custom path alias  
  if (itg_workflow_stop_node_update_batch_for_widgets()) {
    return;
  }
  if (is_valid_content_type_for_sef_url($node->type) && !in_array('batch', arg())&& isset($node->op)) {
    //Handel case for fresh created node.
    if (empty($node->nid)) {
      
      // As if alise is not set from textfield the assign title of node to alise.
      if (empty($node->path['alias'])) {
        $node->path['alias'] = $node->title;
      }
    }
    if ($node->path['pathauto'] == 1) {
      $node->path['alias'] = $node->title;
    }
  }
}

/**
 * Implementation of hook_node_update().
 * @param object $node
 */
function itg_seo_node_update($node) {
  //set custom path alias  
  if (itg_workflow_stop_node_update_batch_for_widgets()) {
    return;
  }
  watchdog("seo_update1", "<pre> ".print_r($node, true)."</pre>");
  if (!isset($node->op) && is_valid_content_type_for_sef_url($node->type) && isset($node->migrate['machineName']) && !empty($node->migrate['machineName'])) {
    if (isset($node->field_story_source_type[LANGUAGE_NONE][0]['value'])) {
      $newpath = itg_common_custompath_migrated_load($node, 'migration_node_update');
      $node->path['alias'] = $newpath;
      $path = array(
        'source' => "node/{$node->nid}",
        'alias' => $newpath, // Any alias that you want to set.
      );
      path_save($path);
    }
  } else {
  if (isset($node->op) && is_valid_content_type_for_sef_url($node->type)) {
    if (isset($node->field_story_source_type[LANGUAGE_NONE][0]['value'])) {
      $newpath = itg_common_custompath_insert_load($node);
      $node->path['alias'] = $newpath;
      $path = array(
        'source' => "node/{$node->nid}",
        'alias' => $newpath, // Any alias that you want to set.
      );
      path_save($path);
    }
    elseif ($node->type == 'reporter' || $node->type == 'podcast' || $node->type == 'survey' || $node->type == 'quiz' || $node->type == 'poll') {
      $newpath = itg_common_custompath_insert_load($node);
      // Fix for Poll Only.
      // two times poll/poll/ appending in alias.
      if($node->type == 'poll') {
        $path_array = explode("/", $newpath);
        if(count($path_array) > 2) {
            unset($path_array[0]);
            $newpath = implode("/", $path_array);
        }
      }
      $node->path['alias'] = $newpath;
      $path = array(
        'source' => "node/{$node->nid}",
        'alias' => $newpath, // Any alias that you want to set.
      );
      path_save($path);
    }

    elseif ($node->type == 'itg_funalytics' || $node->type == 'mega_review_critic' || $node->type == 'page' || $node->type == 'blog' || ($node->type == 'breaking_news')) {
      $newpath = itg_common_custompath_insert_load($node);
      $node->path['alias'] = $newpath;
      $path = array(
        'source' => "node/{$node->nid}",
        'alias' => $newpath, // Any alias that you want to set.
      );
      path_save($path);
    }
  }
 }
}

/**
 * content_types_for_sef_url().
 */
function content_types_for_sef_url() {
  return array(
    'photogallery',
    'story',
    'videogallery',
    'podcast',
    'food_news',
    'cooking_tips',
    'recipe',
    'blog',
    'reporter',
    'itg_funalytics',
    'page',
    'mega_review_critic',
    'survey',
    'quiz',
    'poll',
    'breaking_news',
  );
}

/**
 * function which gives boolean value which is handling for sef url.
 */
function is_valid_content_type_for_sef_url($type) {
  if (in_array($type, content_types_for_sef_url())) {
    return TRUE;
  }
  return FALSE;
}

/**
 * Implements hook_theme_registry_alter().
 */
function itg_seo_theme_registry_alter(&$theme_registry) {
  $theme_registry['views_data_export_xml_body']['theme paths'] = array(0 => drupal_get_path('module', 'itg_seo') . '/templates');
  $theme_registry['views_data_export_xml_body']['theme path'] = drupal_get_path('module', 'itg_seo') . '/templates';
  $theme_registry['views_data_export_xml_body']['path'] = drupal_get_path('module', 'itg_seo') . '/templates';
  $theme_registry['views_data_export_xml_body']['template'] = 'views-data-export-xml-body';
}


/**
 * Implements hook_views_data().
 */
function itg_seo_views_data() {
	$data['itg_seo']['table']['group'] = t('Get Meta Description');
	$data['itg_seo']['table']['join'] = array(
		// #global is a special flag which let's a table appear all the time.
		'#global' => array(),
	);
	$data['itg_seo']['custom_handler'] = array(
		'title' => t('Get Meta Description'),
		'help' => t('Get Meta Description'),
		'field' => array(
			'handler' => 'views_handler_itg_seo',
		),
	);
	return $data;
}

/**
 * itg_seo_pathauto_alias_alter().
 * {@inheritdoc}
 */
function itg_seo_pathauto_alias_alter(&$alias, array &$context) {
  if (function_exists('is_valid_content_type_for_sef_url') && isset($context['data']['node']) && is_valid_content_type_for_sef_url($context['data']['node']->type)) {
    // Handel case if user selected  Generate automatic Sef URL
    // $alias is overridden
    // If you don't want to overridden then use conatinate.
    // Example : $alias .= '.html';
    $alias = $context['data']['node']->path['alias'];
    $node_id = $context['data']['node']->nid;
    $node_type = $context['data']['node']->type;
    $pathauto_state = 1;
    itg_custom_pathauto_state_save($node_type, $node_id, $pathauto_state);
  }
}

/**
 * Get the editor's pick author name
 * 
 * @param int $ids
 *  Node id of the story node
 * @param string as $author_name
 *  Returns a string as author name
 */
function itg_seo_editors_pick_data($ids){
  $query = db_select('itg_multi_byline_info', 'mbi');
  $query->leftJoin('node', 'n', 'mbi.byline_id = n.nid');
    $query->fields('n', array('title'));
    $query->condition('mbi.publish_status', 1);
    $query->condition('mbi.nid', $ids);
  $author_name = $query->execute()->fetchField();
  return $author_name;
}
