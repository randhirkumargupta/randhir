<?php

/**
 * @file
 * ITG Poll module.
 *
 * Provides customizations and functions for Poll.
 *
 */

/**
 * Implements hook_init().
 */
function itg_poll_init() {


}


/**
 * Implements hook_menu().
 */
function itg_poll_menu() {
    $items = array();
    
    $items['poll-details-ajax'] = array(      
      'page callback' => 'itg_poll_result_details',
      'access arguments' => array('access content'),
      'type' => MENU_CALLBACK,
      'file' => 'includes/itg_poll.inc',
    );

    return $items; 
    
}



/**
 * Implemets hook_form_alter().
 */
function itg_poll_form_alter(&$form, &$form_state, $form_id) {
    //echo "form_id =".$form_id; 
    switch ($form_id) {
    case 'poll_node_form':
        if(arg(2) == 'edit') {
            //p($form['field_poll_question']);
            //$form['field_poll_question']['#options']['#attributes']['disabled'] ='disabled';
        }
        $form['#validate'] = array('poll_form_validate');
        //$form['title']['#required'] = FALSE;
        //unset($form['title']);
        unset($form['body']);  
       drupal_add_js(drupal_get_path('module', 'itg_poll') . '/js/itg_poll.js'); 
       return $form;
    break;
    case 'itg_poll_form':
      drupal_add_js(drupal_get_path('module', 'itg_poll') . '/js/itg_ajax_poll.js');
        getPollResult(8);
    break;    
  }
}


// validate form
function poll_form_validate($form, &$form_state){
    
    $field = $form_state['build_info']['args'][0];
    $field_input = $form_state['input'];
    $cnt = count($form_state['values']['field_poll_answer'][LANGUAGE_NONE]);
    //p($form_state);
    //exit;
    $pollQuestionValue = $field->field_poll_question[LANGUAGE_NONE][0]['value'];
    
    if(isset($pollQuestionValue)) {
        if($pollQuestionValue == 1) {
            $pollQuestionTextValue = isset($field_input['field_poll_question_text'][LANGUAGE_NONE]) ? $field_input['field_poll_question_text'][LANGUAGE_NONE][0]['value'] : '';
            if(empty($pollQuestionTextValue)) {
                //echo "text = ".$pollQuestionTextValue;
                form_set_error('field_poll_question_text', t('Required Poll Question Text'));
            }
            
            // validate answer
            validateAnswer($cnt, $form_state, '1', 'field_poll_answer_text', 'Required Poll Answer Text');
            
        } else if($pollQuestionValue == 2) {
            
            $pollQuestionImageValue = isset($field_input['field_poll_question_image'][LANGUAGE_NONE]) ? $field_input['field_poll_question_image'][LANGUAGE_NONE][0]['fid'] : '';
            if(empty($pollQuestionImageValue)) {
                //echo "text = ".$pollQuestionTextValue;
                form_set_error('field_poll_answer_image', t('Required Poll Question Image'));
            }
            
            // validate answer
            validateAnswer($cnt, $form_state, '2' ,'field_poll_answer_image', 'Required Poll Answer Image');
            
        } else if($pollQuestionValue == 3) {
            
        }
    } else {
        
    }
    drupal_add_js(drupal_get_path('module', 'itg_poll') . '/js/itg_poll.js'); 
    //exit;
    //return $form;
}


function validateAnswer($cnt, $form_state, $type, $field, $errMsg){
    for($i=0; $i < ($cnt - 1); $i++ ) {
        $poll_answer = isset($form_state['values']['field_poll_answer'][LANGUAGE_NONE]) ? $form_state['values']['field_poll_answer'][LANGUAGE_NONE][$i] : '';
        if(isset($type) && $type == 1){
            $poll_answer_value = isset($poll_answer[$field][LANGUAGE_NONE]) ? $poll_answer[$field][LANGUAGE_NONE][0]['value'] : '';
        } else if($type == 2){
            $poll_answer_value = isset($poll_answer[$field][LANGUAGE_NONE]) ? $poll_answer[$field][LANGUAGE_NONE][0]['fid'] : '';
        }
        
        
        if(empty($poll_answer_value)){
            form_set_error($field, t($errMsg));
        }
       // echo "<br>";
    }
}


function isCookies($nid){
    //echo "<br>nid = ".$nid . " == ".$_COOKIE['visitedPoll'];
    $isCookies = '';
    // get poll cookie
    if(isset($_COOKIE['visitedPoll'])) {
        
        $pollArr = explode('_',$_COOKIE['visitedPoll']);

        if($nid ===  $pollArr[1]) {
                $isCookies = 'yes';
        }

    }
    return $isCookies;
}



function getPollResult($this_nid){
    
        if(empty($this_nid)) {
            return false;
        }

        $query = db_select('itg_polls', 'p')
              ->fields('p', array('ansId', 'uid'))
              ->condition('p.nid', $this_nid)
              ->groupBy('p.ansId');


        // Add the COUNT expression
        $query->addExpression('COUNT(p.ansId)', 'optionCnt');

        $results = $query->execute()->fetchAll();

        foreach($results as $row) {
                $optionArr[$row->ansId] = $row; 
        }
    return $optionArr;
}

function getTotalPoll($this_nid){
    
    if(empty($this_nid)) {
        return false;
    }
    return $total = db_select('itg_polls','p')
                ->fields('p', array('Id'))
                    ->condition('p.nid', $this_nid)->execute()->rowCount();
         
    
}
function itg_poll_form($form, &$form_state, $parms) {
    //dpm($parms);
    
    //watchdog('dssd','<pre>' . print_r($parms,true) . '</pre>');
    $form = array();
    $form['#id'] = 'subsPollForm';
        
    $form["wrapper"] = array(
      "#markup" => "<div class='inline-messages'></div>",
     );
    
    foreach ($parms as $item):
    $nid = $item->nid;

    foreach($item->_field_data['nid']['entity']->field_poll_answer['und'] as $row) {
            $item_id[] = $row['value'];
    }


    $temp_entities = entity_load('field_collection_item', $item_id);
    if(is_array($temp_entities) && count($temp_entities) > 0) {

        foreach ( $temp_entities as $temp_ent_id => $temp_ent) {
            $poll_answer_text   = isset($temp_ent->field_poll_answer_text[LANGUAGE_NONE]) ? $temp_ent->field_poll_answer_text[LANGUAGE_NONE][0]['value'] : '';
            $poll_answer_image   = isset($temp_ent->field_poll_answer_image[LANGUAGE_NONE]) ? $temp_ent->field_poll_answer_image[LANGUAGE_NONE][0]['fid'] : '';
            $poll_answe_default   = isset($temp_ent->field_poll_answe_default_value[LANGUAGE_NONE]) ? $temp_ent->field_poll_answe_default_value[LANGUAGE_NONE][0]['value'] : '';
            if(isset($poll_answer_image) && $poll_answer_image > 0){
                $poll_image = theme('image', array('path' => file_load($poll_answer_image)->uri, 'alt' => t(''), 'style_name' => 'my_image_style'));
                $pollAnswer[$temp_ent_id] = isset($poll_image) ? $poll_image : '';
                
            } else {
                $pollAnswer[$temp_ent_id] = isset($poll_answer_text) ? $poll_answer_text : '';
            }
            
        }   
    }
       
       
endforeach;
    //p($pollAnswer);
    $form['pole_answer'] = array(
                '#type' => 'radios', 
                '#options' => $pollAnswer,
                '#required' => TRUE,
                '#prefix'=>'<div class="poll-main-wrap">',
                '#suffix'=>'</div>',                
        );
    //watchdog('dssd','<pre>' . print_r($temp_ent_id,true) . '</pre>');
    
    $form['nid'] = array(
        '#type' => 'hidden', 
        '#value' => $nid,
    );
    
    $form['submit'] = array(
        '#type' => 'submit', 
        '#value' => 'Submit', 
        /*'#ajax' => array(
            'callback' => 'poll_form_ajax_submit',
            'wrapper' => 'itg-poll-ajax',
            'effect' => 'fade',
            ),
         */ 
         
        );
    
    return $form;
}


function itg_poll_form_validate($form, $form_state) {
    //print_r($form_state);
    return "<div id='itg-poll-ajax'>Wrapper Div</div>";
    //exit;
    //watchdog('dssd validate','<pre>' . print_r($form_state,true) . '</pre>');
    if (empty($form_state['values']['pole_answer'])) {
      form_set_error('pole_answer', t('Please select any one !'));
      $form['#markup'] = t('Please select any one !');
     // $element = $form['poll'];
      //$form['#markup'] = "Thanks, Your Poll is valuable for me.";
      return $form;
    }
    

}

function itg_poll_form_submit($form, &$form_state) {
    //if (empty($form_state['values']['pole_answer'])) {
        // form_set_error('pole answer', t('Please select any one !'));
         //$form['complete form']["wrapper"]['#markup'] = t('Please select any one !');
        // watchdog('arun validate','<pre>' . print_r($form_state['values'],true) . '</pre>');
        // return $form;
    //}
    //watchdog('arun submit','<pre>' . print_r($form_state['values'],true) . '</pre>');
    
    global $user;
    $nId = $form_state['values']['nid'];
    $pole_answer = $form_state['values']['pole_answer'];
    
       /**
       * Insert poll information in the database.
       */
        $created = date('Y-m-d H:i:s');
        db_insert('itg_polls')->fields(array(
         'nId' => $nId,
         'ansId' => $pole_answer,
         'uId' => $user->uid, 
         'created' => $created)) ->execute();
        
        // setcookie(name, value, expire, path, domain); 
        $expire = time() + 60 * 60 * 24 * 30; // expires in one month
        $value = 'yes_'.$nId;
        setcookie('visitedPoll',$value,$expire,'/');
        //drupal_set_message('Thanks, Your Poll is valuable for me');
        
        // you may not want to return the form at all.
        $element = $form['wrapper'];
        $element['#markup'] = "Thanks, Your Poll is valuable for me.";
        //watchdog('arun submit','<pre>' . print_r($element,true) . '</pre>');
        return $element;
}
/**
 * Ajax callback function.
 */
function poll_form_ajax_submit($form, &$form_state) {
  // Dummy/dumb validation for demo purpose.
    
    if (empty($form_state['values']['pole_answer'])) {
         form_set_error('pole_answer', t('Please select any one !'));
         //$form['complete form']["wrapper"]['#markup'] = t('Please select any one !');
         //watchdog('arun validate','<pre>' . print_r($form_state['values'],true) . '</pre>');
         return $form;
    }
    global $user;
    $nId = $form_state['values']['nid'];
    $pole_answer = $form_state['values']['pole_answer'];
    
       /**
       * Insert poll information in the database.
       */
        $created = date('Y-m-d H:i:s');
        db_insert('itg_polls')->fields(array(
         'nId' => $nId,
         'ansId' => $pole_answer,
         'uId' => $user->uid, 
         'created' => $created)) ->execute();
        
        // setcookie(name, value, expire, path, domain); 
        $expire = time() + 60 * 60 * 24 * 30; // expires in one month
        $value = 'yes_'.$nId;
        setcookie('visitedPoll',$value,$expire,'/');
        //drupal_set_message('Thanks, Your Poll is valuable for me');
        
        // you may not want to return the form at all.
        $element = $form['wrapper'];
        $element['#markup'] = "Thanks, Your Poll is valuable for me.";
        //watchdog('arun submit','<pre>' . print_r($element,true) . '</pre>');
        return $element;
    //  return $form;
  
}

