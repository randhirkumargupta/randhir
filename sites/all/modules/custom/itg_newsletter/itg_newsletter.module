<?php

/**
 * @file
 * The ITG Newsletter module.
 *
 * Contains functionality related to Newsletter.
 *
 */

/**
 * Implements hook_block_info().
 */
function itg_newsletter_block_info() {
  $blocks['newsletter_tab_form_block'] = array(
    'info' => t('Newsletter Form Tab Block'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  
  return $blocks;
}

/**
 * Implements hook_block_view()
 * @param type $delta
 */
function itg_newsletter_block_view($delta = '') {
  global $user;
  $block = array();
  $data = '';
  switch ($delta) {
    case 'newsletter_tab_form_block':                       
      $block['content'] = theme('newsletter_tab_form_display_block', array('data' => $data));
    break;        
  }
  
  return $block;
}

/**
 * Implements hook_theme().
 * @param String $existing
 * @param String $type
 * @param Array $theme
 * @param String $path
 */
function itg_newsletter_theme($existing, $type, $theme, $path) {
  $themes = array(
    'newsletter_tab_form_display_block' => array(
      'template' => 'newsletter-form-tab-template',
      'path' => drupal_get_path('module', 'itg_newsletter') . '/templates',
      'variables' => array('data' => NULL),
    ),   
  );

  return $themes;
}

/***************************Form Related hooks*********************************/
/**
 * Implement hook_form_alter
 * @param Array $form
 * @param Array $form_state
 * @param String $form_id
 */
function itg_newsletter_form_alter(&$form, &$form_state, $form_id){
  
  global $user;
  
  //Set destination for newsletter form
  if ($form_id == 'newsletter_node_form') {
    $destination = 'manage-newsletter';
    $form['title']['#description'] = '<p>' . t('Please enter subject line.') . '</p>';
    $form['actions']['cancel'] = array(
      '#markup' => l(t('Cancel'), $destination, array('attributes' => array('class' => 'button'))),
      '#weight' => 21,
      '#value' => t('Cancel'),
    );
    
    
    
    
    //Unset N/A option from frequency and Newsletter Content
    unset($form['field_newsl_frequency']['und']['#options']['_none']);
    unset($form['field_newsl_newsletter_content']['und']['#options']['_none']);
    unset($form['field_newsl_time']['und']['#options']['_none']);
    unset($form['field_newsl_time_period']['und']['#options']['_none']);
    unset($form['field_newsl_day']['und']['#options']['_none']);
    unset($form['field_newsl_date']['und']['#options']['_none']);
    
    //Add required field icon(*) for above fields
    $form['field_newsl_frequency']['und']['#title'] = 'Frequency <span class="form-required" title="This field is required.">*</span>';
    $form['field_newsl_newsletter_content']['und']['#title'] = 'Newsletter Content <span class="form-required" title="This field is required.">*</span>';
    $form['field_newsl_time']['und']['#title'] = 'Time <span class="form-required" title="This field is required.">*</span>';
    $form['field_newsl_time_period']['und']['#title'] = 'Time Period <span class="form-required" title="This field is required.">*</span>';
    $form['field_newsl_day']['und']['#title'] = 'Day <span class="form-required" title="This field is required.">*</span>';
    $form['field_newsl_date']['und']['#title'] = 'Date <span class="form-required" title="This field is required.">*</span>';
    
    //Add submit handler for redirect form to their corresponding page after node has been created susccessfully.
    $form['actions']['submit']['#submit'][] ='itg_newsletter_submit_handler_for_redirect';
    
    //Call function after build
    $form['#after_build'][] = 'itg_newsletter_form_after_build';
  }
}

 /**
 * Custom submit callback for alter message after operation.
 */
function itg_newsletter_submit_handler_for_redirect($form, &$form_state) {
  if (isset($_SESSION['messages']['status'])) {
    unset($_SESSION['messages']['status']);
  }
  
  unset($_GET['destination']); // Unset destination
  
  if(arg(2) == 'edit'){
    $op = 'updated.';
  } else {
     $op = 'created.';
  }
  $title = $form_state['node']->title;
  $content_type = ucwords($form_state['node']->type);
  
  drupal_set_message(t($content_type.' <strong>'.$title.'</strong> has been '.$op));
  
  $form_state['redirect'] = 'manage-newsletter';
}

/**
 * After build function for newsletter
 * @param Array $form
 * @param Array $form_state
 * @return Array
 */
function itg_newsletter_form_after_build($form, &$form_state){
  global $user, $base_url;
  
  //Hide default lavel and add dynamic label
  $form['field_newsl_add_news'][LANGUAGE_NONE]['#title'] = '';
  for($i = 0; $i <= $form['field_newsl_add_news']['und']['#max_delta']; $i++) {
    $count = $i+1;
    $form['field_newsl_add_news']['und'][$i]['#title'] = t('Add News ').$count;  
  }
 
  //Extract type of node
  if(arg(0) == 'node'){
    if(arg(1) == 'add'){
        $type = arg(2);
        $nid = '';
    } else {
      $node = node_load(arg(1));
      $type = $node->type;
      $nid = arg(1);
    }
  }

  //Array used in itg_newsletter.js
  $settings = array();
  $settings['base_url'] = $base_url;
  $settings['uid'] = $user->uid;
  $settings['type'] = ucfirst($type);
  $settings['nid'] = $nid;
  
  drupal_add_js(array('itg_newsletter' => array('settings' => $settings)), array('type' => 'setting'));
  
  //Add JS for itg_newsletter
   drupal_add_js(drupal_get_path('module', 'itg_newsletter') . '/js/itg_newsletter.js', array('weight' => 1));
 
  //Add JS for in-line validation
  $form['#attached']['js'] = array(drupal_get_path('module', 'itg_astro') . '/js/jquery.validate.min.js');
  
  //Unset SEF URL field
  $form['path']['#access'] = FALSE;
  
  //Unset metatag description
  unset($form['metatags']['intro_text']['#markup']);
  unset($form['metatags']['#description']);
   
  return $form;
}

/*******************************View Related hooks*****************************/

/**
 * Implement hook_views_pre_render
 * @param Object $view
 */
function itg_newsletter_views_pre_render(&$view) {
  
  //Add "Create Newsletter" button on listing page of Newsletter
  if ($view->name == "manage_newsletter") {
    $header_content_newsletter = '<span class="count">Count('.$view->total_rows.')&nbsp;</span>';
    $header_content_newsletter .= '<a href="./node/add/newsletter">Create Newsletter</a>';
    $view->attachment_before = $header_content_newsletter;
  }
}

/**
 * Implement hook_form_views_exposed_form_alter
 * @param Array $form
 * @param Array $form_state
 * @param String $form_id
 */
function itg_newsletter_form_views_exposed_form_alter(&$form, &$form_state, $form_id) {
  
   if ($form['#id'] == 'views-exposed-form-manage-newsletter-page') {
     
     //Call function autocomplete to show matching titles
     $form['title']['#autocomplete_path'] = 'content-title-list/newsletter/autocomplete';
     $form['title']['#attributes'] = array('placeholder' => t('Title'));     
   }
}
