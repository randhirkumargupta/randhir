<?php

/**
 * @file
 * itg_widget.module
 *
 * Provides customizations and functions for Widgets.
 *
 */
module_load_include('inc', 'nodequeue_generate', 'nodequeue.actions');

/**
 * {@inheritdoc}
 */
function itg_widget_init() {
    
}

/**
 * {@inheritdoc}
 */
function itg_widget_menu() {
    $items = array();
    $items['remove_from_widgets/%/%/%/%'] = array(
        'page callback' => 'remove_from_widgets',
        'page arguments' => array(1, 2, 3, 4),
        'access arguments' => array('administer nodequeue'),
    );
    $items['remove_from_widgets_section/%/%/%/%/%/%'] = array(
        'page callback' => 'remove_from_widgets_with_section',
        'page arguments' => array(1, 2, 3, 4, 5, 6),
        'access arguments' => array('administer nodequeue'),
    );
    return $items;
}

/**
 * Function used for delete node from draggableviews_structure and nodequeue
 * @param int $nid
 * @param int $qid
 * @param string $view_name
 * @param string $page_name
 */
function remove_from_widgets_with_section($nid, $qid, $view_name, $page_name, $section_tid, $type) {
    $draggable_delete = draggable_view_node_delete_section($view_name, $page_name, $nid, $section_tid, $type);
    if ($draggable_delete) {
        nodequeue_subqueue_remove_node($qid, $nid);
        print "deleted";
    }
    else {
        print "notdeleted";
    }
}

/**
 * Function used to delete form draggableviews_structure table
 * @param string $view_name
 * @param string $page_name
 * @param int $nid
 * @return int
 */
function draggable_view_node_delete_section($view_name, $page_name, $nid, $section_tid, $type) {
    if (!empty($view_name) && !empty($page_name) && !empty($nid) && !empty($section_tid) && !empty($type)) {
        $args = '{"field_story_category_tid":"' . $section_tid . '","type":"' . $type . '"}';
        $num_deleted = db_delete('draggableviews_structure')
                ->condition('view_name', $view_name)
                ->condition('view_display', $page_name)
                ->condition('entity_id', $nid)
                ->condition('args', $args)
                ->execute();
        return $num_deleted;
    }
}

/**
 * Function used for delete node from draggableviews_structure and nodequeue
 * @param int $nid
 * @param int $qid
 * @param string $view_name
 * @param string $page_name
 */
function remove_from_widgets($nid, $qid, $view_name, $page_name) {
    $draggable_delete = draggable_view_node_delete($view_name, $page_name, $nid);
    if ($draggable_delete) {
        nodequeue_subqueue_remove_node($qid, $nid);
        print "deleted";
    }
    else {
        print "notdeleted";
    }
}

/**
 * Function used to delete form draggableviews_structure table
 * @param string $view_name
 * @param string $page_name
 * @param int $nid
 * @return int
 */
function draggable_view_node_delete($view_name, $page_name, $nid) {
    if (!empty($view_name) && !empty($page_name) && !empty($nid)) {
        $num_deleted = db_delete('draggableviews_structure')
                ->condition('view_name', $view_name)
                ->condition('view_display', $page_name)
                ->condition('entity_id', $nid)
                ->execute();
        return $num_deleted;
    }
}

/**
 * {@inheritdoc}
 */
function itg_widget_block_info() {
    $blocks['section_ordering'] = array(
        'info' => t('Widget: Section Ordering'),
    );
    $blocks['top_stories_ordering'] = array(
        'info' => t('Widget: Top Stories Ordering'),
    );
    $blocks['home_page_feature'] = array(
        'info' => t('Widget: Home Page Feature'),
    );
    $blocks['we_may_suggest'] = array(
        'info' => t('Widget: We May Suggest'),
    );
    return $blocks;
}

/**
 * {@inheritdoc}
 */
function itg_widget_block_view($delta = '') {
    $block = array();
    switch ($delta) {
        // section ordering reordering widget case
        case 'section_ordering':
            module_load_include('inc', 'itg_widget', 'includes/section-odering');
            // value is hardcoded need to be change for dyanamic functionality
            $info['section'] = '301'; // tid of section
            $info['content_type'] = 'story'; // content type machine name
            // view name which is stored in draggableviews_structure table
            $info['view_name'] = 'section_wise_content_ordering';
            $block['subject'] = t('Section Ordering');
            $data = itg_widget_section_ordering_data($info);
            $block['content'] = theme("section_ordering", array("data" => $data));
            break;
        case 'we_may_suggest':
            module_load_include('inc', 'itg_widget', 'includes/we-may-suggest');
            $info['section'] = '240'; // tid of section
            $info['content_type'] = 'story'; // content type machine name
            $info['view_name'] = 'we_may_suggest';
            $block['subject'] = t('We may suggest');
            $data = itg_widget_we_may_suggest_data($info);
            $block['content'] = theme("we_may_suggest", array("data" => $data));
            break;
        // Top story ordering reordering widget case
        case 'top_stories_ordering':
            module_load_include('inc', 'itg_widget', 'includes/section-odering');
            $info['view_name'] = 'story_widget'; // view name
            $info['page'] = 'page_2'; // page name
            $data = itg_widget_top_stories_ordering_data($info);
            $block['content'] = theme("top_stories_ordering", array("data" => $data));
            break;
        // home page feature ordering reordering widget case
        case 'home_page_feature':
            module_load_include('inc', 'itg_widget', 'includes/home-page-feature');
            $info['view_name'] = 'home_page_feature_widget'; // view name
            $info['page'] = 'page_2'; // page name
            $data = itg_widget_home_page_feature_data($info);
            $block['content'] = theme("home_page_feature", array("data" => $data));
            break;
    }
    return $block;
}

/**
 * {@inheritdoc}
 */
function itg_widget_form_alter(&$form, &$form_state, $form_id) {
    $setting = array();
    $queue_flag = "";
    $view_name = isset($form_state['view']->name) ? $form_state['view']->name : "";
    /* Load all nodes queues */
    $queues = nodequeue_load_queues(nodequeue_get_all_qids());
    switch ($view_name) {
        // top story
        case 'story_widget':
            watchdog("Widget", "Nodequeue bulk operation settings has been found for : top story");
            $queue_flag = 1; // top story widget qid
            break;
        // home page feature
        case 'home_page_feature_widget':
            watchdog("Widget", "Nodequeue bulk operation settings has been found for : home page feature");
            $queue_flag = 2; // home page feature qid
            break;
        // We may suggest
        case 'we_may_suggest':
            watchdog("Widget", "Nodequeue bulk operation settings has been found for : we may suggest");
            $queue_flag = 3; // home page feature qid
            break;
    }
    if (!empty($queues[$queue_flag])) {
        watchdog("Widget", "setting sent to js");
        // name of nodequeue
        $setting['name'] = $queues[$queue_flag]->name;
        // qid of nodeduque
        $setting['qid'] = $queues[$queue_flag]->qid;
        // title of nodequeue
        $setting['title'] = $queues[$queue_flag]->title;
        // add js for setting
        drupal_add_js(drupal_get_path('module', 'itg_widget') . '/js/itg_widget.main.js', 'file');
        // pass setting to js for bulk operation
        drupal_add_js(array('itg_widget' => array('data' => $setting)), 'setting');
    }
}

/**
 * {@inheritdoc}
 */
function itg_widget_views_bulk_operations_form_alter(&$form, &$form_state, $vbo) {
    
}

/**
 * {@inheritdoc}
 */
function itg_widget_views_pre_render(&$view) {
    if ($view->name == "story_widget" && $view->current_display == 'page_2') {
        $header_content = '<span class="count">Count (' . $view->total_rows . ') </span>';
        $header_content .= l(t('Search Content'), 'story-list-widget', array('query' => array('destination' => arg(0))));
        $view->attachment_before = $header_content;
    }
    elseif ($view->name == "story_widget" && $view->current_display == 'page_1') {
        $header_content = '<span class="count">Count (' . $view->total_rows . ') </span>';
        $header_content .= l(t('Back To Top Stories'), 'story-list-widget-listing');
        $view->attachment_before = $header_content;
    }
    elseif ($view->name == "home_page_feature_widget" && $view->current_display == 'page_2') {
        $header_content = '<span class="count">Count (' . $view->total_rows . ') </span>';
        $header_content .= l(t('Search Content'), 'home-page-feature-widget-listing', array('query' => array('destination' => arg(0))));
        $view->attachment_before = $header_content;
    }
    elseif ($view->name == "home_page_feature_widget" && $view->current_display == 'page_1') {
        $header_content = '<span class="count">Count (' . $view->total_rows . ') </span>';
        $header_content .= l(t('Back to home page feature'), 'home-page-feature-widget');
        $view->attachment_before = $header_content;
    }
    elseif ($view->name == "we_may_suggest" && $view->current_display == 'page_2') {
        $header_content = '<span class="count">Count (' . $view->total_rows . ') </span>';
        $header_content .= l(t('Search Content'), 'we-may-suggest-widget', array('query' => array('destination' => arg(0))));
        $view->attachment_before = $header_content;
    }
}

/**
 * {@inheritdoc}
 */
function itg_widget_theme() {
    $themes = array(
        'section_ordering' => array(
            'template' => 'templates/section-ordering-data',
        ),
        'top_stories_ordering' => array(
            'template' => 'templates/top-stories-ordering-data',
        ),
        'home_page_feature' => array(
            'template' => 'templates/home-page-feature',
        ),
        'we_may_suggest' => array(
            'template' => 'templates/we-may-suggest',
        ),
    );
    return $themes;
}

/**
 * {@inheritdoc}
 */
function get_required_data_from_entity_id($entity_id) {
    return entity_load('node', array($entity_id));
}

/**
 * {@inheritdoc}
 */
function itg_widget_form_views_exposed_form_alter(&$form, &$form_state, $form_id) {
    switch ($form['#id']) {
        case 'views-exposed-form-home-page-feature-widget-page-1':
            $form['title']['#attributes'] = array(
                'placeholder' => t('Title')
            );
            $form['nid']['#attributes'] = array(
                'placeholder' => t('ID')
            );
            break;
        case 'views-exposed-form-story-widget-page-1':
            $form['title']['#attributes'] = array(
                'placeholder' => t('Story Title')
            );
            $form['nid']['#attributes'] = array(
                'placeholder' => t('Story ID')
            );
            break;
    }
}
