<?php

/**
 * @file
 * ITG Story module.
 *
 * Provides customizations and functions for Story.
 *
 */

/**
 * Implements hook_menu().
 */
function itg_story_menu() {
  $items['reporter-details-ajax'] = array(
      'access callback' => TRUE,
      'page callback' => 'itg_story_reporter_details',
      'type' => MENU_CALLBACK,
      'file' => 'includes/itg_story.inc',
  );
  $items['story-title-list/autocomplete'] = array(
    'page callback' => 'itg_story_get_story_title',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/itg_story.inc',
  );
  $items['story-nid-list/autocomplete'] = array(
    'page callback' => 'itg_story_get_story_nid',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/itg_story.inc',
  );
  $items['supplement-list-ajax'] = array(
      'access callback' => TRUE,
      'page callback' => 'itg_story_supplement_details',
      'type' => MENU_CALLBACK,
      'file' => 'includes/itg_story.inc',
  );
  
  return $items;
}


/**
 * Implements hook_block_info().
 */
function itg_story_block_info() {
  $blocks['story_tab_form_block'] = array(
    'info' => t('Story Form Tab Block'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function itg_story_block_view($delta = '') {
  global $user;
  $block = array();
  $data = '';
  switch ($delta) {
    case 'story_tab_form_block':                       
      $block['content'] = theme('story_tab_form_display_block', array('data' => $data));
    break;        
  }
  
  return $block;
}



/**
 * Implements hook_theme().
 */
function itg_story_theme($existing, $type, $theme, $path) {
  $themes = array(
    'story_tab_form_display_block' => array(
      'template' => 'story-form-tab-template',
      'path' => drupal_get_path('module', 'itg_story') . '/templates',
      'variables' => array('data' => NULL),
    ),
    'story_node_form' => array(
      'arguments' => array('form' => NULL),
      'template' => 'story-node-form',
      'path' => drupal_get_path('module', 'itg_story') . '/templates',
      'render element' => 'form',
    ),
  );

  return $themes;
}



/**
 * Implemets hook_form_alter().
 */
function itg_story_form_alter(&$form, &$form_state, $form_id) { 
  global $user, $base_url;
  $settings = array();
  
  switch ($form_id) {
    case 'story_node_form':
      $settings['base_url'] = $base_url;
      drupal_add_js(array('itg_story' => array('settings' => $settings)), array('type' => 'setting'));
      drupal_add_js(drupal_get_path('module', 'itg_story') . '/js/itg_story.js', array('weight' => 1));
      $form['actions']['cancel'] = array(
        '#markup' => l(t('Cancel'), 'story-menegment'),
        '#weight' => 20,
      );
      $form['actions']['submit']['#submit'][] = 'itg_story_form_custom_callback';
    break;      
  }
}

/**
 * Custom submit callback for redirecting story form.
 */
function itg_story_form_custom_callback($form, &$form_state) {  
  if (isset($_SESSION ['messages'])) {
    unset($_SESSION ['messages']);
  }
  
  drupal_set_message('Story has been created successfully.');
  
  $form_state['redirect'] = 'story-management';  
}

/**
 * Implements hook_form_FORMID_alter().  
 */
function itg_story_form_views_exposed_form_alter(&$form, &$form_state, $form_id) {  
   if ($form['#id'] == 'views-exposed-form-strory-menegment-page') {
     $form['title']['#autocomplete_path'] = 'story-title-list/autocomplete';
     $form['title']['#attributes'] = array('placeholder' => t('Title'));     
     $form['nid']['#autocomplete_path'] = 'story-nid-list/autocomplete';
     $form['nid']['#attributes'] = array('placeholder' => t('Nid'));
   }   
}
