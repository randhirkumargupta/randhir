<?php

/**
 * Inc file contains the functions
 */

/**
 * main function for generate rootCategoryContentPageFeed xml feed
 *
 * @return string $output
 */
function rootCategoryContentPageFeed() {
    $output = "";
    $conf_array = tidConfig();
    $storytag = array();
    $tid_arg = arg(1);
    if ($tid_arg && is_numeric($tid_arg)) {
        $section_list[] = $tid_arg;
    } else {
        $section_list = $conf_array['left_main_tid'];
    }
    $list_count = 0;
    $catFile = "";
    $term_feed_path = "public://xml_it/stories";
    $return_flag = "";
    foreach ($section_list as $key => $value) {
        $node_count = customNodeCount('story', $value);
        $term_status = itg_category_manager_term_state(trim($value), CATEGORY_MANAGMENT);
        if ($node_count > 0 && $term_status == 1) {
            $cattid = $value;
            $term = taxonomy_term_load($value);
            $term_name = $term->name;
            // get story list tag
            $storytag = generateLeftMainCategoryPage($cattid, $term_name);
            $list_count = $storytag['lcount'];
            $catFile = "";
            // cat xml feed file name
            $catFile = drupal_strtolower(str_replace(" ", "-", $term_name));
            $term_name = drupal_strtolower(str_replace("&", "and", $term_name));
            $catFile = $catFile . ".xml";
            // generate cat xml file string
            if ($storytag['data'] != "") {
                $output = "";
                $output .= getMobileFeedXmlHeader();
                $output .= "<idsection>" . $cattid . "</idsection><section>" . $term_name . "</section><totalarticle>" . $list_count . "</totalarticle><start_index>0</start_index><end_index>" . $list_count . "</end_index>";
                $output .= $storytag['data'];
                $output .= getMobileFeedXmlFooter();
                // xml file writing..
                if ($output) {
                    $return_flag .= writeFeedFile($term_feed_path, $catFile, $output);
                }
            }
        }
    }
    header('Content-Type: application/xml; charset=utf-8');
    echo $output;
    drupal_exit();
}

/**
 * function for generate storyCategoryPage xml feed
 * @pram int $tid
 * @pram string $term_name
 *
 * @return array $data
 */
function generateLeftMainCategoryPage($tid, $term_name) {
    $redis_key = "itgd_generateLeftMainCategoryPage" . $tid;
    $result_get = getRedis($redis_key);
    if ($result_get['key_value'] != "") {
        $data_str = $result_get['key_value'];
        $data_ar = explode("##listcount##", $data_str);
        $data['lcount'] = $data_ar[0];
        $data['data'] = $data_ar[1];
    } else {
        // variable declaration
        global $base_url;
        $node_count = "";
        $ttl = DEFAULT_REDIS_EXPIRE_TIME;
        $output = "";
        $data = array();
        $tid_list = array();
        $tid_list[] = $tid;
        $listcount = 0;
        $range_max = 20;
        $range_min = 0;
        $order_by = 'ASC';
        $type = "story";
        $term_name = drupal_strtolower(str_replace(" ", "-", $term_name));
        $term_name = drupal_strtolower(str_replace("&", "and", $term_name));
        {
            $listcount = 0;
            $query = db_select('taxonomy_index', 'ti');
            $query->leftJoin('node', 'n', 'n.nid=ti.nid');
            //join  for field value
            $query->leftJoin('field_data_field_story_extra_large_image', 'eli', 'eli.entity_id=n.nid');
            $query->leftJoin('field_data_field_story_large_image', 'li', 'li.entity_id=n.nid');
            $query->leftJoin('field_data_field_story_medium_image', 'mi', 'mi.entity_id=n.nid');
            $query->leftJoin('field_data_field_story_small_image', 'si', 'si.entity_id=n.nid');
            $query->leftJoin('field_data_field_story_extra_small_image', 'esi', 'esi.entity_id=n.nid');
            $query->leftJoin('field_data_field_story_kicker_text', 'kt', 'kt.entity_id=n.nid');
            $query->leftJoin('field_data_body', 'dbody', 'dbody.entity_id=n.nid');
            $query->leftJoin('field_data_field_video_duration', 'vd', 'vd.entity_id=n.nid');
            $query->leftJoin('file_managed', 'eli_file', 'eli_file.fid=eli.field_story_extra_large_image_fid');
            $query->leftJoin('file_managed', 'li_file', 'li_file.fid=li.field_story_large_image_fid');
            $query->leftJoin('file_managed', 'mi_file', 'mi_file.fid=mi.field_story_medium_image_fid');
            $query->leftJoin('file_managed', 'si_file', 'si_file.fid=si.field_story_small_image_fid');
            $query->leftJoin('file_managed', 'esi_file', 'esi_file.fid=esi.field_story_extra_small_image_fid');
            $query->leftJoin('field_data_field_common_related_content', 'rc', 'rc.entity_id=n.nid');
            $query->fields('eli_file', array('uri'));
            $query->fields('li_file', array('uri'));
            $query->fields('mi_file', array('uri'));
            $query->fields('si_file', array('uri'));
            $query->fields('esi_file', array('uri'));
            $query->fields('mi', array('field_story_medium_image_fid'));
            $query->fields('si', array('field_story_small_image_fid'));
            $query->fields('rc', array('field_common_related_content_value'));
            $query->fields('kt', array('field_story_kicker_text_value'));
            $query->fields('vd', array('field_video_duration_value'));
            $query->fields('n', array('nid', 'title', 'created', 'type', 'uid'));
            $feed_date = date('Y-m-d', strtotime(FEED_DATA_LIMIT));
            $feed_date_range = date(strtotime($feed_date));
            $query->condition('ti.tid', $tid, '=')->condition('n.created', $feed_date_range, '>=')->condition('n.status', 1)->condition('n.type', $type)->orderBy('n.created', 'DESC')->range($range_min, $range_max);
            $result = $query->execute()->fetchAll(PDO::FETCH_ASSOC);
            if (count($result) > 0) {
                foreach ($result as $reskey => $resvalue) {
                    $listcount++;
                    $title = html_entity_decode($resvalue['title']);
                    $type = $resvalue['type'];
                    $nid = $resvalue['nid'];
                    $created = $resvalue['created'];
                    $is_fav = getNidIsFavorite($nid);
                    $alias = drupal_get_path_alias('node/' . $nid . '');
                    $weburl = FRONT_URL . "/" . $alias;
                    // auto
                    if ($tid == '1206689' || $tid == '1206688') {
                        $loop_file_name = 'story' . $nid . ".xml";
                    } else {
                        $loop_file_name = $term_name . $nid . ".xml";
                    }
                    // file url
                    $file_small_img_url = completeFilePath($resvalue['field_story_small_image_fid']);
                    $file_medium_img_url = completeFilePath($resvalue['field_story_medium_image_fid']);
                    //related content
                    $related = relatedContentNodeType($resvalue['field_common_related_content_value'], $type);
                    // create date formating
                    $create_date = date("F d, Y", $created);
                    $create_datetime = date(DATE_ATOM, $created);
                    $output .= "<article><title><![CDATA[" . $title . "]]></title><thumbimage><![CDATA[" . $file_small_img_url . "]]></thumbimage><kickerimage><![CDATA[" . $file_medium_img_url . "]]></kickerimage><url>" . $loop_file_name . " </url><create_date>" . $create_date . "</create_date><create_datetime>" . $create_datetime . "</create_datetime><relateds><photos>" . $related['photos'] . "</photos><videos>" . $related['videos'] . "</videos><stories>" . $related['stories'] . "</stories></relateds></article>";
                    // generate story detail page
                    $fl = generateStoryDetailPageFeed($nid, $loop_file_name);
                }
            } else {
                $output .= "<article><title><![CDATA[]]></title><thumbimage><![CDATA[]]></thumbimage><kickerimage><![CDATA[]]></kickerimage><url></url><create_date></create_date><create_datetime></create_datetime><relateds><photos></photos><videos></videos><stories></stories></relateds></article>";
            }
        }
        $data['lcount'] = $listcount;
        $data['data'] = $output;
        $data_fi = $listcount . "##listcount##" . $output;
        // set into redis
        $result_set = setRedis($redis_key, $data_fi, $ttl);
    }
    return $data;
}
