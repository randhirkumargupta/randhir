<?php

/**
 * @file
 * The ITG Common module.
 *
 * Provides common functionality and customizations.
 *
 */
define('AUTHOR_GUEST', 4);
define('INTERN', 7);
define('SUBEDITOR_SR_SUB', 9);
define('COPY_EDITOR', 5);
define('SECTION_EDITOR', 8);
define('SECTION_EDITOR_ANCHOR', 20);
define('EDITOR', 6);
define('SITE_ADMIN', 10);
define('SEO', 19);
define('CORRESPONDENT', 13);
define('CO_ORDINATOR', 11);
define('PHOTO_COORDINATOR', 16);
define('PHOTO_HEAD', 17);
define('DESIGN_HEAD', 14);
define('COPY_DESK', 12);
define('DESIGNER', 15);
define('PHOTOGRAPHER', 18);
define('ADMINISTRATOR', 3);
define('CATEGORY_MANAGMENT', 4);
define('EXPERT', 21);

/**
 * Function for debugging arrays and objects.
 * @param $arg
 *  array or object to be printed.
 */
function p($arg) {
  print '<pre>';
  print_r($arg);
  die;
}

function pr($arg) {
  print '<pre>';
  print_r($arg);
  print '</pre>';
}

/**
 * Helper function to populate the second dropdown.
 * @param type $id
 * @return $data
 */
function itg_common_dropdown_supplement($id = '') {

  // Fetch query for supplements 
  // $data = '';
  $select = t('- None -');
  $data = array('_none' => $select);
    
  $query = db_select('field_data_field_supp_select_magazine', 'm');
  $query->join('node', 'n', 'm.entity_id = n.nid');
  $query->fields('m', array('entity_id'));
  $query->fields('n', array('title'));
  $query->condition('field_supp_select_magazine_target_id', $id, '=');
  // $query->condition('n.type', $content_type, '=');  

  $result = $query->execute();
  while ($record = $result->fetchAssoc()) {
    $data[$record['entity_id']] = $record['title'];
  }

  return $data;
}

/**
 * Implements hook_form_alter().
 */
function itg_common_form_alter(&$form, &$form_state, $form_id) {
  global $user;
 
  // code to change page title on node edit
  if (!empty($form['nid']['#value'])) {
    /* @var $node_type string */
    $node_type = $form['#node']->type;
    $node_type = str_replace("_", " ", $node_type);
    $node_type = ucfirst($node_type);
    $node_title = $form['#node']->title;
    $edit_title = 'Edit ' . $node_type . ' - ' . $node_title;
    drupal_set_title($edit_title);
  }


  if ($form_id != 'ask_an_expert_node_form') {
    if (isset($form['title']['#title'])) {
      $form['title']['#description'] = $form['title']['#title'];
    }
  }
  
  // Button name change some content
  if ($form_id == 'mega_review_critic_node_form' && (empty($form['#node']->nid) || (!empty($form['#node']->nid) && $form['#node']->status == 0))) {
    
    $form['actions']['itg_custom_button'] = array('#type' => 'submit',
                                                  '#value' => t('Save as Draft'),
                                                  '#submit' => array('node_form_submit'));
    $form['actions']['submit']['#value'] = t('Publish');
  }
  
  // Extra meta tags element hide from form
  if ($form_id == 'mega_review_critic_node_form' || $form_id == 'story_node_form' || $form_id == 'itg_celebrity_profile_node_form') {
    if (!array_key_exists(ADMINISTRATOR, $user->roles)) {
      $form['#after_build'][] = 'itg_meta_tags_extra_element_hide';
    }
    $form['#after_build'][] = 'itg_common_cancel_button';   
  }
  
  //Auto Generate image according photogallery
   if ($form_id == 'photogallery_node_form' || $form_id == 'story_node_form' || $form_id == 'recipe_node_form' || $form_id == 'breaking_news_node_form' || $form_id == 'mega_review_critic_node_form') {
     // $form['imagecreate'] = array('#type' => 'markup', '#markup' => '<a class="img-crt button" href="javascript:;">Generate Image</a>');
     $form['field_story_extra_large_image']['#suffix'] = '<a class="img-crt button" href="javascript:;">Generate Image</a>';
     if(isset($form_state['build_info']['args'][0]->field_story_extra_large_image)){
       $cover_id = $form_state['build_info']['args'][0]->field_story_extra_large_image[LANGUAGE_NONE][0]['fid'];
       $settings = array();
       $file = file_load($cover_id);
       $settings['large_node_uri'] = $file->uri;
       drupal_add_js(array('itg_common' => array('settings' => $settings)), array('type' => 'setting', 'scope' => 'footer'));
     }

     $form['#after_build'][] = 'itg_common_image_generate';
   }
}

/**
 * Implement after build for image generate according large image. 
 * @param Array $form
 * @param Array $form_state
 * @return 
 */
function itg_common_image_generate($form, &$form_state){
  $coverid = $form_state['values']['field_story_extra_large_image'][LANGUAGE_NONE][0]['fid'];
  if (isset($coverid)) {
    $settings = array();
    $file = file_load($coverid);
    $settings['large_uri'] = $file->uri;
    drupal_add_js(array('itg_common' => array('settings' => $settings)), array('type' => 'setting', 'scope' => 'footer'));
    drupal_add_js(drupal_get_path('module', 'itg_common') . '/js/itg_common_image.js', array('weight' => 3));
  }
  return $form;
}

/**
 * Implements hook__form_field_ui_field_edit_form_alter
 * @param array $form array of form elements
 * @param arra $form_state array of submitted values
 * @param string $$form_id id of the current form
 */
function itg_common_form_field_ui_field_edit_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'field_ui_field_edit_form') {
    // Increase the max cardinality to 12
    $range = drupal_map_assoc(range(1, 12));
    $new_options = array(FIELD_CARDINALITY_UNLIMITED => t('Unlimited')) + $range;

    // Change the options
    $form['field']['cardinality']['#options'] = $new_options;
  }
}

/**
 * Extra meta tags element hide from form 
 * @param Array $form
 * @param Array $form_state
 * @return 
 */
function itg_meta_tags_extra_element_hide($form, &$form_state) {
  global $user, $base_url;  
  
  unset($form['additional_settings']['group']['#groups']['additional_settings'][5]['#description']);
  unset($form['metatags']['intro_text']['#markup']);

  $form['path']['pathauto']['#title'] = t('Generate automatic Sef URL');
  $form['path']['#prefix'] = '<div class="story-title">'.t('Meta Tags').'</div>';

  drupal_add_js('jQuery(document).ready(function() {
             // hide some eliment of metatags
             jQuery(".vertical-tabs-list").hide();
             jQuery("#edit-metatags").show();
             jQuery("#edit-metatags-und-advanced").hide();
             jQuery(".form-item-metatags-und-abstract-value").hide();              
           });', array('type' => 'inline', 'scope' => 'footer'));

  return $form;
}

/**
 * Extra meta tags element hide from form 
 * @param Array $form
 * @param Array $form_state
 * @return 
 */
function itg_common_cancel_button($form, &$form_state) {
  global $user, $base_url;
  
  if (!isset($_REQUEST['destination'])) {
    $destination = '';
  } else {
      $destination_array = explode('?', $_REQUEST['destination']);
      $destination = $destination_array[0];
  }

  $form['actions']['cancel'] = array(
    '#markup' => l(t('Cancel'), $destination, array('attributes' => array('class' => 'button'))),
    '#weight' => 20,
  );
  
  return $form;
}

/**
 * Implements views header link 
 * @param type $view Description
 */
function itg_common_views_pre_render(&$view) {  
  if ($view->name == "byline_list") {
    global $user; // Get user information    
    $header_content = l(t('Create Byline'), 'node/add/reporter', array('query' => array('destination' => 'byline-list')));    
    $view->attachment_before = $header_content;
  }    
}

/**
 * Implements hook_form_FORMID_alter().
 * @param type $form
 * @param type $form_state
 * @param type $form_id  
 */
function itg_common_form_views_exposed_form_alter(&$form, &$form_state, $form_id) {    
  if (isset($form['title'])) {
   $form['title']['#maxlength']= 255;

   // remove space from title search field.
   drupal_add_js('jQuery(document).ready(function() {                  
                 jQuery(".form-submit").click(function() {            
                 var title = jQuery.trim(jQuery("#edit-title").val());       
                 if (title == "") {
                   jQuery("#edit-title").val("");
                 }
                 
                 var nid = jQuery.trim(jQuery("#edit-nid").val());       
                 if (nid == "") {
                   jQuery("#edit-nid").val("");
                 }
                 
               });              
          });', array('type' => 'inline', 'scope' => 'footer'));
  }
}

/**
 * Implement hook_date_popup_process_alter().
 */
function itg_common_date_popup_process_alter(&$element, &$form_state, &$context) {
  if ($form_state['build_info']['form_id'] != 'views_exposed_form') {
    $element['#datepicker_options'] = array(
      'minDate' => "+0D",
    );
    $element['date'] = date_popup_process_date_part($element);
  }
}

/**
 * Implementation of hook_node_presave().
 * @param Array $node
 */
function itg_common_node_presave($node) { 
  if ($node->type == 'mega_review_critic') {
    if ($node->op == 'Save as Draft') {
      $node->status = 0;
    }else {
      $node->status = 1;
    }
  }
}

/**
 * Implements hook_form_FORMID_alter().
 * @param type $form
 * @param type $form_state
 * @param type $form_id  
 */
function itg_common_form_node_delete_confirm_alter(&$form, &$form_state, $form_id) {  
  // redirect node after delete
  if (!isset($_REQUEST['destination'])) {
    $destination = '';
  } else {
      $destination_array = explode('?', $_REQUEST['destination']);
      $_GET['destination'] = $destination_array[0];      
  }
}