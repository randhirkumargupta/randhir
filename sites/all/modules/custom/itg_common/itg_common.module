<?php

/**
 * @file
 * The ITG Common module.
 *
 * Provides common functionality and customizations.
 *
 */
define('AUTHOR_GUEST', 4);
define('INTERN', 7);
define('SUBEDITOR_SR_SUB', 9);
define('COPY_EDITOR', 5);
define('SECTION_EDITOR', 8);
define('SECTION_EDITOR_ANCHOR', 20);
define('EDITOR', 6);
define('SITE_ADMIN', 10);
define('SEO', 19);
define('CORRESPONDENT', 13);
define('CO_ORDINATOR', 11);
define('PHOTO_COORDINATOR', 16);
define('PHOTO_HEAD', 17);
define('DESIGN_HEAD', 14);
define('COPY_DESK', 12);
define('DESIGNER', 15);
define('PHOTOGRAPHER', 18);
define('ADMINISTRATOR', 3);
define('CATEGORY_MANAGMENT', 4);
define('EXPERT', 21);

/**
 * Function for debugging arrays and objects.
 * @param $arg
 *  array or object to be printed.
 */
function p($arg) {
  print '<pre>';
  print_r($arg);
  die;
}

function pr($arg) {
  print '<pre>';
  print_r($arg);
  print '</pre>';
}

/**
 * Helper function to populate the second dropdown.
 * @param type $id
 * @return $data
 */
function itg_common_dropdown_supplement($id = '') {

  // Fetch query for supplements 
  $data = '';
  $query = db_select('field_data_field_supp_select_magazine', 'm');
  $query->join('node', 'n', 'm.entity_id = n.nid');
  $query->fields('m', array('entity_id'));
  $query->fields('n', array('title'));
  $query->condition('field_supp_select_magazine_target_id', $id, '=');
  // $query->condition('n.type', $content_type, '=');  

  $result = $query->execute();
  while ($record = $result->fetchAssoc()) {
    $data[$record['entity_id']] = $record['title'];
  }

  //If record found, then return array else return blank
  if (empty($data)) {
    $data = array('_none' => '-Select-');
  }

  return $data;
}

/**
 * Implements hook_form_alter().
 */
function itg_common_form_alter(&$form, &$form_state, $form_id) {
  global $user;
  // P($form_id);
  // Extra meta tags element hide from form
  if ($form_id == 'mega_review_critic_node_form' || $form_id == 'story_node_form') {
    $form['#after_build'][] = 'itg_meta_tags_extra_element_hide';
  }
}

/**
 * Implements hook__form_field_ui_field_edit_form_alter
 * @param array $form array of form elements
 * @param arra $form_state array of submitted values
 * @param string $$form_id id of the current form
 */
function itg_common_form_field_ui_field_edit_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'field_ui_field_edit_form') {
    // Increase the max cardinality to 12
    $range = drupal_map_assoc(range(1, 12));
    $new_options = array(FIELD_CARDINALITY_UNLIMITED => t('Unlimited')) + $range;

    // Change the options
    $form['field']['cardinality']['#options'] = $new_options;
  }
}

/**
 * Extra meta tags element hide from form 
 * @param Array $form
 * @param Array $form_state
 * @return 
 */
function itg_meta_tags_extra_element_hide($form, &$form_state) {
  global $user, $base_url;

  if (!isset($_REQUEST['destination'])) {
    $_REQUEST['destination'] = '';
  }

  $form['actions']['cancel'] = array(
    '#markup' => l(t('Cancel'), $_REQUEST['destination'], array('attributes' => array('class' => 'button'))),
    '#weight' => 20,
  );

  unset($form['additional_settings']['group']['#groups']['additional_settings'][5]['#description']);
  unset($form['metatags']['intro_text']['#markup']);

  $form['path']['pathauto']['#title'] = 'Generate automatic Sef URL';
  $form['path']['#prefix'] = '<div class="story-title">Meta Tags</div>';

  drupal_add_js('jQuery(document).ready(function() {
             // hide some eliment of metatags
             jQuery(".vertical-tabs-list").hide();
             jQuery("#edit-metatags").show();
             jQuery("#edit-metatags-und-advanced").hide();
             jQuery(".form-item-metatags-und-abstract-value").hide();              
           });', array('type' => 'inline', 'scope' => 'footer'));

  return $form;
}

/**
 * Implements views header link 
 * @param type $view Description
 */
function itg_common_views_pre_render(&$view) {
  
  if ($view->name == "byline_list") {
    global $user; // Get user information
    
    $header_content = l('Create Byline', 'node/add/reporter', array('query' => array('destination' => 'byline-list')));
    
    $view->attachment_before = $header_content;
  }    
}

/**
 * Implements hook_form_FORMID_alter().
 * @param type $form
 * @param type $form_state
 * @param type $form_id  
 */
function itg_common_form_views_exposed_form_alter(&$form, &$form_state, $form_id) {    
   if (isset($form['title'])) {
    $form['title']['#maxlength']= 255;
   }
}