<?php

/**
 * Implements hook_menu().
 * @return array $items
 */
function itg_layout_manager_menu() {
  $items['itg-layout-manager'] = array(      
      'page callback' => 'itg_layout_admin',
      'access arguments' => array('access itg story'),
      'type' => MENU_CALLBACK,      
  );
  
  $items['insert-layout-setting-ajax'] = array(      
      'page callback' => 'insert_layout_setting_ajax',
      'access arguments' => array('access itg story'),
      'type' => MENU_CALLBACK,      
  );
  
  return $items;
}

/**
 * Implements hook_block_info().
 * @return array $blocks
 */
function itg_layout_manager_block_info() {
  $blocks['layout_manager_form_block'] = array(
    'info' => t('Layout manager form Block'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  
  $blocks['layout_widget_list_block'] = array(
    'info' => t('Layout widget list block'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  
  $blocks['layout_button_block'] = array(
    'info' => t('Layout button block'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  
  return $blocks;
}

/**
 * Implements hook_block_view()
 * {@inheritdoc}
 */
function itg_layout_manager_block_view($delta = '') {
  
  $block = array();
  
  switch ($delta) {
    case 'layout_manager_form_block':
      $layout_form = drupal_get_form('itg_layout_manager_page_setting_form');
      $data['layout_form'] = drupal_render($layout_form); 
      $block['content'] = theme('layout_manager_block', array('data' => $data));
    break;
    
    case 'layout_widget_list_block':
      $data = '';
      $block['content'] = theme('layout_widgets_list_block', array('data' => $data));
    break;
    
    case 'layout_button_block':
      $data = '';
      $block['content'] = theme('layout_buttons_block', array('data' => $data));
    break;
  }
  
  return $block;
}

/**
 * Implements page callback.
 * @return
 */

function itg_layout_admin() {
  if (isset($_GET['section']) && isset($_GET['template_name'])) {
   $data = get_layout_details($_GET['section'], $_GET['template_name']); 
  }
  
   //$data = '';
  return theme('itg_layout_admin_page', array('widget_data' => $data));  
}

/**
 * Implements hook_theme().
 * {@inheritdoc}
 */
function itg_layout_manager_theme($existing, $type, $theme, $path) {
  
  $template_name =  isset($_GET['template_name']) ? $_GET['template_name'] : "";
  
  if (!empty($template_name)) {
    $layout =  array(
      'arguments' => array('form' => NULL),
      'template' => $template_name,
      'path' => drupal_get_path('theme', FRONT_THEME_NAME) . '/templates/layouts/'.  arg(1)      
    );
  } 
  else {
      $layout = array();
  }
  
  $themes = array(
    'layout_manager_block' => array(
      'arguments' => array('form' => NULL),
      'template' => 'layout-manager-form-block',      
      'path' => drupal_get_path('module', 'itg_layout_manager') . '/templates',     
    ),
    'itg_layout_admin_page' => $layout,
    'layout_widgets_list_block' => array(
      'arguments' => array('form' => NULL),
      'template' => 'layout-widgets-list-block',      
      'path' => drupal_get_path('module', 'itg_layout_manager') . '/templates',     
    ),
    'layout_buttons_block' => array(
      'arguments' => array('form' => NULL),
      'template' => 'layout-buttons-block',      
      'path' => drupal_get_path('module', 'itg_layout_manager') . '/templates',     
    ),
  );
  
  return $themes;
}

/**
 * Get template name list
 * @param string $tpl_dir 
 * @return array $data
 */
function get_template_name($tpl_dir) {
  
  $dir = getcwd().'/'.drupal_get_path('theme', FRONT_THEME_NAME) . '/templates/layouts/'.$tpl_dir;
  
  $scanned_directory = array_diff(scandir($dir, 1), array('..', '.'));
  
  $data = array("_none" => "--template--");
  
  foreach ($scanned_directory as $key => $val) {
    $tpl = substr($val,0,-8);
    $data[$tpl] = $tpl;    
  }
  
  return $data;
}

/**
 * Implementation of hook_form for itg_layout_manager_form
 * {@inheritdoc}
 */
function itg_layout_manager_page_setting_form($form, &$form_state) {
  
  $arg1 = arg(1);
  
  global $base_url;
  
  $settings['base_url'] = $base_url;  
  
  drupal_add_js(array('itg_story' => array('settings' => $settings)), array('type' => 'setting'));
  
  drupal_add_js(drupal_get_path('module', 'itg_layout_manager') . '/js/itg_layout_manager.js', array('weight' => 1));
  
  
  $tax = taxonomy_get_tree(CATEGORY_MANAGMENT, $parent = 0, $max_depth = 1, $load_entities = FALSE);
  
  if ($arg1 == 'section') {
    $op = array("_none" => "--Section--");
    foreach ($tax as $key => $val) {
      $op[$val->name] = $val->name;
    }
  } 
  else if ($arg1 == 'home') {
      $op = array('home_page' => 'Home Page');
  }
  
  $template = get_template_name($arg1);
    
  $form['section'] = array(
       '#type' => 'select',
       '#title' => t('Select Section'),
       '#options' => $op,
       '#default_value' => isset($_GET['section']) ? $_GET['section'] : "",       
   );
  
  $form['template_name'] = array(
       '#type' => 'select',
       '#title' => t('Select template'),
       '#options' => $template,
       '#default_value' => isset($_GET['template_name']) ? $_GET['template_name'] : "",       
   );
   
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Go'),
  );

  return $form;
}

/**
 * Custom submit callback for itg_layout_manager_form_submit.
 * {@inheritdoc}
 */
function itg_layout_manager_page_setting_form_submit($form, &$form_state) { 
  $options = array('query' => array('section' => $form_state['input']['section'], 'template_name' => $form_state['input']['template_name']));
  drupal_goto('itg-layout-manager/' . arg(1), $options);  
}



function insert_layout_setting_ajax() {
  global $user;  
  $arg = arg();  
  //watchdog("test shravan", '<pre>'. print_r($_GET, TRUE) .'</pre>');
      
  // Get tpl id by section_name and template_name
  $tpl_id = get_template_id($_GET['section_name'], $_GET['template_name']);

  // get layout id by tpl id and block name    
  $layout_id = get_layout_manager_id($tpl_id, $_GET['block_name']);

  // code for layout setting
  if ($arg[1] == 'layout') {
    // insert layout tpl details
    if (empty($tpl_id)) {        
      $query_layout_tpl = db_insert('itg_layout_tpl');
      $query_layout_tpl->fields(array(
        'section_name' => $_GET['section_name'],
        'template_name' => $_GET['template_name'],
        'created_by' => $user->uid,
        'created_date' => time(),
        'status' => 0
      ));
      $tpl_id = $query_layout_tpl->execute();       
    }

    // Insert and update layout widget setting details
    if (empty($layout_id)) {
      $query_layout_manager = db_insert('itg_layout_manager');
      $query_layout_manager->fields(array(
        'layout_id' => $tpl_id,        
        'widget_name' => $_GET['widget_name'],
        'block_name' => $_GET['block_name'],                 
        'status' => true
      ));
      $query_layout_manager->execute();
    } 
    else {
      db_update('itg_layout_manager')
            ->fields(array('widget_name' => $_GET['widget_name']))
            ->condition('id', $layout_id)->execute();
    }
    
    // Set widget in block
    
    
    print $output;
  }
  elseif ($arg[1] == 'publish') {
    db_update('itg_layout_tpl')
           ->fields(array('status' => $_GET['status_val']))
           ->condition('id', $tpl_id)->execute();
    exit;
  }
  elseif ($arg[1] == 'title') {
    db_update('itg_layout_manager')
            ->fields(array('block_title' => $_GET['block_title']))
            ->condition('id', $layout_id)->execute();
    exit;
    // watchdog("test shravan", '<pre>'. print_r($_GET, TRUE) .'</pre>');
  }
  
}

/**
 * Get layout tpl id
 * @param string $section_name
 * @param string $template_name 
 * @return int $id
 */
function get_template_id($section_name, $template_name) {
  $select_query_layout_tpl = db_select('itg_layout_tpl', 'tpl');
  $select_query_layout_tpl->fields('tpl', array('id'));  
  $select_query_layout_tpl->condition('section_name', $section_name)
        ->condition('template_name', $template_name);
  
  $id = $select_query_layout_tpl->execute()->fetchField();
  
  return $id;
}

/**
 * Get layout manager id
 * @param int $layout_id
 * @param string $block_name 
 * @return int $id
 */
function get_layout_manager_id($layout_id, $block_name) {
  $select_query_layout_tpl = db_select('itg_layout_manager', 'layout');
  $select_query_layout_tpl->fields('layout', array('id'));  
  $select_query_layout_tpl->condition('layout_id', $layout_id)
        ->condition('block_name', $block_name);
  
  $id = $select_query_layout_tpl->execute()->fetchField();
  
  return $id;
}

/**
 * Get layout details
 * @param int $layout_id
 * @param string $block_name 
 * @return int $id
 */
function get_layout_details($section_name, $template_name) {
  $itg_query = db_select('itg_layout_tpl', 'layout_tpl');
  $itg_query->fields('layout_manager', array('widget_name', 'block_name', 'block_title'));
  // $itg_query->fields('layout_manager', array('block_name'));
  // $itg_query->fields('layout_manager', array('widget_name'));
  $itg_query->join('itg_layout_manager', 'layout_manager', 'layout_tpl.id = layout_manager.layout_id');  
  $itg_query->condition('layout_tpl.section_name', $section_name);    
  $itg_query->condition('layout_tpl.template_name', $template_name);
  
  $itg_result = $itg_query->execute()->fetchAll();
  
  foreach ($itg_result as $itg_val) {
    $result['widget_name'] = $itg_val->widget_name;
    $result['block_title'] = $itg_val->block_title;
    
    if (isset($itg_val->widget_name)) {
      $widget = get_itg_widget($itg_val->widget_name);
    } 
    else {
      $widget = '<p>Drag template widgets here !</p>';
    }
    
    $result['widget'] = $widget;
    $data[$itg_val->block_name] = $result;
  }
  
  return $data; 
  
}

/**
 * Get itg widget block by name 
 * @param string $widget_name 
 * @return array $render_array
 */
function get_itg_widget($widget_name) {  
  $block = block_load('itg_widget', $widget_name);
  $render_array = _block_get_renderable_array(_block_render_blocks(array($block)));
  return render($render_array);
}

/**
 * Implements hook_manager_preprocess_page().
 * @return array $items
 */
function itg_layout_manager_preprocess_page(&$vars) {
  global $theme;
  
  $is_fron_page = drupal_is_front_page();
 
  if (!empty($is_fron_page) && $theme == FRONT_THEME_NAME) {
    $section = 'home_page';
    $template_name = 'page--front';
    $data = get_layout_details($section, $template_name);    
    $vars['widget_data'] = $data;
  }  
  
}
