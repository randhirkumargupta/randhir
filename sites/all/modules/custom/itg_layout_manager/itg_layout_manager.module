<?php

/**
 * @file
 * The ITG layout manager module.
 *
 * Provides layout manager functionality and customizations.
 *
 */
//All common function of layout manager.
module_load_include('inc', 'itg_layout_manager', 'includes/itg_layout_manager.helper');

//All form releted function of layout manager.
module_load_include('inc', 'itg_layout_manager', 'includes/itg_layout_manager.form');

function itg_layout_manager_init() {
  
}

/**
 * Implements hook_menu().
 * @return array $items
 */
function itg_layout_manager_menu() {

  $items['itg-layout-manager'] = array(
      'page callback' => 'itg_layout_admin',
      'access arguments' => array('access itg story'),
      'type' => MENU_CALLBACK,
      'file' => 'includes/itg_layout_manager.inc',
  );

  $items['insert-layout-setting-ajax'] = array(
      'page callback' => 'insert_layout_setting_ajax',
      'access arguments' => array('access itg story'),
      'type' => MENU_CALLBACK,
      'file' => 'includes/itg_layout_ajax.inc',
  );

  $items['itg-layout-list'] = array(
      'page callback' => 'itg_layout_list',
      'access arguments' => array('access itg story'),
      'type' => MENU_CALLBACK,
      'file' => 'includes/itg_layout_manager.inc',
  );

  $items['section-widgets-ajax/%'] = array(
      'page callback' => 'section_widgets_ajax',
      'access arguments' => array('access itg story'),
      'type' => MENU_CALLBACK,
      'file' => 'includes/itg_layout_autocomplete.inc',
  );

  // Autocomplete callback for category name
  $items['itg_category_autocomplete_list/%'] = array(
      'page callback' => 'itg_category_autocomplete_list',
      'access arguments' => array('access itg story'),
      'type' => MENU_CALLBACK,
      'file' => 'includes/itg_layout_autocomplete.inc',
  );

  $items['itg-admin-layout-list'] = array(
      'page callback' => 'itg_layout_list_delete',
      'access arguments' => array('access administrator'),
      'type' => MENU_CALLBACK,
      'file' => 'includes/itg_layout_manager.inc',
  );
  $items['itg-delete-layout/%'] = array(
      'page callback' => 'itg_layout_delete',
      'access arguments' => array('access administrator'),
      'type' => MENU_CALLBACK,
      'file' => 'includes/itg_layout_manager.inc',
  );

  $items['section-widgets-list-delete'] = array(
      'page callback' => 'itg_section_widgets_list_delete',
      'access arguments' => array('access administrator'),
      'type' => MENU_CALLBACK,
      'file' => 'includes/itg_layout_manager.inc',
  );

  $items['itg-update-table'] = array(
      'page callback' => 'itg_update_table',
      'access arguments' => array('access administrator'),
      'type' => MENU_CALLBACK,
      'file' => 'includes/itg_layout_manager.inc',
  );

  return $items;
}

/**
 * Implements hook_block_info().
 * @return array $blocks
 */
function itg_layout_manager_block_info() {

  $blocks['header_block'] = array(
      'info' => t('Header Block'),
      'cache' => DRUPAL_CACHE_GLOBAL,
  );

  $blocks['footer_block'] = array(
      'info' => t('Footer Block'),
      'cache' => DRUPAL_CACHE_GLOBAL,
  );

  $blocks['layout_manager_form_block'] = array(
      'info' => t('Layout manager form Block'),
      'cache' => DRUPAL_CACHE_GLOBAL,
  );

  $blocks['layout_widget_list_block'] = array(
      'info' => t('Layout widget list block'),
      'cache' => DRUPAL_CACHE_GLOBAL,
  );

  $blocks['layout_button_block'] = array(
      'info' => t('Layout button block'),
      'cache' => DRUPAL_CACHE_GLOBAL,
  );
  // for section cards
  $blocks['layout_section_widgets'] = array(
      'info' => t('Layout section widget block'),
      'cache' => DRUPAL_CACHE_GLOBAL,
  );
  // for section widgets
  $blocks['layout_section_widget2'] = array(
      'info' => t('Layout section widget2 block'),
      'cache' => DRUPAL_CACHE_GLOBAL,
  );

  $blocks['header_snap_post_block'] = array(
      'info' => t('Snap post Header Block'),
      'cache' => DRUPAL_CACHE_GLOBAL,
  );

  $blocks['header_sosorry_block'] = array(
      'info' => t('So sorry Header Block'),
      'cache' => DRUPAL_CACHE_GLOBAL,
  );

  $blocks['layout_custom_widget_list_block'] = array(
      'info' => t('Layout custom widget list block'),
      'cache' => DRUPAL_CACHE_GLOBAL,
  );

  $blocks['layout_special_widget_list_block'] = array(
      'info' => t('Layout Special widget list block'),
      'cache' => DRUPAL_CACHE_GLOBAL,
  );

  return $blocks;
}

/**
 * Implements hook_block_view()
 * {@inheritdoc}
 */
function itg_layout_manager_block_view($delta = '') {

  $block = array();

  switch ($delta) {
    case 'header_block':
      
      $arg = arg();
      // Code for ads
      drupal_add_js('http://cdn51.vizury.com/pam/api/pam.js?name=PAM_IND_PC_IndiaToday&id=7075&v=1.2&geo=ap', array('scope' => 'header'));
      // drupal_add_js('http://static.chartbeat.com/js/chartbeat_mab.js', array('scope' => 'header'));
      drupal_add_js('http://xp1.zedo.com/client/xp1/fmos.js', array('scope' => 'header'));
      drupal_add_js(drupal_get_path('module', 'itg_ads') . '/js/itg_ads_header_script.js', array('scope' => 'header'));

      $data['itg_main_manu_header'] = menu_tree('menu-itg-main-menu-header');
      $data['itg_top_manu_header'] = menu_tree('menu-itg-top-menu-header');
      $page_name = get_ads_page_name();
      $data['itg_top'] = get_ad_script($page_name);
      if (function_exists('get_second_level_menu')) {
        $second_level_menu = get_second_level_menu();
        foreach ($second_level_menu as $db_data) {
          $temp_data = array();
          $temp_data['db_data'] = $db_data;
          $temp_data['term_load'] = taxonomy_term_load($db_data['tid']);
          $data['menu_manager'][] = $temp_data;
        }
      }
      $block['content'] = theme('header_block', array('data' => $data));
      break;

    case 'footer_block':
      /* code for sso login */
      global $user, $base_url;
      if (array_key_exists(FRONT_USER, $user->roles)) {
        
        $settings = array();
        if ($user->uid > 0) {

          $arg = arg(2);
        }

        if (!empty($arg)) {
          $fin = $arg;
        }
        else {
          $fin = arg(2);
        }

        $settings['uid'] = $user->uid ? $user->uid : 0;
        $settings['check_sso_url'] = $fin;
        $settings['base_url'] = $base_url;
        drupal_add_js(array('itg_sso_login' => array('settings' => $settings)), array('type' => 'setting'));
        drupal_add_js(drupal_get_path('module', 'itg_sso_reg') . '/js/itg_sso_login.js', array('cache' => FALSE));
      }
      /* end here */
      $data = get_itg_footer_menu();
      $page_name = get_ads_page_name();
      $data['itg_top'] = get_ad_script($page_name);

      $block['content'] = theme('footer_block', array('data' => $data));
      break;

    case 'layout_manager_form_block':
      $layout_form = drupal_get_form('itg_layout_manager_page_setting_form');
      $data['layout_form'] = drupal_render($layout_form);
      $block['content'] = theme('layout_manager_block', array('data' => $data));
      break;
    // for admin widgets list in side bar
    case 'layout_widget_list_block':
      $template_id = check_template_of_section($_GET['section'], $_GET['template_name']);
      if (empty($template_id)) {
        $widget_array['default_widget'] = get_all_widgets_list_by_setting_page('Template widgets list');
      }

      $widget_array['poll_widget'] = get_widgets_poll_list();
      $block['content'] = theme('layout_widgets_list_block', array('data' => $widget_array));
      break;

    case 'layout_button_block':
      $block['content'] = theme('layout_buttons_block', array('data' => ''));
      break;
    // for section cards list in admin side bar
    case 'layout_section_widgets':
      $section_widgets_form = drupal_get_form('layout_section_widgets_search_form');
      $data['section_widgets_form'] = drupal_render($section_widgets_form);
      //condition base change widget
      if ($_GET["template_name"] == 'page--section_photo') {
        $widgets_type = 'photo_list_of_category';
      }
      elseif ($_GET["template_name"] == 'page--section_video') {
        $widgets_type = 'video_list_of_category';
      }
      else {
        $widgets_type = 'section_wise_order';
      }

      $data['widgets_list'] = display_section_widgets_list($_GET['section'], $_GET['template_name'], $widgets_type);

      $block['content'] = theme('layout_section_widgets_block', array('data' => $data));
      break;
    // for section widgets list in admin side bar
    case 'layout_section_widget2':
      $section_widgets_form = drupal_get_form('layout_section_widget2_search_form');
      $data['section_widget2_form'] = drupal_render($section_widgets_form);

      $widgets_type = 'section_widget2_wise_order';

      $data['widgets_list'] = display_section_widgets_list($_GET['section'], $_GET['template_name'], $widgets_type);

      $block['content'] = theme('layout_section_widget2_block', array('data' => $data));
      break;

    case 'header_snap_post_block':
      $block['content'] = theme('header_snap_post_block', array('data' => $data));
      break;

    case 'header_sosorry_block':
      $block['content'] = theme('header_so_sorry_block', array('data' => $data));
      break;

    case 'layout_custom_widget_list_block':
      $widget_array['custom_widget'] = get_html_custom_widget_list();
      $block['content'] = theme('layout_custom_widgets_list_block', array('data' => $widget_array));
      break;

    case 'layout_special_widget_list_block':
      $widget_array['special_widget'] = get_all_widgets_list_by_setting_page('Special');

      $block['content'] = theme('layout_special_widgets_list_block', array('data' => $widget_array));
      break;
  }

  return $block;
}

/**
 * Implements hook_theme().
 * {@inheritdoc}
 */
function itg_layout_manager_theme($existing, $type, $theme, $path) {

  $template_name = isset($_GET['template_name']) ? $_GET['template_name'] : "";

  if (!empty($template_name)) {
    $layout = array(
        'arguments' => array('form' => NULL),
        'template' => $template_name,
        'path' => drupal_get_path('theme', FRONT_THEME_NAME) . '/templates/layouts/' . arg(1)
    );
  }
  else {
    $layout = array();
  }

  $themes = array(
      'footer_block' => array(
          'variable' => array('data' => NULL),
          'template' => 'itg-footer',
          'path' => drupal_get_path('theme', FRONT_THEME_NAME) . '/templates/layouts',
      ),
      'header_block' => array(
          'variable' => array('data' => NULL),
          'template' => 'itg-header',
          'path' => drupal_get_path('theme', FRONT_THEME_NAME) . '/templates/layouts',
      ),
      'layout_manager_block' => array(
          'arguments' => array('form' => NULL),
          'template' => 'layout-manager-form-block',
          'path' => drupal_get_path('module', 'itg_layout_manager') . '/templates',
      ),
      'itg_layout_admin_page' => $layout,
      'layout_widgets_list_block' => array(
          'arguments' => array('form' => NULL),
          'template' => 'layout-widgets-list-block',
          'path' => drupal_get_path('module', 'itg_layout_manager') . '/templates',
      ),
      'layout_buttons_block' => array(
          'arguments' => array('form' => NULL),
          'template' => 'layout-buttons-block',
          'path' => drupal_get_path('module', 'itg_layout_manager') . '/templates',
      ),
      'layout_section_widgets_block' => array(
          'arguments' => array('form' => NULL),
          'template' => 'layout-section-widgets-block',
          'path' => drupal_get_path('module', 'itg_layout_manager') . '/templates',
      ),
      'layout_section_widget2_block' => array(
          'arguments' => array('form' => NULL),
          'template' => 'layout-section-widget2-block',
          'path' => drupal_get_path('module', 'itg_layout_manager') . '/templates',
      ),
      'header_snap_post_block' => array(
          'variable' => array('data' => NULL),
          'template' => 'itg-header-snap-post',
          'path' => drupal_get_path('theme', FRONT_THEME_NAME) . '/templates/layouts',
      ),
      'header_so_sorry_block' => array(
          'variable' => array('data' => NULL),
          'template' => 'itg-header-sosorry',
          'path' => drupal_get_path('theme', FRONT_THEME_NAME) . '/templates/layouts',
      ),
      'layout_custom_widgets_list_block' => array(
          'arguments' => array('form' => NULL),
          'template' => 'layout-custom-widgets-list-block',
          'path' => drupal_get_path('module', 'itg_layout_manager') . '/templates',
      ),
      'layout_special_widgets_list_block' => array(
          'arguments' => array('form' => NULL),
          'template' => 'layout-special-widgets-list-block',
          'path' => drupal_get_path('module', 'itg_layout_manager') . '/templates',
      ),
      'html_custom_widget' => array(
          'arguments' => array('form' => NULL),
          'template' => 'layout-html-custom-widget',
          'path' => drupal_get_path('module', 'itg_layout_manager') . '/templates',
      ),
  );

  return $themes;
}

/**
 * Implements hook_manager_preprocess_page().
 * {@inheritdoc}
 */
function itg_layout_manager_preprocess_page(&$vars) {
  global $theme;
  $arg = arg();

  $is_fron_page = drupal_is_front_page();

  if (!empty($is_fron_page) && $theme == FRONT_THEME_NAME) {
    $section = 'home_page';
    $template_name = 'page--front';
    $data = get_layout_details($section, $template_name, 'front');
    $data['big_story'] = get_itg_widget('big_story_format');
    $data['personlization'] = get_itg_widget('personlization');
    $vars['widget_data'] = $data;
    $vars['itg_ad'] = get_ad_script('Home');
  }

  //section template display on front
  if (($arg[0] == 'taxonomy' && $arg[1] == 'term' && is_numeric($arg[2])) && $theme == FRONT_THEME_NAME) {
    drupal_add_css(drupal_get_path('theme', 'itg') . '/css/jquery.mCustomScrollbar.min.css', array('scope' => 'footer'));
    drupal_add_js(drupal_get_path('theme', 'itg') . '/js/jquery.mCustomScrollbar.concat.min.js', array('scope' => 'footer'));
    drupal_add_js('', array('type' => 'inline', 'scope' => 'footer'));
    $query = db_select('taxonomy_term_hierarchy', 'tth');
    $query->fields('tth', array('parent'));
    $query->join('taxonomy_term_data', 'ttd', 'ttd.tid = tth.tid');
    $query->condition('tth.tid', $arg[2]);
    $query->condition('ttd.vid', 4);
    $parent_id = $query->execute()->fetchField();
    if ($parent_id == 0) {
      $tpl_name = get_template_name_by_section_name($arg[2]);
      $tid_val = $arg[2]; //section id
      /* if (!isset($tpl_name)) {
        $tid_val = '';
        $tpl_name = '';
        }
       */
      if (isset($tpl_name)) {
        drupal_set_title('');
        $data = get_layout_details($tid_val, $tpl_name, 'front');
        $vars['widget_data'] = $data;
        $tpl_name = str_replace('--', '__', $tpl_name);
        $vars['theme_hook_suggestions'][] = $tpl_name;
        $vars['itg_ad'] = get_ad_script($tid_val);
      }
    }
  }
}
