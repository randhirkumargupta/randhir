<?php

/**
 * Implementation of hook_form_alter().
 * @param array $form
 * @param array reference $form_state
 * @param type $form_id
 * @return array $form
 */
function itg_mobile_services_form_alter(&$form, &$form_state, $form_id) {
  switch ($form_id) {
    case 'clients_creation_node_form':

      unset($form['title']);
      unset($form['#metatags']);
                
      $form['actions']['cancel'] = array(
        '#markup' => l(t('Cancel'), 'clients-listing', array(
          'attributes' => array(
            'class' => 'button'
          )
        )),
        '#weight' => 21,
        '#value' => t('Cancel')
      );

      if (isset($form['field_email_address'])) {
        $form['field_email_address']['#element_validate'][] = 'itg_mobile_clients_validator';
      }

      if (isset($form['field_contact_tech_email_address'])) {
        $form['field_contact_tech_email_address']['#element_validate'][] = 'itg_mobile_clients_validator';
      }

      if (empty($_GET['destination'])) {
        $_GET['destination'] = 'clients-listing';
      }

      break;
    case 'service_creation_node_form':
      unset($form['#metatags']);
      $form['actions']['cancel'] = array(
        '#markup' => l(t('Cancel'), 'service-listing', array(
          'attributes' => array(
            'class' => 'button'
          )
        )),
        '#weight' => 21,
        '#value' => t('Cancel')
      );

      $form['field_service_regional']['#states'] = array(
        'visible' => array(
          ':input[name="field_service_type[und]"]' => array('checked' => TRUE),
        ),
      );

      $form['field_service_fetch_link']['#states'] = array(
        'visible' => array(
          ':input[name="field_content_sharing_mode[und]"]' => array('value' => '1'),
        ),
        'required' => array(
          ':input[name="field_content_sharing_mode[und]"]' => array('value' => '1'),
        ),
      );

      $form['field_email_address']['#states'] = array(
        'visible' => array(
          ':input[name="field_content_sharing_mode[und]"]' => array('value' => '3'),
        ),
        'required' => array(
          ':input[name="field_content_sharing_mode[und]"]' => array('value' => '3'),
        ),
      );

      if (empty($_GET['destination'])) {
        $_GET['destination'] = 'service-listing';
      }
      break;

    case 'client_service_association_node_form':
      unset($form['#metatags']);
      $form['actions']['cancel'] = array(
        '#markup' => l(t('Cancel'), 'clients-listing', array(
          'attributes' => array(
            'class' => 'button'
          )
        )),
        '#weight' => 21,
        '#value' => t('Cancel')
      );

      $form['field_service_title']['#prefix'] = '<div id="service_title_replace_wrapper">';
      $form['field_service_title']['#suffix'] = '</div>';

      $form['field_service_char_limit']['#prefix'] = '<div id="char_limit_replace_wrapper">';
      $form['field_service_char_limit']['#suffix'] = '</div>';

      $form['field_service_association_title'][LANGUAGE_NONE]['#ajax'] = array(
        'callback' => 'itg_mobile_services_custom_callback',
        'method' => 'replace', // the data would replace the field
        'effect' => 'fade',
        'event' => 'change', // On change of the selection this action would take place
      );
      unset($form['title']);
      $form['#after_build'][] = 'itg_service_association_after_build';

      if (empty($_GET['destination'])) {
        $_GET['destination'] = 'service-association-listing';
      }
      break;
    case 'create_content_node_form':
     // unset($form['title']);
      unset($form['#metatags']);

      $form['field_story_kicker_text']['#prefix'] = '<div id="client_entity_wrapper">';
      $form['field_story_kicker_text']['#suffix'] = '</div>';

      
     $query = db_select('node', 'node')
                ->fields('sa', array('nid', 'vid', 'title'))
                ->fields('cs', array('entity_id', 'revision_id'))
                ->fields('td', array('name', 'tid'));
  
      $query->leftJoin('field_data_field_client_selection', 'cs', "n.nid = cs.entity_id AND cs.entity_type = 'node' AND cs.deleted = '0'");
      $query->join('taxonomy_term_data', 'td', "cs.field_client_selection_target_id = td.tid");
      $query->leftJoin('field_data_field_service_association_title', 'sa', "node.nid = sa.entity_id AND (sa.entity_type = 'node' AND sa.deleted = '0'");
      $query->Join('node', 'service_association', "sa.field_service_association_title_target_id = service_association.nid");
      $query->condition('sa.status', 1, '=');
      $query->condition('node.type', array('client_service_association'), 'IN');
      $query->range(0, 10);
      dpq($query); // Display the query. 
      $result = $query->execute();
      
    while($record = $result->fetchAssoc()) {
        print_r($record);
    }

print $query;
       $form['field_service_association_title'][LANGUAGE_NONE]['#ajax'] = array(
        'callback' => 'itg_mobile_content_custom_callback',
        'wrapper' => 'client_entity_wrapper',
       // 'method' => 'replace', // the data would replace the field
        'effect' => 'fade',
        'event' => 'change', // On change of the selection this action would take place
         '#attached' => array(
          'js' => array(
            drupal_get_path('module', 'itg_mobile_services') . '/js/itg_mobile_services.js' => array(
              'scope' => 'footer',
            ),
          ),
        ),
      );
      break;
  }
  return $form;
}

/**
 * Validate custom handler.
 * @param array $form
 * @param array reference $form_state
 */
function itg_mobile_clients_validator($form, &$form_state) {

  $valid_email = $form_state['values']['field_email_address'][LANGUAGE_NONE][0]['value'];
  $valid_tech_email_address = $form_state['values']['field_contact_tech_email_address'][LANGUAGE_NONE][0]['value'];
  if (!empty($valid_email) && !valid_email_address($valid_email)) {
    form_set_error('field_email_address', 'Sorry. Your Business email address,' . $valid_email . ', is not valid.');
  }

  if (!empty($valid_tech_email_address) && !valid_email_address($valid_tech_email_address)) {
    form_set_error('field_contact_tech_email_address', 'Sorry. Your Technical email address,' . $valid_email . ', is not valid.');
  }
}

/**
 * after_build itg_service_association_after_build
 * @param array $form
 * @param array reference $form_state
 * @return array $form
 */
function itg_service_association_after_build($form, &$form_state) {
  $form['field_service_title'][LANGUAGE_NONE][0]['value']['#attributes']['readonly'] = 'readonly';
  $form['field_service_char_limit'][LANGUAGE_NONE][0]['value']['#attributes']['readonly'] = 'readonly';
  return $form;
}

/**
 * ajax service callback
 * @param array $form
 * @param array reference $form_state
 * @return array $form
 */
function itg_mobile_content_custom_callback(&$form, &$form_state) {
  $form_state['rebuild'] = true;  // not helping 
  $nid = '221'; //$form_state['values']['field_service_association_title'][LANGUAGE_NONE][0]['target_id'];
  $node = node_load($nid);
  //$item = entity_load('field_collection_item', array($item_id));
  // chain logo
  //$chainLogo = field_view_field('node', $node, 'field_service_content_type', '');
 $service_content_type = field_get_items('node', $node, 'field_service_content_type');
 $form['title'] =  array('#access' => TRUE);
 $form['field_story_large_image']['#access'] = FALSE;
 foreach ($service_content_type as $key=>$value) {
    $content_type  = field_view_value('node', $node, 'field_service_content_type', $service_content_type[$key], array());
    $content_value .=  render($content_type) . ",";
    if($content_value == 'Text') {
      $form['field_story_large_image']['#access'] = FALSE;
    }
}
  $content_result = rtrim($content_value, ',');  
  
  
  $form['field_story_kicker_text'][LANGUAGE_NONE][0]['value']['#value'] = $content_result;
  // remove space from title search field.
   watchdog("mobile_5", '<pre>' . print_r( $form_state, true) . '</pre>'); 
   
 // drupal_add_js("jQuery(document).ready(function(){ alert('hi'); jQuery('#edit-field-story-large-image-und-0-ajax-wrapper').hide();});", 'inline');
  

  
  //return $form['field_story_kicker_text'];
  //return $form;
    
    $commands = array();
    $commands[] = ajax_command_invoke('#edit-field-story-large-image-und-0-ajax-wrapper', 'hide');
    $commands[] = ajax_command_replace("#client_entity_wrapper", render($form['field_story_kicker_text']));
    $page = array('#type' => 'ajax', '#commands' => $commands);
    ajax_deliver($page);
}

/**
 * ajax service callback
 * @param array $form
 * @param array reference $form_state
 * @return array $form
 */
function itg_mobile_services_custom_callback($form, &$form_state) {
  //watchdog("mobile_", '<pre>' . print_r( $form_state['values']['field_service_association_title'][LANGUAGE_NONE][0]['target_id'], true) . '</pre>'); 
  $nid = $form_state['values']['field_service_association_title'][LANGUAGE_NONE][0]['target_id'];
  $node = node_load($nid);

  $service_title = $node->field_service_title[LANGUAGE_NONE][0]['value'];
  $service_char_limit = $node->field_service_char_limit[LANGUAGE_NONE][0]['value'];

  $form['field_service_title'][LANGUAGE_NONE][0]['value']['#value'] = ($service_title) ? $service_title : '';
  $form['field_service_char_limit'][LANGUAGE_NONE][0]['value']['#value'] = ($service_char_limit) ? $service_char_limit : '';

  return array(
    '#type' => 'ajax',
    '#commands' => array(
      ajax_command_replace("#service_title_replace_wrapper", render($form['field_service_title'])),
      ajax_command_replace("#char_limit_replace_wrapper", render($form['field_service_char_limit']))
    )
  );
}

/**
 * Implements hook_field_group_build_pre_render_alter.
 * @param array reference $element
 */
function itg_mobile_services_field_group_build_pre_render_alter(&$element) {

  if (isset($element['#form_id'])) {
    if ($element['#form_id'] == 'service_creation_node_form') {
      $element['group_service_ftp']['#states'] = array(
        'visible' => array(
          ':input[name="field_content_sharing_mode[und]"]' => array('value' => '2'),
        ),
        'required' => array(
          ':input[name="field_content_sharing_mode[und]"]' => array('value' => '2'),
        ),
      );

      $element['group_service_ftp']['#id'] = 'group_service_ftp';
    }
  }
}

/**
 * Implement hook_views_pre_render
 * @param Object $view
 */
function itg_mobile_services_views_pre_render(&$view) {
  //Add "Create Client" button on listing page of Client Details
  if (isset($view->name) && $view->name == "clients_details") {
    if (isset($view->current_display) && $view->current_display == "page") {
      $header_content_client = '<span class="count">Count(' . $view->total_rows . ')&nbsp;</span>';
      $header_content_client .= l(t('Create Client'), 'node/add/clients-creation');
      $header_content_client .= '<span class="client-services">&nbsp;' . l(t('Associate Client & Services'), 'node/add/client-service-association') . '&nbsp;</span>';
    }
    elseif (isset($view->current_display) && $view->current_display == "page_1") {
      $header_content_client = '<span class="count">Count(' . $view->total_rows . ')&nbsp;</span>';
      $header_content_client .= l(t('Create Service'), 'node/add/service-creation');
    }
    $view->attachment_before = $header_content_client;
  }
}

/**
 * Implementation of hook_form_views_exposed_form_alter().
 * @param array $form
 * @param array reference $form_state
 */
function itg_mobile_services_form_views_exposed_form_alter(&$form, &$form_state) {

  switch ($form['#id']) {
    case 'views-exposed-form-clients-details-page':
      $form['field_client_title_tid']['#attributes'] = array(
        'placeholder' => t('Title')
      );
      break;
    case 'views-exposed-form-clients-details-page-1':
      $form['title']['#attributes'] = array(
        'placeholder' => t('Title')
      );
  }
}
