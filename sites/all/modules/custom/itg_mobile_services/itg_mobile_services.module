<?php

/**
 * Implementation of hook_form_alter().
 * @param array $form
 * @param array reference $form_state
 * @param type $form_id
 * @return array $form
 */
function itg_mobile_services_form_alter(&$form, &$form_state, $form_id) {

  switch ($form_id) {
    case 'clients_creation_node_form':

      $form['title']['#type'] = 'hidden';
      $form['title']['#default_value'] = 'client';

      $form['metatags']['#type'] = 'hidden';
      unset($form['actions']['preview']);

      $form['actions']['cancel'] = array(
        '#markup' => l(t('Cancel'), 'clients-listing', array(
          'attributes' => array(
            'class' => 'button'
          )
        )),
        '#weight' => 21,
        '#value' => t('Cancel')
      );

      $form['#validate'][] = 'itg_mobile_clients_validator';

      $form['#after_build'][] = 'itg_mobile_client_after_build';
      $form['#submit'][] = 'itg_mobile_client_after_submit';

      if (empty($_GET['destination'])) {
        $_GET['destination'] = 'clients-listing';
      }

      break;
    case 'service_creation_node_form':
      unset($form['#metatags']);
      unset($form['actions']['preview']);

      // p($form);
      $form['actions']['cancel'] = array(
        '#markup' => l(t('Cancel'), 'service-listing', array(
          'attributes' => array(
            'class' => 'button'
          )
        )),
        '#weight' => 21,
        '#value' => t('Cancel')
      );



      $form['field_service_regional']['#states'] = array(
        'visible' => array(
          ':input[name="field_service_type[und]"]' => array('checked' => TRUE),
        ),
      );

      $form['field_service_fetch_link']['#states'] = array(
        'visible' => array(
          ':input[name="field_content_sharing_mode[und]"]' => array('value' => '1'),
        ),
        'required' => array(
          ':input[name="field_content_sharing_mode[und]"]' => array('value' => '1'),
        ),
      );

      $form['field_email_address']['#states'] = array(
        'visible' => array(
          ':input[name="field_content_sharing_mode[und]"]' => array('value' => '3'),
        ),
        'required' => array(
          ':input[name="field_content_sharing_mode[und]"]' => array('value' => '3'),
        ),
      );

      if (!empty($form['field_email_address'])) {
        $form['field_email_address']['#element_validate'][] = 'itg_mobile_service_validator';
      }

      drupal_add_js("jQuery(document).ready(function(){ jQuery('#edit-field-story-expiry-date-und-0-value-datepicker-popup-2').datepicker({minDate:0}).attr('readonly','readonly');  });", 'inline');

      $form['#validate'][] = 'itg_mobile_services_validator';

      $form['#after_build'][] = 'itg_mobile_service_after_build';

      if (empty($_GET['destination'])) {
        $_GET['destination'] = 'service-listing';
      }
      break;

    case 'client_service_association_node_form':
      unset($form['#metatags']);
      unset($form['actions']['preview']);
      $form['title']['#type'] = 'hidden';
      $form['title']['#default_value'] = 'service association';

      $form['actions']['cancel'] = array(
        '#markup' => l(t('Cancel'), 'service-association-listing', array(
          'attributes' => array(
            'class' => 'button'
          )
        )),
        '#weight' => 21,
        '#value' => t('Cancel')
      );

      $form['field_service_title']['#prefix'] = '<div id="service_title_replace_wrapper">';
      $form['field_service_title']['#suffix'] = '</div>';

      $form['field_service_char_limit']['#prefix'] = '<div id="char_limit_replace_wrapper">';
      $form['field_service_char_limit']['#suffix'] = '</div>';

      $form['field_service_association_title'][LANGUAGE_NONE]['#ajax'] = array(
        'callback' => 'itg_mobile_services_custom_callback',
        'method' => 'replace', // the data would replace the field
        'effect' => 'fade',
        'event' => 'change', // On change of the selection this action would take place
      );

      $form['field_client_selection'][LANGUAGE_NONE]['#ajax'] = array(
        'callback' => 'itg_mobile_content_selection_callback',
        'event' => 'change', // On change of the selection this action would take place
      );


      $form['#validate'][] = 'itg_mobile_client_association_validator';
      // $form['actions']['submit']['#submit'][] = 'itg_mobile_client_association_submit';
      $form['#after_build'][] = 'itg_service_association_after_build';
      $form['#submit'][] = 'itg_mobile_client_association_submit';

      break;
    case 'create_content_node_form':
      // unset($form['title']);
      //unset($form['#metatags']);
      $form['metatags']['#type'] = 'hidden';
      unset($form['actions']['preview']);

      $form['actions']['cancel'] = array(
        '#markup' => l(t('Cancel'), 'service-content-listing', array(
          'attributes' => array(
            'class' => 'button'
          )
        )),
        '#weight' => 21,
        '#value' => t('Cancel')
      );

      $form['#prefix'] = '<div id="client_error_wrapper">';
      $form['#suffix'] = '</div>';

      $form['title']['#prefix'] = '<div id="client_entity_wrapper">';
      $form['title']['#suffix'] = '</div>';

      $form['field_service_association_title'][LANGUAGE_NONE]['#ajax'] = array(
        'callback' => 'itg_mobile_content_custom_callback',
        'wrapper' => 'client_entity_wrapper',
        'effect' => 'fade',
        'event' => 'change', // On change of the selection this action would take place
      );

      $form['#validate'][] = 'itg_mobile_association_validator';
      $form['#after_build'][] = 'itg_service_content_after_build';
      $form['field_service_association_title'][LANGUAGE_NONE]['#options'] = itg_mobile_services_get_assoc_service();

      if (arg(0) == 'node' && arg(2) == 'edit' && $_REQUEST['destination'] == 'service-content-listing') {

        if (isset($form['field_story_expert_description'][LANGUAGE_NONE][0])) {
          $contact_text = !is_null($form['field_story_expert_description'][LANGUAGE_NONE][0]['value']['#default_value']) ? $form['field_story_expert_description'][LANGUAGE_NONE][0]['value']['#default_value'] : '';
        }

        if (isset($form['field_story_large_image'][LANGUAGE_NONE][0])) {
          $contact_image = !is_null($form['field_story_large_image'][LANGUAGE_NONE][0]['#default_value']['fid']) ? $form['field_story_large_image'][LANGUAGE_NONE][0]['#default_value']['fid'] : '';
        }


        if (isset($form['field_service_audio'][LANGUAGE_NONE][0])) {
          $contact_audio = !is_null($form['field_service_audio'][LANGUAGE_NONE][0]['#default_value']['fid']) ? $form['field_service_audio'][LANGUAGE_NONE][0]['#default_value']['fid'] : '';
        }

        if (isset($form['field_service_video'][LANGUAGE_NONE][0])) {
          $contact_video = !is_null($form['field_service_video'][LANGUAGE_NONE][0]['#default_value']['fid']) ? $form['field_service_video'][LANGUAGE_NONE][0]['#default_value']['fid'] : '';
        }

        if (!empty($contact_text)) {
          drupal_add_js("jQuery(document).ready(function(){ jQuery('#edit-field-story-expert-description').show(); });", 'inline');
        }
        else {
          drupal_add_js("jQuery(document).ready(function(){ jQuery('#edit-field-story-expert-description').hide(); });", 'inline');
        }


        if (!empty($contact_image)) {
          drupal_add_js("jQuery(document).ready(function(){ jQuery('#edit-field-story-large-image').show();});", 'inline');
        }
        else {
          drupal_add_js("jQuery(document).ready(function(){ jQuery('#edit-field-story-large-image').hide();});", 'inline');
        }

        if (!empty($contact_video)) {
          drupal_add_js("jQuery(document).ready(function(){ jQuery('#edit-field-service-video').show();});", 'inline');
        }
        else {
          drupal_add_js("jQuery(document).ready(function(){ jQuery('#edit-field-service-video').hide();});", 'inline');
        }

        if (!empty($contact_audio)) {
          drupal_add_js("jQuery(document).ready(function(){ jQuery('#edit-field-service-audio').show();});", 'inline');
        }
        else {
          drupal_add_js("jQuery(document).ready(function(){ jQuery('#edit-field-service-audio').hide();});", 'inline');
        }

        if (!empty($contact_text) && !empty($contact_image) && !empty($contact_video) && !empty($contact_audio)) {
          drupal_add_js("jQuery(document).ready(function(){ jQuery('#edit-field-story-expert-description').show(); jQuery('#edit-field-story-large-image').show();jQuery('#edit-field-service-audio').show();jQuery('#edit-field-service-video').show();});", 'inline');
        }
      }
      else {
        drupal_add_js("jQuery(document).ready(function(){ jQuery('#edit-field-story-expert-description').hide(); jQuery('#edit-field-story-large-image').hide();jQuery('#edit-field-service-audio').hide();jQuery('#edit-field-service-video').hide();});", 'inline');
      }

      if (empty($_GET['destination'])) {
        $_GET['destination'] = 'service-content-listing';
      }
      break;
  }
  return $form;
}

function itg_mobile_services_node_insert($node) {

  if ($node->type == 'client_service_association') {
    itg_mobile_services_token_insert($node);
  }
}

function itg_mobile_services_token_insert($node) {
  global $user;
  $timestamp = strtotime("now") . "_";
  $six_digit_random_number = mt_rand(100000, 999999);
  $timestamps = date("Y-m-d H:i:s");

  $node_nid = $node->nid;
  $client_selection = $node->field_client_selection;
  $field_client_selection = $client_selection[LANGUAGE_NONE];
  $association_title = $node->field_service_association_title;
  $association_nid = $association_title[LANGUAGE_NONE][0]['target_id'];

  $client_name = '';


  $node = node_load($association_nid);
  //$form_state['values']['title'] = $node->title;
  $delivery_mode = ($node->field_service_delivery_mode) ? $node->field_service_delivery_mode[LANGUAGE_NONE][0]['value'] : '';
  $service_frequency = ($node->field_service_frequency) ? $node->field_service_frequency[LANGUAGE_NONE][0]['value'] : '';
  $content_sharing_mode = ($node->field_content_sharing_mode) ? $node->field_content_sharing_mode[LANGUAGE_NONE][0]['value'] : '';
  $service_fetch_link = ($node->field_service_fetch_link) ? $node->field_service_fetch_link[LANGUAGE_NONE][0]['value'] : '';
  $ftp_ip_address = ($node->field_ftp_ip_address) ? $node->field_ftp_ip_address[LANGUAGE_NONE][0]['value'] : '';
  $ftp_username = ($node->field_ftp_username) ? $node->field_ftp_username[LANGUAGE_NONE][0]['value'] : '';
  $ftp_password = ($node->field_ftp_password) ? $node->field_ftp_password[LANGUAGE_NONE][0]['value'] : '';
  $service_email_address = ($node->field_email_address) ? $node->field_email_address[LANGUAGE_NONE][0]['value'] : '';
  $service_expiry_date = ($node->field_story_expiry_date) ? $node->field_story_expiry_date[LANGUAGE_NONE][0]['value'] : '';


  foreach ($field_client_selection as $key => $value) {
    //p($value);
    $client_id = $value['target_id'] . "_";
    $service_id = $association_nid . "_";
    $token = $client_id . $service_id . $timestamp . $six_digit_random_number;
    $str = base64_encode($token);

    $check_token = itg_mobile_service_check_token($value['target_id'], $association_nid);

    $id = db_insert('itg_client_token')
        ->fields(array(
          'nid' => $node_nid,
          'cid' => $value['target_id'],
          'sid' => $association_nid,
          'delivery_mode' => $delivery_mode,
          'service_frequency' => $service_frequency,
          'content_sharing_mode' => $content_sharing_mode,
          'service_fetch_link' => 'http://localhost/itgcms/mobile_services/token/' . $str,
          'ftp_ip_address' => $ftp_ip_address,
          'ftp_username' => $ftp_username,
          'ftp_password' => $ftp_password,
          'service_email_address' => $service_email_address,
          'service_expiry_date' => $service_expiry_date,
          'token' => $token,
          'created_by' => $user->name,
          'reset_by' => '',
          'created_date' => $timestamps
        ))
        ->execute();
  }
}

/**
 * Custom submit callback for genrate token.
 * @param type $form
 * @param type $form_state
 */
function itg_mobile_client_association_submit($form, &$form_state) {
  global $user;
  //p($form_state);
  //echo "arun";
  //exit;
  $node_nid = $form['nid']['#value'];
  $form_state['redirect'] = 'service-association-listing';
  $association_nid = $form_state['values']['field_service_association_title'][LANGUAGE_NONE][0]['target_id'];


  $node = node_load($association_nid);
  $form_state['values']['title'] = $node->title;
  $delivery_mode = ($node->field_service_delivery_mode) ? $node->field_service_delivery_mode[LANGUAGE_NONE][0]['value'] : '';
  $service_frequency = ($node->field_service_frequency) ? $node->field_service_frequency[LANGUAGE_NONE][0]['value'] : '';
  $content_sharing_mode = ($node->field_content_sharing_mode) ? $node->field_content_sharing_mode[LANGUAGE_NONE][0]['value'] : '';
  $service_fetch_link = ($node->field_service_fetch_link) ? $node->field_service_fetch_link[LANGUAGE_NONE][0]['value'] : '';
  $ftp_ip_address = ($node->field_ftp_ip_address) ? $node->field_ftp_ip_address[LANGUAGE_NONE][0]['value'] : '';
  $ftp_username = ($node->field_ftp_username) ? $node->field_ftp_username[LANGUAGE_NONE][0]['value'] : '';
  $ftp_password = ($node->field_ftp_password) ? $node->field_ftp_password[LANGUAGE_NONE][0]['value'] : '';
  $service_email_address = ($node->field_email_address) ? $node->field_email_address[LANGUAGE_NONE][0]['value'] : '';
  $service_expiry_date = ($node->field_story_expiry_date) ? $node->field_story_expiry_date[LANGUAGE_NONE][0]['value'] : '';

  //watchdog("association_nid", '<pre>' . print_r($service_fields_array, true) . '</pre>');
  // return $form;


  $timestamp = strtotime("now") . "_";
  $six_digit_random_number = mt_rand(100000, 999999);
  $timestamps = date("Y-m-d H:i:s");

  $field_client_selection = $form_state['values']['field_client_selection'][LANGUAGE_NONE];
  $client_name = '';
  foreach ($field_client_selection as $key => $value) {

    $client_id = $value['target_id'] . "_";
    $service_id = $association_nid . "_";
    $token = $client_id . $service_id . $timestamp . $six_digit_random_number;
    $str = base64_encode($token);

    $check_token = itg_mobile_service_check_token($value['target_id'], $association_nid);
    if ($check_token) {
      # new drupal 7 style sql insert
      $id = db_update('itg_client_token')
          ->fields(array(
            'delivery_mode' => $delivery_mode,
            'service_frequency' => $service_frequency,
            'content_sharing_mode' => $content_sharing_mode,
            'service_fetch_link' => 'http://localhost/itgcms/mobile_services/token/' . $str,
            'ftp_ip_address' => $ftp_ip_address,
            'ftp_username' => $ftp_username,
            'ftp_password' => $ftp_password,
            'service_email_address' => $service_email_address,
            'service_expiry_date' => $service_expiry_date,
            'token' => $token,
            'reset_by' => $user->name,
            'updated_date' => $timestamps  # use REQUEST_TIME or time() here if you want the date as a long
          ))
          ->condition('cid', $value['target_id'], '=')
          ->condition('sid', $association_nid, '=')
          ->execute();
    }
    else {
      # new drupal 7 style sql insert
//      $id = db_insert('itg_client_token')
//          ->fields(array(
//            'nid' => $node_nid,
//            'cid' => $value['target_id'],
//            'sid' => $association_nid,
//            'delivery_mode' => $delivery_mode,
//            'service_frequency' => $service_frequency,
//            'content_sharing_mode' => $content_sharing_mode,
//            'service_fetch_link' => 'http://localhost/itgcms/mobile_services/token/' . $str,
//            'ftp_ip_address' => $ftp_ip_address,
//            'ftp_username' => $ftp_username,
//            'ftp_password' => $ftp_password,
//            'service_email_address' => $service_email_address,
//            'service_expiry_date' => $service_expiry_date,
//            'token' => $token,
//            'created_by' => $user->name,
//            'reset_by' => '',
//            'created_date' => $timestamps
//          ))
//          ->execute();
    }

   // watchdog('sleetmute', "NID  = " . $id);

    // watchdog("token", '<pre>' . print_r($token, true) . '</pre>');
  }
  // $node->field_service_fetch_link[LANGUAGE_NONE][0]['value'] = 'http://localhost/itgcms/service?token='.$str;
  // field_attach_update('node', $node);
  return $form;
}

/**
 * Implements custom _form_validate() for taxonomy_form_term().
 */
function itg_mobile_client_association_validator($form, &$form_state) {

  $node_nid = $form['nid']['#value'];
  $association_nid = $form_state['values']['field_service_association_title'][LANGUAGE_NONE][0]['target_id'];

  $field_client_selection = $form_state['values']['field_client_selection'][LANGUAGE_NONE];
  $client_name = '';
  foreach ($field_client_selection as $key => $value) {

    $target_id = $value['target_id'];

    $query = db_select('node', 'node')->fields('node', array('nid'));
    $query->leftJoin('field_data_field_client_selection', 'cs', "node.nid = cs.entity_id AND cs.entity_type = 'node' AND cs.deleted = '0'");
    $query->leftJoin('field_data_field_service_association_title', 'sat', "node.nid = sat.entity_id AND sat.entity_type = 'node' AND sat.deleted = '0'");
    $query->condition('node.status', 1, '=');
    $query->condition('cs.field_client_selection_target_id', $target_id, '=');
    $query->condition('sat.field_service_association_title_target_id', $association_nid, '=');
    if (!empty($node_nid)) {
      $query->condition('node.nid', $node_nid, '<>');
    }

    $query->condition('node.type', array('client_service_association'), 'IN');
    $query->range(0, 1);

    $result = $query->execute();
    $record = $result->fetchAssoc();

    $nid = ($record['nid']) ? $record['nid'] : '';

    if ($nid) {
      $node = node_load($nid);
      $client_selection = field_get_items('node', $node, 'field_client_selection');
      foreach ($client_selection as $client_val) {
        // watchdog("target_id", '<pre>' . print_r($client_val['target_id'], true) . '</pre>');
        $tid = ($client_val['target_id']) ? $client_val['target_id'] : '';
        if ($tid) {
          $term = taxonomy_term_load($tid);

          $client_name .= $term->name . ", ";
        }
      }
      $client_name = rtrim($client_name, ',');

      if ($client_name) {
        form_set_error('field_client_selection', $client_name . 'is already associated this service');
      }
    }
  }
}

/**
 * Implements custom _form_validate() for taxonomy_form_term().
 */
function itg_mobile_services_validator($form, &$form_state) {

  $sharing_mode = trim($form_state['values']['field_content_sharing_mode'][LANGUAGE_NONE][0]['value']);
  if ($sharing_mode) {
    if ($sharing_mode == 1) {
      $fetch_link = trim($form_state['values']['field_service_fetch_link'][LANGUAGE_NONE][0]['value']);
      if (empty($fetch_link)) {
        form_set_error('field_service_fetch_link', t('Fetch link (our server) Required.'));
      }
    }
    if ($sharing_mode == 2) {
      $ftp_ip_address = trim($form_state['values']['field_ftp_ip_address'][LANGUAGE_NONE][0]['value']);
      $ftp_username = trim($form_state['values']['field_ftp_username'][LANGUAGE_NONE][0]['value']);
      $ftp_password = trim($form_state['values']['field_ftp_password'][LANGUAGE_NONE][0]['value']);

      if (empty($ftp_ip_address)) {
        form_set_error('field_ftp_ip_address', t('FTP IP Address Required.'));
      }

      if (empty($ftp_username)) {
        form_set_error('field_ftp_username', t('FTP Username Required.'));
      }

      if (empty($ftp_password)) {
        form_set_error('field_ftp_password', t('FTP Password Required.'));
      }
    }
    if ($sharing_mode == 3) {
      $email_address = trim($form_state['values']['field_email_address'][LANGUAGE_NONE][0]['value']);
      if (empty($email_address)) {
        form_set_error('field_email_address', t('Mail to Required.'));
      }
    }
  }
  // exit;
}

/**
 * Implements custom _form_validate() for taxonomy_form_term().
 */
function itg_mobile_association_validator($form, &$form_state) {

  $target_id = trim($form_state['values']['field_service_association_title'][LANGUAGE_NONE][0]['target_id']);
  $form_state['redirect'] = 'service-content-listing';
  if ($target_id) {

    $contact_text = ($form_state['values']['field_story_expert_description'][LANGUAGE_NONE][0]['value']) ? trim($form_state['values']['field_story_expert_description'][LANGUAGE_NONE][0]['value']) : '';
    $contact_image = ($form_state['values']['field_story_large_image'][LANGUAGE_NONE][0]['fid']) ? trim($form_state['values']['field_story_large_image'][LANGUAGE_NONE][0]['fid']) : '';
    $contact_audio = ($form_state['values']['field_service_audio'][LANGUAGE_NONE][0]['fid']) ? trim($form_state['values']['field_service_audio'][LANGUAGE_NONE][0]['fid']) : '';
    $contact_video = ($form_state['values']['field_service_video'][LANGUAGE_NONE][0]['fid']) ? trim($form_state['values']['field_service_video'][LANGUAGE_NONE][0]['fid']) : '';

    $result = get_service_association($target_id);
    $record = $result->fetchAssoc();
    $entity_id = ($record['entity_id']) ? $record['entity_id'] : '';
    if ($entity_id) {

      $node = node_load($entity_id);
      // watchdog("mobile_15", '<pre>' . print_r( $entity_id, true) . '</pre>'); 
      $service_content_type = field_get_items('node', $node, 'field_service_content_type');
      drupal_add_js("jQuery(document).ready(function(){ jQuery('#edit-field-story-expert-description').hide(); jQuery('#edit-field-story-large-image').hide();jQuery('#edit-field-service-audio').hide();jQuery('#edit-field-service-video').hide();});", 'inline');
      foreach ($service_content_type as $key => $value) {

        $content_type = field_view_value('node', $node, 'field_service_content_type', $service_content_type[$key], array());
        $content_result = render($content_type);
        $content_type_val = str_replace(' ', '', trim(strtolower($content_result)));


        if ($content_type_val == 'text') {
          if (empty($contact_text)) {
            form_set_error('field_story_expert_description', t('Content Text Required.'));
          }

          drupal_add_js("jQuery(document).ready(function(){ jQuery('#edit-field-story-expert-description').show(); });", 'inline');
        }

        if ($content_type_val == 'image') {
          if (empty($contact_image)) {
            form_set_error('field_story_large_image', t('Content Image Required.'));
          }

          drupal_add_js("jQuery(document).ready(function(){ jQuery('#edit-field-story-large-image').show();});", 'inline');
        }

        if ($content_type_val == 'video') {
          if (empty($contact_video)) {
            form_set_error('field_service_video', t('Content Video Required.'));
          }

          drupal_add_js("jQuery(document).ready(function(){ jQuery('#edit-field-service-video').show();});", 'inline');
        }

        if ($content_type_val == 'audio') {
          if (empty($contact_audio)) {
            form_set_error('field_service_audio', t('Content Audio Required.'));
          }

          drupal_add_js("jQuery(document).ready(function(){ jQuery('#edit-field-service-audio').show();});", 'inline');
        }

        if ($content_type_val == 'wap(image,text,videoandaudio)') {
          if (empty($contact_text)) {
            form_set_error('field_story_expert_description', t('Content Text Required.'));
          }
          if (empty($contact_image)) {
            form_set_error('field_story_large_image', t('Content Image Required.'));
          }
          if (empty($contact_video)) {
            form_set_error('field_service_video', t('Content Video Required.'));
          }
          if (empty($contact_audio)) {
            form_set_error('field_service_audio', t('Content Audio Required.'));
          }
          drupal_add_js("jQuery(document).ready(function(){ jQuery('#edit-field-story-expert-description').show(); jQuery('#edit-field-story-large-image').show();jQuery('#edit-field-service-audio').show();jQuery('#edit-field-service-video').show();});", 'inline');
        }
      }
    }
  }
}

/**
 * Validate custom handler.
 * @param array $form
 * @param array reference $form_state
 */
function itg_mobile_clients_validator($form, &$form_state) {
  //dpm($form_state['values']['title']); 
  $mobile_number = trim($form_state['values']['field_mobile_number'][LANGUAGE_NONE][0]['value']);
  $tech_mobile_number = trim($form_state['values']['field_contact_tech_mobile_number'][LANGUAGE_NONE][0]['value']);

  if (!empty($mobile_number) && strlen($mobile_number) > 0) {

    if (preg_match('/^(\+)[\s]*(.*)$/', $mobile_number)) {
      form_set_error('field_mobile_number', t('Business Mobile Number without the country code, please'));
    }
    if (!preg_match('/^[0-9]{9,10}$/', $mobile_number)) {
      form_set_error('field_mobile_number', t('Business Mobile Numbers should contain 10 digits'));
    }
    /*
      if (!preg_match('/^0[0-9]{9,10}$/', $mobile_number)) {
      form_set_error('field_mobile_number', t('Business Mobile Number should start with a 0'));
      }

     */
  }

  if (!empty($tech_mobile_number) && strlen($tech_mobile_number) > 0) {

    if (preg_match('/^(\+)[\s]*(.*)$/', $tech_mobile_number)) {
      form_set_error('field_contact_tech_mobile_number', t('Technical Mobile Number without the country code, please'));
    }
    if (!preg_match('/^[0-9]{9,10}$/', $tech_mobile_number)) {
      form_set_error('field_contact_tech_mobile_number', t('Technical Mobile Numbers should contain 10 digits'));
    }
  }

  $valid_email = $form_state['values']['field_email_address'][LANGUAGE_NONE][0]['value'];
  $valid_tech_email_address = $form_state['values']['field_contact_tech_email_address'][LANGUAGE_NONE][0]['value'];
  if (!empty($valid_email) && !valid_email_address($valid_email)) {
    form_set_error('field_email_address', 'Sorry. Your Business email address,' . $valid_email . ' is not valid.');
  }

  if (!empty($valid_tech_email_address) && !valid_email_address($valid_tech_email_address)) {
    form_set_error('field_contact_tech_email_address', 'Sorry. Your Technical email address,' . $valid_tech_email_address . ' is not valid.');
  }
}

/**
 * Validate custom handler.
 * @param array $form
 * @param array reference $form_state
 */
function itg_mobile_service_validator($form, &$form_state) {

  $valid_email = $form_state['values']['field_email_address'][LANGUAGE_NONE][0]['value'];
  if (!empty($valid_email) && !valid_email_address($valid_email)) {
    form_set_error('field_email_address', 'Sorry. Your email address ' . $valid_email . ', is not valid.');
  }
}

/**
 * after_build itg_service_association_after_build
 * @param array $form
 * @param array reference $form_state
 * @return array $form
 */
function itg_service_association_after_build($form, &$form_state) {
  $form_state['redirect'] = 'service-association-listing';
  $form['path']['#access'] = FALSE;
  $form['field_service_title'][LANGUAGE_NONE][0]['value']['#attributes']['readonly'] = 'readonly';
  $form['field_service_char_limit'][LANGUAGE_NONE][0]['value']['#attributes']['readonly'] = 'readonly';
  return $form;
}

/**
 * after_build itg_service_content_after_build
 * @param array $form
 * @param array reference $form_state
 * @return array $form
 */
function itg_service_content_after_build($form, &$form_state) {
  // p($form['field_story_large_image'][LANGUAGE_NONE]);
  $form['field_story_expert_description'][LANGUAGE_NONE][0]['value']['#title'] = '<label for="edit-field-story-expert-description-und-0-value">Content <span class="form-required" title="This field is required.">*</span></label>';
  $form['field_story_large_image'][LANGUAGE_NONE][0]['#title'] = '<label for="edit-field-story-large-image-und-0-upload">Content image <span class="form-required" title="This field is required.">*</span></label>';
  $form['field_service_audio'][LANGUAGE_NONE][0]['#title'] = '<label for="edit-field-service-audio-und-0-upload">Content Audio <span class="form-required" title="This field is required.">*</span></label>';
  $form['field_service_video'][LANGUAGE_NONE][0]['#title'] = '<label for="edit-field-service-video-und-0-upload">Content Video <span class="form-required" title="This field is required.">*</span></label>';
  $form['field_story_expert_description']['#suffix'] = '<span id="remain"></span>';
  drupal_add_js(drupal_get_path('module', 'itg_mobile_services') . '/js/itg_mobile_service.js', array('weight' => 1));
  $form['path']['#access'] = FALSE;
  $form['title']['#attributes']['readonly'] = 'readonly';
  $form_state['redirect'] = 'service-content-listing';
  return $form;
}

/**
 * after_build itg_mobile_client_after_submit
 * @param array $form
 * @param array reference $form_state
 * @return array $form
 */
function itg_mobile_client_after_submit($form, &$form_state) {
  $form_state['values']['title'] = taxonomy_term_load(trim($form_state['values']['field_client_title'][LANGUAGE_NONE][0]['tid']))->name;
  $form_state['redirect'] = 'clients-listing';
  return $form;
}

/**
 * after_build itg_mobile_client_after_build
 * @param array $form
 * @param array reference $form_state
 * @return array $form
 */
function itg_mobile_client_after_build($form, &$form_state) {
  $form['path']['#access'] = FALSE;
  $form_state['redirect'] = 'clients-listing';
  return $form;
}

/**
 * after_build itg_mobile_service_after_build
 * @param array $form
 * @param array reference $form_state
 * @return array $form
 */
function itg_mobile_service_after_build($form, &$form_state) {
  drupal_add_js(drupal_get_path('module', 'itg_mobile_services') . '/js/itg_mobile_new_service.js', array('weight' => 4, 'scope' => 'footer'));
  $form['path']['#access'] = FALSE;
  $form['field_story_expiry_date']['#attributes'] = array('readonly' => 'readonly');
  $form_state['redirect'] = 'service-listing';
  return $form;
}

/**
 * ajax service callback
 * @param array $form
 * @param array reference $form_state
 * @return array $form
 */
function itg_mobile_content_custom_callback(&$form, &$form_state) {
  //$form_state['rebuild'] = true;  // not helping
  $form_state['redirect'] = 'service-content-listing';
  $commands = array();
  $commands[] = ajax_command_invoke('#edit-field-story-expert-description', 'hide');
  $commands[] = ajax_command_invoke('#edit-field-story-large-image', 'hide');
  $commands[] = ajax_command_invoke('#edit-field-service-video', 'hide');
  $commands[] = ajax_command_invoke('#edit-field-service-audio', 'hide');
  $association_nid = $form_state['values']['field_service_association_title'][LANGUAGE_NONE][0]['target_id'];

  if ($association_nid) {
    //  watchdog("association_nid", '<pre>' . print_r( $association_nid, true) . '</pre>');

    $result = get_service_association($association_nid);

    $name = '';
    $entity_id = '';
    while ($record = $result->fetchAssoc()) {
      $entity_id = $record['entity_id'];
      $name .= $record['name'] . ",";
    }

    if (empty($entity_id)) {
      $form['title']['#description'] = 'service not associated.';
      $commands[] = ajax_command_replace("#client_entity_wrapper", render($form['title']));
      $page = array('#type' => 'ajax', '#commands' => $commands);
      ajax_deliver($page);
      exit;
    }
    else {
      $client_name = rtrim($name, ',');
      $node = node_load($entity_id);

      $service_content_type = field_get_items('node', $node, 'field_service_content_type');

      foreach ($service_content_type as $key => $value) {
        $content_type = field_view_value('node', $node, 'field_service_content_type', $service_content_type[$key], array());
        $content_result = render($content_type);
        $content_type_val = str_replace(' ', '', trim(strtolower($content_result)));
        if ($content_type_val == 'text') {
          $commands[] = ajax_command_invoke('#edit-field-story-expert-description', 'show');
        }
        elseif ($content_type_val == 'image') {
          $commands[] = ajax_command_invoke('#edit-field-story-large-image', 'show');
        }
        elseif ($content_type_val == 'video') {
          $commands[] = ajax_command_invoke('#edit-field-service-video', 'show');
        }
        elseif ($content_type_val == 'audio') {
          $commands[] = ajax_command_invoke('#edit-field-service-audio', 'show');
        }
        elseif ($content_type_val == 'wap(image,text,videoandaudio)') {
          $commands[] = ajax_command_invoke('#edit-field-story-expert-description', 'show');
          $commands[] = ajax_command_invoke('#edit-field-story-large-image', 'show');
          $commands[] = ajax_command_invoke('#edit-field-service-video', 'show');
          $commands[] = ajax_command_invoke('#edit-field-service-audio', 'show');
        }
      }
      $form['title']['#description'] = '';
      $form['title']['#value'] = $client_name;
      //watchdog("mobile_6", '<pre>' . print_r( $form['title'], true) . '</pre>'); 
      //field_story_expert_description
      $commands[] = ajax_command_replace("#client_entity_wrapper", render($form['title']));
      $page = array('#type' => 'ajax', '#commands' => $commands);
      ajax_deliver($page);
      exit;
    }
  }
}

/**
 * ajax service callback
 * @param array $form
 * @param array reference $form_state
 * @return array $form
 */
function itg_mobile_content_selection_callback(&$form, &$form_state) {
  $form_state['redirect'] = 'service-association-listing';
  $node_nid = $form['nid']['#value'];
  $association_nid = $form_state['values']['field_service_association_title'][LANGUAGE_NONE][0]['target_id'];
  $field_client_selection = $form_state['values']['field_client_selection'][LANGUAGE_NONE];
  $client_name = '';
  foreach ($field_client_selection as $key => $value) {

    $target_id = $value['target_id'];

    $query = db_select('node', 'node')->fields('node', array('nid'));
    $query->leftJoin('field_data_field_client_selection', 'cs', "node.nid = cs.entity_id AND cs.entity_type = 'node' AND cs.deleted = '0'");
    $query->leftJoin('field_data_field_service_association_title', 'sat', "node.nid = sat.entity_id AND sat.entity_type = 'node' AND sat.deleted = '0'");
    $query->condition('node.status', 1, '=');
    $query->condition('cs.field_client_selection_target_id', $target_id, '=');
    $query->condition('sat.field_service_association_title_target_id', $association_nid, '=');
    if (!empty($node_nid)) {
      $query->condition('node.nid', $node_nid, '<>');
    }

    $query->condition('node.type', array('client_service_association'), 'IN');
    $query->range(0, 1);

    $result = $query->execute();
    $record = $result->fetchAssoc();

    $nid = ($record['nid']) ? $record['nid'] : '';

    if ($nid) {
      $node = node_load($nid);
      $client_selection = field_get_items('node', $node, 'field_client_selection');
      foreach ($client_selection as $client_val) {
        // watchdog("target_id", '<pre>' . print_r($client_val['target_id'], true) . '</pre>');
        $tid = ($client_val['target_id']) ? $client_val['target_id'] : '';
        if ($tid) {
          $term = taxonomy_term_load($tid);

          $client_name .= $term->name . ", ";
        }
      }
      $client_name = rtrim($client_name, ',');

      if ($client_name) {
        // form_set_error('field_service_association_title',  $client_name . 'arun already associated this service.');
        return array(
          '#type' => 'ajax',
          '#commands' => array(
            ajax_command_remove("#edit-field-service-association-title .error", "<span class='error'>" . $client_name . " is already associated this service</span>"),
            ajax_command_append("#edit-field-service-association-title", "<span class='error'>" . $client_name . " is already associated this service</span>")
          )
        );
      }
    }
  }
}

/**
 * ajax service callback
 * @param array $form
 * @param array reference $form_state
 * @return array $form
 */
function itg_mobile_services_custom_callback($form, &$form_state) {
  $nid = $form_state['values']['field_service_association_title'][LANGUAGE_NONE][0]['target_id'];
  $node = node_load($nid);
  $form_state['redirect'] = 'service-association-listing';

  $service_title = $node->field_service_title[LANGUAGE_NONE][0]['value'];
  $service_char_limit = $node->field_service_char_limit[LANGUAGE_NONE][0]['value'];

  $form['field_service_title'][LANGUAGE_NONE][0]['value']['#value'] = ($service_title) ? $service_title : '';
  $form['field_service_char_limit'][LANGUAGE_NONE][0]['value']['#value'] = ($service_char_limit) ? $service_char_limit : '';

  return array(
    '#type' => 'ajax',
    '#commands' => array(
      ajax_command_replace("#service_title_replace_wrapper", render($form['field_service_title'])),
      ajax_command_replace("#char_limit_replace_wrapper", render($form['field_service_char_limit']))
    )
  );
}

/**
 * Implements hook_field_group_build_pre_render_alter.
 * @param array reference $element
 */
function itg_mobile_services_field_group_build_pre_render_alter(&$element) {

  if (isset($element['#form_id'])) {
    if ($element['#form_id'] == 'service_creation_node_form') {
      $element['group_service_ftp']['#states'] = array(
        'visible' => array(
          ':input[name="field_content_sharing_mode[und]"]' => array('value' => '2'),
        ),
        'required' => array(
          ':input[name="field_content_sharing_mode[und]"]' => array('value' => '2'),
        ),
      );

      $element['group_service_ftp']['#id'] = 'group_service_ftp';
    }
  }
}

/**
 * Implement hook_views_pre_render
 * @param Object $view
 */
function itg_mobile_services_views_pre_render(&$view) {
  //Add "Create Client" button on listing page of Client Details
  if (isset($view->name) && $view->name == "clients_details") {
    if (isset($view->current_display) && $view->current_display == "page") {
      $header_content_client = '<span class="count">Count(' . $view->total_rows . ')&nbsp;</span>';
      $header_content_client .= l(t('Create Client'), 'node/add/clients-creation', array('query' => array('destination' => 'clients-listing')));
      $header_content_client .= '<span class="client-services">&nbsp;' . l(t('Associate Client & Services'), 'node/add/client-service-association', array('query' => array('destination' => 'clients-listing'))) . '&nbsp;</span>';
    }
    elseif (isset($view->current_display) && $view->current_display == "page_1") {
      $header_content_client = '<span class="count">Count(' . $view->total_rows . ')&nbsp;</span>';
      $header_content_client .= l(t('Create Service'), 'node/add/service-creation', array('query' => array('destination' => 'service-listing')));
    }
    elseif (isset($view->current_display) && $view->current_display == "page_2") {
      $header_content_client = '<span class="count">Count(' . $view->total_rows . ')&nbsp;</span>';
      $header_content_client .= l(t('Associate Client & Services'), 'node/add/client-service-association', array('query' => array('destination' => 'service-association-listing')));
    }
    elseif (isset($view->current_display) && $view->current_display == "page_3") {
      $header_content_client = '<span class="count">Count(' . $view->total_rows . ')&nbsp;</span>';
      $header_content_client .= l(t('Create Content'), 'node/add/create-content', array('query' => array('destination' => 'service-content-listing')));
    }

    if (isset($header_content_client)) {
      $view->attachment_before = $header_content_client;
    }
  }
}

/**
 * Implements hook_menu().
 */
function itg_mobile_services_menu() {
  $items['countchar_validation'] = array(
    'page callback' => 'itg_countchar_validation',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['mobile_services/feed-generator-of-content'] = array(
    'page callback' => 'mobile_services_generator_of_content',
    'access arguments' => array('access itg story'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/itg_mobile_services.inc',
  );
  $items['mobile_services/%/autocomplete'] = array(
    'page callback' => 'itg_mobile_services_get_content_title',
    'access arguments' => array('access itg story'),
    'type' => MENU_CALLBACK,
  );

  $items['mobile_services/token/%'] = array(
    'page callback' => 'mobile_services_generator_data',
    'access arguments' => array('access itg story'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/itg_mobile_services.inc',
  );

  $items['mobile_services/token/list'] = array(
    'page callback' => 'mobile_services_token_list',
    'access arguments' => array('access itg story'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/itg_mobile_services.inc',
  );

  return $items;
}

/**
 * Implements ajax callback function
 */
function itg_countchar_validation() {
  $nodeid = $_POST['nidvalue'];
  $query = db_select('field_data_field_service_char_limit', 'fc');
  $query->fields('fc', array('field_service_char_limit_value'));
  $query->condition('entity_id', $nodeid, '=');
  $result = $query->execute()->fetchField();
  echo $result;
}

/**
 * Implementation of hook_form_views_exposed_form_alter().
 * @param array $form
 * @param array reference $form_state
 */
function itg_mobile_services_form_views_exposed_form_alter(&$form, &$form_state, $form_id) {

  switch ($form['#id']) {
    case 'views-exposed-form-clients-details-page':
      $form['field_client_title_tid']['#attributes'] = array(
        'placeholder' => t('Title')
      );
      break;
    case 'views-exposed-form-clients-details-page-1':
      $form['title']['#attributes'] = array(
        'placeholder' => t('Title')
      );
      $form['title']['#autocomplete_path'] = 'content-title-list/service_creation/autocomplete';
      break;
    case 'views-exposed-form-clients-details-page-3':
      $form['title']['#attributes'] = array(
        'placeholder' => t('Title')
      );
      $form['title']['#autocomplete_path'] = 'content-title-list/create_content/autocomplete';
      break;
    case 'views-exposed-form-clients-details-page-2':
      $form['field_service_title_value']['#attributes'] = array(
        'placeholder' => t('Title')
      );

      //$form['field_service_title_value']['#autocomplete_path'] = 'contentfield/client_service_association/autocomplete';
      //p($form);
      $form['field_service_association_title_target_id']['#autocomplete_path'] = 'mobile_services/service_creation/autocomplete';
      //p($form['field_service_title_value']);
      break;
  }
}

/**
 * custom get_service_association
 * @param int $target_id
 * @return array $query
 */
function get_service_association($target_id) {
  if (empty($target_id)) {
    return '';
  }
  $query = db_select('node', 'node')
      ->fields('service_asso', array('nid', 'vid', 'title'))
      ->fields('cs', array('entity_id', 'revision_id'))
      ->fields('td', array('name', 'tid'));

  $query->leftJoin('field_data_field_client_selection', 'cs', "node.nid = cs.entity_id AND cs.entity_type = 'node' AND cs.deleted = '0'");
  $query->join('taxonomy_term_data', 'td', "cs.field_client_selection_target_id = td.tid");
  $query->leftJoin('field_data_field_service_association_title', 'sat', "node.nid = sat.entity_id AND (sat.entity_type = 'node' AND sat.deleted = '0')");
  $query->Join('node', 'service_asso', "sat.field_service_association_title_target_id = service_asso.nid");
  $query->condition('service_asso.status', 1, '=');
  $query->condition('service_asso.nid', $target_id, '=');
  $query->condition('node.type', array('client_service_association'), 'IN');
  $query->range(0, 10);
  //dpq($query); // Display the query. 
  return $query->execute();
}

function get_report() {
  $service_id = '210';
  $client_id = '2569';
  /*
    $query = db_select('node', 'node')
    ->fields('sa', array('nid', 'title'));

    $query->leftJoin('field_data_field_client_selection', 'cs', "node.nid = cs.entity_id AND cs.entity_type = 'node' AND cs.deleted = '0'");
    $query->join('taxonomy_term_data', 'td', "cs.field_client_selection_target_id = td.tid");
    $query->leftJoin('field_data_field_service_association_title', 'sat', "node.nid = sat.entity_id AND (sat.entity_type = 'node' AND sat.deleted = '0')");
    $query->Join('node', 'sa', "sat.field_service_association_title_target_id = sa.nid");
    $query->condition('node.status', 1, '=');
    $query->condition('sat.field_service_association_title_target_id', $service_id, '=');
    $query->condition('cs.field_client_selection_target_id', $client_id, '=');
    $query->condition('node.type', array('client_service_association'), 'IN');
    $query->range(0, 1);

    //dpq($query); // Display the query.
    //return $query->execute();
    $result = $query->execute()->fetchAssoc();
    $nid = $result['nid'];
    $title = $result['title'];

    if($nid > 0) {
    $cquery = db_select('node', 'node')
    ->fields('node', array('nid', 'title', 'created', 'changed'));
    $cquery->leftJoin('field_data_field_service_association_title', 'sat', "node.nid = sat.entity_id AND sat.entity_type = 'node' AND sat.deleted = '0'");
    $cquery->leftJoin('node', 'node_sat', "sat.field_service_association_title_target_id = node_sat.nid");
    $cquery->condition('node.status', 1, '=');
    $cquery->condition('sat.field_service_association_title_target_id', $nid, '=');
    $cquery->condition('node.type', array('create_content'), 'IN');
    $cquery->range(0, 10);
    dpq($cquery); // Display the query.
    }


   */

  $query = db_query("SELECT content_text.entity_id AS content_nid,
content_text.field_story_expert_description_value AS content_text,
content_image.field_story_large_image_fid AS content_image_fid,
content_image.field_story_large_image_width AS content_image_width,
content_image.field_story_large_image_height AS content_image_height,
service_association.field_service_association_title_target_id AS association_service_target_id, 
service_association.entity_id AS service_nid,
service_content_type.field_service_content_type_value AS service_content_type,
service_content_count.field_service_content_count_value AS service_content_count_value,
service_header.field_header_value AS header,
service_footer.field_footer_value AS footer,
service_delivery.field_service_delivery_mode_value AS delivery_mode_value,
service_frequency.field_service_frequency_value AS frequency_value,
sharing_mode.field_content_sharing_mode_value AS sharing_mode,
service_expiry_date.field_story_expiry_date_value,
client_selection.field_client_selection_target_id AS client_target_id
FROM field_data_field_service_association_title service_association 
left join field_data_field_story_expert_description as content_text ON service_association.entity_id = content_text.entity_id
left join field_data_field_story_large_image as content_image ON service_association.entity_id = content_image.entity_id
left join field_data_field_service_content_type as service_content_type ON service_association.entity_id = service_content_type.entity_id
left join field_data_field_service_content_count as service_content_count ON service_association.entity_id = service_content_count.entity_id
left join field_data_field_header AS service_header ON service_association.entity_id = service_header.entity_id
left join field_data_field_footer AS service_footer ON service_association.entity_id = service_footer.entity_id
left join field_data_field_service_delivery_mode AS service_delivery ON service_association.field_service_association_title_target_id = service_delivery.entity_id
left join field_data_field_service_frequency AS service_frequency ON service_association.field_service_association_title_target_id = service_frequency.entity_id
left join field_data_field_content_sharing_mode AS sharing_mode ON service_association.field_service_association_title_target_id = sharing_mode.entity_id
left join field_data_field_story_expiry_date AS service_expiry_date ON service_association.field_service_association_title_target_id = service_expiry_date.entity_id
join field_data_field_client_selection AS client_selection ON service_association.entity_id = client_selection.entity_id
where client_selection.entity_id = '$client_id' AND service_association.field_service_association_title_target_id = '$service_id'");

  while ($data = db_fetch_object($result)) {
    //  print $row->zip;
//    echo "<pre>";
//    print_r($row);
//    echo "</pre>";
  }
}

// left end date and delivery mode, content type (Text / image / video)  and limit
// Field char limit not validete when enter content text (create content)
// for service fetch link
// join field_data_field_service_fetch_link AS service_fetch_link ON service_node.nid = service_fetch_link.entity_id 

/**
 * callback for all the mobile service association of title
 *  
 */
function itg_mobile_services_get_content_title($title) {

  if (strlen(trim($title)) > 0) {
    $content_type = arg(1);
    $options = '';
    $title = strtolower(trim($title));
    $query = db_select('node', 'n');
    $query->fields('n', array('title', 'nid'));
    $query->condition('title', '%' . $title . '%', 'LIKE');
    $query->condition('n.type', $content_type, '=');
    //$query->condition('n.status', 1, '=');
    $query->range(0, 20);

    $result = $query->execute();
    while ($record = $result->fetchAssoc()) {
      $options[$record['title'] . '(' . $record['nid'] . ')'] = $record['title'];
    }
    drupal_json_output($options);
  }
}

/**
 * Implementation of hook_views_query_alter
 * @param array reference $view
 * @param array reference $query
 */
function itg_mobile_services_views_query_alter(&$view, &$query) {

  if (isset($view->name) && $view->name === 'clients_details' && $view->current_display == 'page_2') {
    // p($view->query->where);
    if (isset($_GET['field_service_association_title_target_id'])) {
      $association = explode('(', $_GET['field_service_association_title_target_id']);
      $association = rtrim($association['1'], ')');
      $association_condition = $association;
      if (isset($view->query->where[1]['conditions'][1]['field'])) {
        foreach ($query->where[1]['conditions'] as $idx => $condition) {
          if (!is_object($condition['field']) && $condition['field'] == 'field_data_field_service_association_title.field_service_association_title_target_id') {

            $view->query->where[1]['conditions'][$idx]['value'] = $association_condition;
          }
        }
      }
      // p($view->query->where);
    }
  }
}

/**
 * Get check service token by token
 * @param type $token
 *   
 */
function itg_mobile_service_check_token($cid, $association_nid) {
  return $entity_id = db_select('itg_client_token', 't')
          ->fields('t', array('id'))
          ->condition('cid', $cid, '=')
          ->condition('sid', $association_nid, '=')
          ->range(0, 1)->execute()->rowCount();
}

/*
 * Implements function for get associated service
 * 
 */

function itg_mobile_services_get_assoc_service() {
  $query = db_query("SELECT DISTINCT node.title AS node_title, node.created AS node_created, node.nid AS nid FROM 
node node
INNER JOIN field_data_field_service_association_title field_data_field_service_association_title ON node.nid = field_data_field_service_association_title.field_service_association_title_target_id AND (field_data_field_service_association_title.entity_type = 'node' AND field_data_field_service_association_title.deleted = '0')
INNER JOIN node field_service_association_title_node ON field_data_field_service_association_title.entity_id = field_service_association_title_node.nid
LEFT JOIN field_data_field_story_expiry_date field_data_field_story_expiry_date ON node.nid = field_data_field_story_expiry_date.entity_id AND (field_data_field_story_expiry_date.entity_type = 'node' AND field_data_field_story_expiry_date.deleted = '0')
WHERE (( (node.status = '1') AND (node.type IN  (:type)) AND (field_data_field_story_expiry_date.field_story_expiry_date_value >= now()) ))
ORDER BY node_created DESC", array(':type' => 'service_creation'));
  //  p($sql);
  $result = $query->fetchAll();
  $options['_none'] = '- Select a value -';
  foreach ($result as $val) {
    $options[$val->nid] = $val->node_title;
  }
  return $options;
}
