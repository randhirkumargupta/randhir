<?php

/**
 * @file
 * Provides a nofollowlist filter.
 */

/**
 * Implements hook_help().
 */
function nofollowlist_help($path, $arg) {
  switch ($path) {
    case 'admin/help#nofollowlist':
      $output = '<p>' . t('This module implements a simple filter to add the nofollow tag to sites that are on your blacklist or to all sites except those on your whitelist.') . '</p>';
      return $output;
  }
}

/**
 * Implements hook_filter_tips()
 *
 * @param int $delta
 *   Used when a module defines more than one filter
 * @param unknown_type $format
 * @param boolean $long
 *   Determines whether the long or the short tip version is displayed
 * @return string
 *   The tip to be displayed
 */
function nofollowlist_filter_tips($delta, $format, $long = FALSE) {
  $output = t('Links to specified hosts will have a rel="nofollow" added to them.');
  return $output;
}

/**
 * Implements hook_filter_info().
 */
function nofollowlist_filter_info() {
  $filters['filter_nofollow'] = array(
    'title' => t('Nofollow list filter'),
    'description' => t('Links to specified hosts will have a rel="nofollow" added to them.'),
    'process callback' => '_nofollowlist_filter_filter_nofollow_process',
    'settings callback' => '_nofollowlist_filter_filter_nofollow_settings',
    'default settings' => array(
      'nofollowlist_option' => 'black',
      'nofollowlist_hosts' => '',
    ),
    'tips callback' => 'nofollowlist_filter_tips',
  );
  return $filters;
}

/**
 * Implements hook_filter_FILTER_process().
 */
function _nofollowlist_filter_filter_nofollow_process($text, $filter, $format, $langcode, $cache, $cache_id) {
  $list = preg_split('/\s+/', $filter->settings['nofollowlist_hosts']);

  $html_dom = filter_dom_load($text);
  $links = $html_dom->getElementsByTagName('a');
  foreach ($links as $link) {
    $url = parse_url($link->getAttribute('href'));
    // Handle whitelist option.
    if ($filter->settings['nofollowlist_option'] == 'white') {
      // If there is a host present and it is not in the list of allowed hosts
      // we add rel="nofollow".
      if (isset($url['host']) && ! in_array($url['host'], $list)) {
        $link->setAttribute('rel', 'nofollow');
      }
    }
    // Handle blacklist option.
    else if ($filter->settings['nofollowlist_option'] == 'black') {
      // If there is a host present and it is in the list of disallowed hosts we
      // add rel="nofollow".
      if (isset($url['host']) && in_array($url['host'], $list)) {
        $link->setAttribute('rel', 'nofollow');
      }
    }
  }
  $text = filter_dom_serialize($html_dom);
  return $text;
}

/**
 * Implements hook_filter_FILTER_settings().
 */
function _nofollowlist_filter_filter_nofollow_settings($form, &$form_state, $filter, $format, $defaults, $filters) {
  $filter->settings += $defaults;

  $elements = array();

  $elements['nofollowlist_option'] = array(
    '#type' => 'radios',
    '#title' => t('Hosts list option'),
    '#description' => t('If you choose the whitelist option, be sure to add your own site to the list!'),
    '#options' => array(
      'black' => t('Blacklist: Add rel="nofollow" to links leading to the listed hosts.'),
      'white' => t('Whitelist: Add rel="nofollow" to all links <b>except</b> the listed hosts.'),
    ),
    '#default_value' => $filter->settings['nofollowlist_option'],
  );

  $elements['nofollowlist_hosts'] = array(
    '#type' => 'textarea',
    '#title' => t('Nofollowlist hosts'),
    '#description' => t('Add one host per line. Ex: en.wikipedia.org'),
    '#default_value' => $filter->settings['nofollowlist_hosts'],
  );

  return $elements;
}
